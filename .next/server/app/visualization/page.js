/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/visualization/page";
exports.ids = ["app/visualization/page"];
exports.modules = {

/***/ "./action-async-storage.external":
/*!****************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external");

/***/ }),

/***/ "./request-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist\\client\\components\\action-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist\\client\\components\\request-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!*********************************************************************************************!*\
  !*** external "next/dist\\client\\components\\static-generation-async-storage.external.js" ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\static-generation-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?9d97\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\"TURBOPACK { transition: next-ssr }\";\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'visualization',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/visualization/page.tsx */ \"(rsc)/./src/app/visualization/page.tsx\")), \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\")), \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/visualization/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/visualization/page\",\n        pathname: \"/visualization\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZ2aXN1YWxpemF0aW9uJTJGcGFnZSZwYWdlPSUyRnZpc3VhbGl6YXRpb24lMkZwYWdlJmFwcFBhdGhzPSUyRnZpc3VhbGl6YXRpb24lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGdmlzdWFsaXphdGlvbiUyRnBhZ2UudHN4JmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsYUFBYSxzQkFBc0I7QUFDaUU7QUFDckM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLHVCQUF1Qiw0S0FBeUg7QUFDaEo7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx5QkFBeUIsb0pBQTRHO0FBQ3JJLG9CQUFvQiwwTkFBZ0Y7QUFDcEc7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ08sd0JBQXdCLDhHQUFrQjtBQUNqRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Lz84OWQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwiVFVSQk9QQUNLIHsgdHJhbnNpdGlvbjogbmV4dC1zc3IgfVwiO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXBhZ2UvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJ3Zpc3VhbGl6YXRpb24nLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHZpc3VhbGl6YXRpb25cXFxccGFnZS50c3hcIiksIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGFwcFxcXFx2aXN1YWxpemF0aW9uXFxcXHBhZ2UudHN4XCJdLFxuICAgICAgICAgIFxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXGxheW91dC50c3hcIiksIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGFwcFxcXFxsYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIiksIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHZpc3VhbGl6YXRpb25cXFxccGFnZS50c3hcIl07XG5leHBvcnQgeyB0cmVlLCBwYWdlcyB9O1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHbG9iYWxFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcnlcIjtcbmNvbnN0IF9fbmV4dF9hcHBfcmVxdWlyZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfX1xuY29uc3QgX19uZXh0X2FwcF9sb2FkX2NodW5rX18gPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoKVxuZXhwb3J0IGNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi92aXN1YWxpemF0aW9uL3BhZ2VcIjtcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvdmlzdWFsaXphdGlvbi9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi92aXN1YWxpemF0aW9uXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCIsXG4gICAgICAgIGFwcFBhdGhzOiBbXVxuICAgIH0sXG4gICAgdXNlcmxhbmQ6IHtcbiAgICAgICAgbG9hZGVyVHJlZTogdHJlZVxuICAgIH1cbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js */ \"(ssr)/./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNhcHAtcm91dGVyLmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNlcnJvci1ib3VuZGFyeS5qcyZtb2R1bGVzPUMlM0ElNUNVc2VycyU1Q2FydGluJTVDRG93bmxvYWRzJTVDTUVEVFJPTklDJTVDTUVEVFJPTklDJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDbGF5b3V0LXJvdXRlci5qcyZtb2R1bGVzPUMlM0ElNUNVc2VycyU1Q2FydGluJTVDRG93bmxvYWRzJTVDTUVEVFJPTklDJTVDTUVEVFJPTklDJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDbm90LWZvdW5kLWJvdW5kYXJ5LmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qcyZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQW1KO0FBQ25KLDBPQUF1SjtBQUN2Six3T0FBc0o7QUFDdEosa1BBQTJKO0FBQzNKLHNRQUFxSztBQUNySyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvPzY5ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGFwcC1yb3V0ZXIuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxub3QtZm91bmQtYm91bmRhcnkuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxccmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qc1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/providers.tsx */ \"(ssr)/./src/app/providers.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZm9udCU1Q2dvb2dsZSU1Q3RhcmdldC5jc3MlM0YlN0IlMjJwYXRoJTIyJTNBJTIyc3JjJTVDJTVDYXBwJTVDJTVDbGF5b3V0LnRzeCUyMiUyQyUyMmltcG9ydCUyMiUzQSUyMkludGVyJTIyJTJDJTIyYXJndW1lbnRzJTIyJTNBJTVCJTdCJTIyc3Vic2V0cyUyMiUzQSU1QiUyMmxhdGluJTIyJTVEJTdEJTVEJTJDJTIydmFyaWFibGVOYW1lJTIyJTNBJTIyaW50ZXIlMjIlN0QmbW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2FwcCU1Q2dsb2JhbHMuY3NzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNzcmMlNUNhcHAlNUNwcm92aWRlcnMudHN4JnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvPzI0N2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHByb3ZpZGVycy50c3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/DataVisualization/index.tsx */ \"(ssr)/./src/components/DataVisualization/index.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Layout.tsx */ \"(ssr)/./src/components/Layout.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNzcmMlNUNjb21wb25lbnRzJTVDRGF0YVZpc3VhbGl6YXRpb24lNUNpbmRleC50c3gmbW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2NvbXBvbmVudHMlNUNMYXlvdXQudHN4JnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvTUFBcUk7QUFDckkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Lz8wOTNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGNvbXBvbmVudHNcXFxcRGF0YVZpc3VhbGl6YXRpb25cXFxcaW5kZXgudHN4XCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxMYXlvdXQudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClientProviders)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction ClientProviders({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_1__.AppProvider, {\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\providers.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL3Byb3ZpZGVycy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFdUQ7QUFFeEMsU0FBU0MsZ0JBQWdCLEVBQUVDLFFBQVEsRUFBaUM7SUFDakYscUJBQ0UsOERBQUNGLGdFQUFXQTtrQkFDVEU7Ozs7OztBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvcHJvdmlkZXJzLnRzeD85MzI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBBcHBQcm92aWRlciB9IGZyb20gJ0AvbGliL2NvbnRleHQvQXBwQ29udGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENsaWVudFByb3ZpZGVycyh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIHJldHVybiAoXG4gICAgPEFwcFByb3ZpZGVyPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXBwUHJvdmlkZXI+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJBcHBQcm92aWRlciIsIkNsaWVudFByb3ZpZGVycyIsImNoaWxkcmVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/providers.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx":
/*!**************************************************************!*\
  !*** ./src/components/DataVisualization/AlluvialDiagram.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AlluvialDiagram)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n/* harmony import */ var d3_sankey__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-sankey */ \"(ssr)/./node_modules/d3-sankey/src/index.js\");\n/* harmony import */ var _shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/useVisualizationData */ \"(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\");\n/* harmony import */ var _shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/colorUtils */ \"(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\nconst availableFields = [\n    {\n        value: \"years_at_medtronic\",\n        label: \"Years at Medtronic\"\n    },\n    {\n        value: \"learning_style\",\n        label: \"Learning Style\"\n    },\n    {\n        value: \"shaped_by\",\n        label: \"Shaped By\"\n    },\n    {\n        value: \"peak_performance\",\n        label: \"Peak Performance\"\n    },\n    {\n        value: \"motivation\",\n        label: \"Motivation\"\n    }\n];\nconst YEARS_CATEGORIES = [\n    \"0-5\",\n    \"6-10\",\n    \"11-15\",\n    \"16-20\",\n    \"20+\"\n];\n// Move this function up so it is defined before use\nconst getValidYearsCategory = (years)=>{\n    if (typeof years !== \"number\" || isNaN(years) || years < 0) return \"0-5\";\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n};\n// Custom wave path generator for Sankey links with bounds checking\nfunction sankeyLinkWave(d, waveAmplitude = 8, waveFrequency = 1.1, chartWidth = 800, chartHeight = 600) {\n    // d has source/target: {x0, x1, y0, y1}\n    let x0 = d.source.x1;\n    let x1 = d.target.x0;\n    let y0 = d.y0;\n    let y1 = d.y1;\n    // Clamp coordinates to chart bounds to prevent overflow\n    x0 = Math.max(0, Math.min(chartWidth, x0));\n    x1 = Math.max(0, Math.min(chartWidth, x1));\n    y0 = Math.max(0, Math.min(chartHeight, y0));\n    y1 = Math.max(0, Math.min(chartHeight, y1));\n    const midX = (x0 + x1) / 2;\n    // Add a sine wave to the control points, but ensure they stay within bounds\n    const waveY0 = Math.max(0, Math.min(chartHeight, y0 + waveAmplitude * Math.sin(waveFrequency * Math.PI * 0.25)));\n    const waveY1 = Math.max(0, Math.min(chartHeight, y1 + waveAmplitude * Math.sin(waveFrequency * Math.PI * 0.75)));\n    return `M${x0},${y0}\n    C${midX},${waveY0} ${midX},${waveY1} ${x1},${y1}`;\n}\n// Note: Using theme-aware getNodeColor function from colorUtils\nfunction AlluvialDiagram({ width = 800, height = 600, autoPlay = true, onQuestionChange }) {\n    // Responsive: use state for width/height, fallback to props\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [containerWidth, setContainerWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(width);\n    const [containerHeight, setContainerHeight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(height);\n    // Responsive: observe container size\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        const observer = new window.ResizeObserver((entries)=>{\n            for (let entry of entries){\n                if (entry.contentRect) {\n                    setContainerWidth(entry.contentRect.width);\n                    setContainerHeight(entry.contentRect.height);\n                }\n            }\n        });\n        observer.observe(containerRef.current);\n        return ()=>observer.disconnect();\n    }, []);\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { data, isLoading, error } = (0,_shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_4__.useVisualizationData)();\n    const { settings, getCurrentThemeColors } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__.useAppContext)();\n    const [currentSource, setCurrentSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"years_at_medtronic\");\n    const [currentTarget, setCurrentTarget] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"learning_style\");\n    // Filter data based on test data setting\n    const filteredData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(data) || !data.length) return [];\n        return settings.useTestData ? data : data.filter((item)=>!item.test_data);\n    }, [\n        data,\n        settings.useTestData\n    ]);\n    // Compute sources and targets with validation\n    const sources = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(filteredData) || !filteredData.length) return [];\n        if (currentSource === \"years_at_medtronic\") {\n            return YEARS_CATEGORIES.filter((cat)=>filteredData.some((d)=>getValidYearsCategory(d.years_at_medtronic || 0) === cat));\n        } else {\n            return Array.from(new Set(filteredData.map((d)=>d[currentSource]))).filter((value)=>typeof value === \"string\" && value.length > 0);\n        }\n    }, [\n        filteredData,\n        currentSource\n    ]);\n    const targets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(filteredData) || !filteredData.length) return [];\n        if (currentTarget === \"years_at_medtronic\") {\n            return YEARS_CATEGORIES.filter((cat)=>filteredData.some((d)=>getValidYearsCategory(d.years_at_medtronic || 0) === cat));\n        } else {\n            // Sort target nodes consistently to maintain fixed positions\n            return Array.from(new Set(filteredData.map((d)=>currentTarget === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentTarget]))).filter((value)=>typeof value === \"string\" && value.length > 0).sort(); // Add consistent sorting\n        }\n    }, [\n        filteredData,\n        currentTarget\n    ]);\n    // --- Responsive chart sizing based on data size ---\n    // Set sensible min/max chart dimensions\n    const MIN_CHART_HEIGHT = 180;\n    const MAX_CHART_HEIGHT = 700;\n    const MIN_CHART_WIDTH = 320;\n    const MAX_CHART_WIDTH = 1400;\n    // Calculate node count for sizing\n    const nodeCount = Math.max(sources.length, targets.length, 1);\n    // Calculate available height for nodes and paddings\n    let availableHeight = Math.max(MIN_CHART_HEIGHT, Math.min(containerHeight - 40, MAX_CHART_HEIGHT));\n    // For very sparse data, shrink the chart height\n    if (nodeCount <= 3) {\n        availableHeight = Math.max(MIN_CHART_HEIGHT, Math.min(320, availableHeight));\n    }\n    // For very dense data, allow more height\n    if (nodeCount >= 10) {\n        availableHeight = Math.min(MAX_CHART_HEIGHT, Math.max(availableHeight, 500));\n    }\n    // Node height and padding logic\n    const minNodeHeight = 16;\n    const maxNodeHeight = nodeCount <= 3 ? 36 : 48; // Smaller max for sparse data\n    const minPadding = 8;\n    let nodeHeight = Math.floor((availableHeight - (nodeCount + 1) * minPadding) / nodeCount);\n    nodeHeight = Math.max(minNodeHeight, Math.min(nodeHeight, maxNodeHeight));\n    let nodePadding = (availableHeight - nodeCount * nodeHeight) / (nodeCount + 1);\n    nodePadding = Math.max(nodePadding, minPadding);\n    // Dynamically scale label font size with node height (clamp between 12px and 28px)\n    const labelFontSize = Math.max(12, Math.min(28, Math.floor(nodeHeight * 0.5)));\n    // --- Dynamic margin calculation for full label visibility ---\n    // Helper to measure text width in px\n    function measureTextWidth(text, font) {\n        if (true) return 100; // fallback for SSR\n        if (!measureTextWidth._canvas) {\n            measureTextWidth._canvas = document.createElement(\"canvas\");\n        }\n        const canvas = measureTextWidth._canvas;\n        const context = canvas.getContext(\"2d\");\n        if (!context) return 100;\n        context.font = font;\n        return context.measureText(text).width;\n    }\n    // Font for measuring\n    const labelFont = `bold ${labelFontSize}px Avenir Next World, -apple-system, BlinkMacSystemFont, 'SF Pro', 'Roboto', sans-serif`;\n    const allLabels = [\n        ...sources,\n        ...targets\n    ];\n    const labelWidths = allLabels.map((label)=>measureTextWidth(label, labelFont));\n    const maxLabelWidth = Math.max(...labelWidths, 80); // fallback min\n    const labelPadding = 24;\n    const margin = {\n        top: 20,\n        right: maxLabelWidth + labelPadding,\n        bottom: 20,\n        left: maxLabelWidth + labelPadding\n    };\n    // Responsive chart width\n    let chartWidth = Math.max(MIN_CHART_WIDTH, Math.min(containerWidth - margin.left - margin.right, MAX_CHART_WIDTH));\n    let chartHeight = availableHeight;\n    // If very sparse, shrink width too\n    if (nodeCount <= 3) {\n        chartWidth = Math.max(MIN_CHART_WIDTH, Math.min(chartWidth, 480));\n    }\n    // If very dense, allow more width\n    if (nodeCount >= 10) {\n        chartWidth = Math.min(MAX_CHART_WIDTH, Math.max(chartWidth, 900));\n    }\n    // Debug logging\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"[AlluvialDiagram Debug]\");\n        console.log(\"  Container:\", containerWidth, \"x\", containerHeight);\n        console.log(\"  Chart:\", chartWidth, \"x\", chartHeight);\n        console.log(\"  Node count (sources/targets):\", sources.length, targets.length);\n        console.log(\"  nodeHeight:\", nodeHeight);\n        console.log(\"  nodePadding:\", nodePadding);\n        console.log(\"  labelFontSize:\", labelFontSize);\n    }, [\n        containerWidth,\n        containerHeight,\n        chartWidth,\n        chartHeight,\n        sources.length,\n        targets.length,\n        nodeHeight,\n        nodePadding,\n        labelFontSize\n    ]);\n    // Use refs to track current values without triggering re-renders\n    const currentSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(currentSource);\n    const currentTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(currentTarget);\n    // Update refs when state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        currentSourceRef.current = currentSource;\n    }, [\n        currentSource\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        currentTargetRef.current = currentTarget;\n    }, [\n        currentTarget\n    ]);\n    const [insights, setInsights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [hoveredNode, setHoveredNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredLink, setHoveredLink] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastCategoryChange, setLastCategoryChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        source: currentSource,\n        target: currentTarget\n    });\n    const [currentTargetIndex, setCurrentTargetIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [hoveredSourceIndex, setHoveredSourceIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredTargetIndex, setHoveredTargetIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isInFullOpacityState, setIsInFullOpacityState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [animationPhase, setAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentSourceIndex: 0,\n        currentTargetIndex: 0,\n        isPaused: false,\n        pausedAt: Date.now(),\n        resumeFrom: null,\n        cycleCount: 0\n    });\n    // Check for reduced motion preference\n    const prefersReducedMotion = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (true) return false;\n        return window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\n    }, []);\n    // Adjust animation durations based on motion preference\n    const animationDurations = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const baseSpeed = settings.autoPlaySpeed || 3000;\n        const reductionFactor = prefersReducedMotion ? 0.5 : 1;\n        return {\n            stepDuration: Math.max(800, baseSpeed / 8 * reductionFactor),\n            pauseDuration: Math.max(400, baseSpeed / 12 * reductionFactor),\n            categoryPauseDuration: Math.max(1500, baseSpeed / 3 * reductionFactor),\n            linkTransitionDuration: prefersReducedMotion ? 400 : 750\n        };\n    }, [\n        settings.autoPlaySpeed,\n        prefersReducedMotion\n    ]);\n    // Get visual order of source nodes (top-to-bottom as they appear)\n    const sortedSources = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!filteredData.length || !chartWidth || !chartHeight) return sources;\n        const sourcesForNodes = [\n            ...sources\n        ];\n        if (currentSource === \"years_at_medtronic\") {\n            sourcesForNodes.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sourcesForNodes.sort();\n        }\n        // Create Sankey layout to get visual order\n        const nodes = [\n            ...sourcesForNodes.map((name)=>({\n                    id: `${currentSource}:${name}`,\n                    name,\n                    category: currentSource\n                })),\n            ...targets.map((name)=>({\n                    id: `${currentTarget}:${name}`,\n                    name,\n                    category: currentTarget\n                }))\n        ];\n        const linksMap = new Map();\n        filteredData.forEach((d)=>{\n            const source = currentSource === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentSource];\n            const target = currentTarget === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentTarget];\n            if (!sourcesForNodes.includes(source) || !targets.includes(target)) return;\n            const sourceId = `${currentSource}:${source}`;\n            const targetId = `${currentTarget}:${target}`;\n            const key = `${sourceId}→${targetId}`;\n            if (!linksMap.has(key)) {\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 0\n                });\n            }\n            linksMap.get(key).value += 1;\n        });\n        const links = Array.from(linksMap.values());\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartWidth,\n                chartHeight\n            ]\n        ]);\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        // Get source nodes in visual order (top to bottom)\n        const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource).sort((a, b)=>a.y0 - b.y0);\n        return sourceNodes.map((d)=>d.name);\n    }, [\n        filteredData,\n        sources,\n        targets,\n        currentSource,\n        currentTarget,\n        chartWidth,\n        chartHeight,\n        nodePadding\n    ]);\n    // Enhanced animation function with comprehensive debug tracking\n    const animate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        // Check if animation is paused\n        if (animationRef.current.isPaused) {\n            console.log(\"⏸️  Animation is paused, skipping cycle\");\n            return;\n        }\n        if (!animationRef.current.running || !filteredData.length) {\n            console.log(\"❌ Animation stopped:\", {\n                running: animationRef.current.running,\n                dataLength: filteredData.length\n            });\n            return;\n        }\n        // Safety check: prevent infinite loops\n        if (animationRef.current.cycleCount > 1000) {\n            console.log(\"\\uD83D\\uDED1 Animation cycle limit reached, resetting\");\n            animationRef.current.cycleCount = 0;\n            animationRef.current.currentSourceIndex = 0;\n            animationRef.current.currentTargetIndex = 0;\n        }\n        // Increment cycle counter\n        animationRef.current.cycleCount++;\n        // Set animation phase to highlighting\n        setAnimationPhase(\"highlighting\");\n        setIsInFullOpacityState(false);\n        // Set the hovered source index to match the animation\n        setHoveredSourceIndex(animationRef.current.currentSourceIndex);\n        const targetOptions = availableFields.filter((f)=>f.value !== currentSourceRef.current).map((f)=>f.value);\n        // Debug: Log the target options to verify they're correct\n        if (animationRef.current.currentSourceIndex === 0) {\n            console.log(\"\\uD83C\\uDFAF Available target options for\", currentSourceRef.current, \":\", targetOptions);\n        }\n        // COMPREHENSIVE DEBUG: Log current state with full detail\n        console.log(\"\\uD83D\\uDD0D ANIMATION CYCLE DEBUG:\", {\n            \"\\uD83D\\uDCCD Current Position\": {\n                sourceIndex: animationRef.current.currentSourceIndex,\n                targetIndex: animationRef.current.currentTargetIndex,\n                sourceName: sortedSources[animationRef.current.currentSourceIndex],\n                targetName: currentTargetRef.current\n            },\n            \"\\uD83D\\uDCCA Categories\": {\n                currentSource: currentSourceRef.current,\n                currentTarget: currentTargetRef.current,\n                sourceOptions: availableFields.map((f)=>f.value),\n                targetOptions\n            },\n            \"\\uD83D\\uDCC8 Progress\": {\n                sourceProgress: `${animationRef.current.currentSourceIndex + 1}/${sortedSources.length}`,\n                targetProgress: `${animationRef.current.currentTargetIndex + 1}/${targetOptions.length}`,\n                isLastSource: animationRef.current.currentSourceIndex >= sortedSources.length - 1,\n                hasMoreTargets: animationRef.current.currentTargetIndex < targetOptions.length - 1\n            },\n            \"\\uD83C\\uDFAF Sources\": sortedSources,\n            \"\\uD83C\\uDFAF Targets\": targetOptions,\n            \"⏱️  Timings\": animationDurations\n        });\n        if (animationRef.current.currentSourceIndex < sortedSources.length - 1) {\n            // Move to next source\n            const nextTimeout = animationDurations.stepDuration + animationDurations.pauseDuration;\n            const progress = `${animationRef.current.currentSourceIndex + 1}/${sortedSources.length}`;\n            console.log(`🎯 Source ${progress}: Highlighting '${sortedSources[animationRef.current.currentSourceIndex]}' → '${currentTargetRef.current}' for ${nextTimeout}ms`);\n            animationRef.current.timer = setTimeout(()=>{\n                if (!animationRef.current.running || animationRef.current.isPaused) return;\n                animationRef.current.currentSourceIndex++;\n                animate();\n            }, nextTimeout);\n        } else {\n            // After last source, check if we need to cycle targets or change source category\n            console.log(\"\\uD83D\\uDD0D END OF SOURCES - Checking target cycling:\", {\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                targetOptionsLength: targetOptions.length,\n                hasMoreTargets: animationRef.current.currentTargetIndex < targetOptions.length - 1,\n                availableTargets: targetOptions\n            });\n            if (animationRef.current.currentTargetIndex < targetOptions.length - 1) {\n                // Still have more target categories to cycle through\n                const targetProgress = `${animationRef.current.currentTargetIndex + 2}/${targetOptions.length}`;\n                console.log(`🔄 ✅ COMPLETED ALL SOURCES for '${currentTargetRef.current}', moving to next target (${targetProgress})`);\n                // Clear any existing timer to prevent conflicts\n                if (animationRef.current.timer) {\n                    clearTimeout(animationRef.current.timer);\n                    animationRef.current.timer = null;\n                }\n                animationRef.current.timer = setTimeout(()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    setAnimationPhase(\"transitioning\");\n                    // Move to next target category\n                    animationRef.current.currentTargetIndex++;\n                    const nextTarget = targetOptions[animationRef.current.currentTargetIndex];\n                    console.log(\"\\uD83C\\uDFAF ✨ NEW TARGET CATEGORY:\", nextTarget, `(${animationRef.current.currentTargetIndex + 1}/${targetOptions.length})`);\n                    console.log(\"\\uD83D\\uDD0D Target progression debug:\", {\n                        previousTarget: currentTargetRef.current,\n                        nextTarget,\n                        currentTargetIndex: animationRef.current.currentTargetIndex,\n                        allTargetOptions: targetOptions\n                    });\n                    setCurrentTarget(nextTarget);\n                    setLastCategoryChange({\n                        source: currentSourceRef.current,\n                        target: nextTarget\n                    });\n                    onQuestionChange?.(currentSourceRef.current, nextTarget);\n                    // Reset source index and restart with new target\n                    animationRef.current.currentSourceIndex = 0;\n                    // Start the next cycle after a brief pause\n                    setTimeout(()=>{\n                        if (animationRef.current.running && !animationRef.current.isPaused) {\n                            animate();\n                        }\n                    }, animationDurations.categoryPauseDuration);\n                }, animationDurations.categoryPauseDuration);\n            } else {\n                // We've cycled through all targets, now change the source category\n                console.log(`🔄 ✨ COMPLETED ALL TARGETS for '${currentSourceRef.current}' - Moving to next source category! ✨`);\n                // Clear any existing timer to prevent conflicts\n                if (animationRef.current.timer) {\n                    clearTimeout(animationRef.current.timer);\n                    animationRef.current.timer = null;\n                }\n                animationRef.current.timer = setTimeout(()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    setAnimationPhase(\"transitioning\");\n                    // Move to next source category\n                    const sourceOptions = availableFields.map((f)=>f.value);\n                    const currentSourceIndex = sourceOptions.indexOf(currentSourceRef.current);\n                    const nextSourceIndex = (currentSourceIndex + 1) % sourceOptions.length;\n                    const nextSource = sourceOptions[nextSourceIndex];\n                    console.log(\"\\uD83C\\uDFAF \\uD83C\\uDD95 NEW SOURCE CATEGORY:\", nextSource, \"- Starting fresh cycle with all targets\");\n                    // Calculate target options for the NEW source (including years_at_medtronic)\n                    const newTargetOptions = availableFields.filter((f)=>f.value !== nextSource).map((f)=>f.value);\n                    console.log(\"\\uD83D\\uDD0D New target options for\", nextSource, \":\", newTargetOptions);\n                    setCurrentSource(nextSource);\n                    // Reset both indices and start with first target again\n                    animationRef.current.currentSourceIndex = 0;\n                    animationRef.current.currentTargetIndex = 0;\n                    const firstTarget = newTargetOptions[0];\n                    setCurrentTarget(firstTarget);\n                    setLastCategoryChange({\n                        source: nextSource,\n                        target: firstTarget\n                    });\n                    onQuestionChange?.(nextSource, firstTarget);\n                    // Start the next cycle after a longer pause\n                    setTimeout(()=>{\n                        if (animationRef.current.running && !animationRef.current.isPaused) {\n                            animate();\n                        }\n                    }, animationDurations.categoryPauseDuration * 1.5); // Longer pause for source category change\n                }, animationDurations.categoryPauseDuration);\n            }\n        }\n    }, [\n        data.length,\n        sortedSources.length,\n        onQuestionChange,\n        animationDurations,\n        availableFields\n    ]);\n    // Animation effect - restart when settings change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFAC Animation useEffect triggered:\", {\n            autoPlay,\n            isAutoPlayEnabled: settings.isAutoPlayEnabled,\n            dataLength: data.length,\n            svgRefExists: !!svgRef.current,\n            currentSource,\n            currentTarget,\n            autoPlaySpeed: settings.autoPlaySpeed,\n            isRunning: animationRef.current.running\n        });\n        if (!autoPlay || !settings.isAutoPlayEnabled) {\n            console.log(\"❌ Animation disabled\");\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setIsInFullOpacityState(true);\n            return;\n        }\n        if (!filteredData.length) {\n            console.log(\"❌ No data available for animation\");\n            return;\n        }\n        if (!svgRef.current) {\n            console.log(\"❌ SVG ref not available\");\n            return;\n        }\n        // Restart animation when speed changes or on major changes\n        if (animationRef.current.running) {\n            console.log(\"\\uD83D\\uDD04 Restarting animation with new settings:\", {\n                sourceCategory: currentSource,\n                totalSources: sortedSources.length,\n                totalTargets: availableFields.filter((f)=>f.value !== currentSource).length,\n                speed: settings.autoPlaySpeed + \"ms\"\n            });\n            // Stop current animation\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n        }\n        // Start new animation cycle\n        console.log(\"✅ Starting animation cycle:\", {\n            sourceCategory: currentSource,\n            totalSources: sortedSources.length,\n            totalTargets: availableFields.filter((f)=>f.value !== currentSource).length,\n            speed: settings.autoPlaySpeed + \"ms\"\n        });\n        // Initialize animation state\n        animationRef.current.running = true;\n        animationRef.current.currentSourceIndex = 0;\n        animationRef.current.currentTargetIndex = 0;\n        animationRef.current.cycleCount = 0; // Reset cycle counter\n        // Start animation\n        animate();\n        return ()=>{\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setIsInFullOpacityState(true);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        settings.autoPlaySpeed,\n        filteredData.length,\n        currentSource // Only restart on source changes, not target changes\n    ]);\n    const nodeLabelFontSize = 18; // larger for readability\n    const nodeLabelFontWeight = 700;\n    const nodeLabelColor = settings.isDarkMode ? \"#FFFFFF\" : \"#170F5F\";\n    const nodeLabelFontFamily = 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif';\n    const nodeLabelOffset = 24;\n    // Local debug toggle for this component if no global admin context\n    const [localDebug, setLocalDebug] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showThemeToggle, setShowThemeToggle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const debugOn = localDebug;\n    // Debug Sankey data for outlines\n    const [debugSankeyData, setDebugSankeyData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!Array.isArray(sources) || !Array.isArray(targets)) return;\n        const nodes = [\n            ...sources.map((name)=>({\n                    id: `source:${name}`,\n                    name,\n                    category: \"source\"\n                })),\n            ...targets.map((name)=>({\n                    id: `target:${name}`,\n                    name,\n                    category: \"target\"\n                }))\n        ];\n        // Only create links if both sides have at least one node\n        const links = sources.length && targets.length ? [\n            {\n                source: `source:${sources[0]}`,\n                target: `target:${targets[0]}`,\n                value: 1\n            }\n        ] : [];\n        if (nodes.length < 2 || links.length < 1) return; // Prevent invalid array length\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartWidth,\n                chartHeight\n            ]\n        ]);\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        setDebugSankeyData(sankeyData);\n    }, [\n        sources,\n        targets,\n        chartWidth,\n        chartHeight,\n        nodePadding\n    ]);\n    // Render Sankey diagram\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !filteredData.length) return;\n        // --- Persistent SVG structure ---\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        svg.selectAll(\"*\").remove(); // Clear previous content\n        svg.attr(\"width\", containerWidth).attr(\"height\", containerHeight);\n        // --- Sankey node/link creation and vertical centering (deduplicated) ---\n        // Sort source nodes to maintain a fixed order (same as animation)\n        const sortedSources = [\n            ...sources\n        ];\n        if (currentSource === \"years_at_medtronic\") {\n            sortedSources.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sortedSources.sort();\n        }\n        // Sort target nodes to maintain a fixed order\n        const sortedTargets = [\n            ...targets\n        ];\n        if (currentTarget === \"years_at_medtronic\") {\n            sortedTargets.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sortedTargets.sort();\n        }\n        // Sankey transformation accessors\n        const sourceAccessor = (d)=>currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n        const targetAccessor = (d)=>currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n        // Filter data to only include valid values\n        const validData = filteredData.filter((d)=>(currentSource !== \"years_at_medtronic\" || d.years_at_medtronic !== null) && (currentTarget !== \"years_at_medtronic\" || d.years_at_medtronic !== null));\n        // Build nodes array with unique ids\n        const nodes = [\n            ...sortedSources.map((name)=>({\n                    id: `${currentSource}:${name}`,\n                    name,\n                    category: currentSource\n                })),\n            ...sortedTargets.map((name)=>({\n                    id: `${currentTarget}:${name}`,\n                    name,\n                    category: currentTarget\n                }))\n        ];\n        // Build links array (aggregate counts for each source-target pair)\n        const linksMap = new Map();\n        // 1. For every possible source-target pair, create a link (dummy if no data)\n        sortedSources.forEach((source)=>{\n            sortedTargets.forEach((target)=>{\n                const sourceId = `${currentSource}:${source}`;\n                const targetId = `${currentTarget}:${target}`;\n                const key = `${sourceId}→${targetId}`;\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 0,\n                    isDummy: true\n                });\n            });\n        });\n        // 2. Fill in real data, marking links as not dummy\n        validData.forEach((d)=>{\n            const source = sourceAccessor(d);\n            const target = targetAccessor(d);\n            if (!sortedSources.includes(source) || !sortedTargets.includes(target)) return;\n            const sourceId = `${currentSource}:${source}`;\n            const targetId = `${currentTarget}:${target}`;\n            const key = `${sourceId}→${targetId}`;\n            if (!linksMap.has(key)) {\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 1,\n                    isDummy: false\n                });\n            } else {\n                const link = linksMap.get(key);\n                link.value += 1;\n                link.isDummy = false;\n            }\n        });\n        // 3. Set dummy links to a very small value if still dummy\n        Array.from(linksMap.values()).forEach((link)=>{\n            if (link.isDummy) link.value = 0.0001;\n        });\n        const links = Array.from(linksMap.values());\n        // Sankey layout\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartWidth,\n                chartHeight\n            ]\n        ]);\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        // Compute vertical offset to center the diagram\n        const nodeYs = sankeyData.nodes.map((d)=>[\n                d.y0,\n                d.y1\n            ]).flat();\n        const minY = Math.min(...nodeYs);\n        const maxY = Math.max(...nodeYs);\n        const usedHeight = maxY - minY;\n        const offsetY = Math.max(0, (chartHeight - usedHeight) / 2 - minY);\n        // Create a group for the chart area with margin translation and vertical centering\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top + offsetY})`);\n        let defs = svg.select(\"defs\");\n        if (defs.empty()) defs = svg.append(\"defs\");\n        let linksG = g.append(\"g\").attr(\"class\", \"links\");\n        let nodesG = g.append(\"g\").attr(\"class\", \"nodes\");\n        // Remove old gradients (no longer needed)\n        defs.selectAll(\"linearGradient.link-gradient\").remove();\n        // --- Add clipPath for links group with tighter bounds ---\n        svg.select(\"defs\").selectAll(\"#link-clip\").remove();\n        defs.append(\"clipPath\").attr(\"id\", \"link-clip\").append(\"rect\").attr(\"x\", margin.left).attr(\"y\", margin.top).attr(\"width\", chartWidth).attr(\"height\", chartHeight);\n        linksG.attr(\"clip-path\", \"url(#link-clip)\");\n        // Add glow filter for dark mode\n        defs.selectAll(\"#dark-mode-glow\").remove();\n        if (settings.isDarkMode) {\n            const glowFilter = defs.append(\"filter\").attr(\"id\", \"dark-mode-glow\").attr(\"x\", \"-50%\").attr(\"y\", \"-50%\").attr(\"width\", \"200%\").attr(\"height\", \"200%\");\n            glowFilter.append(\"feGaussianBlur\").attr(\"stdDeviation\", \"1.5\").attr(\"result\", \"coloredBlur\");\n            const feMerge = glowFilter.append(\"feMerge\");\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"coloredBlur\");\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\");\n        }\n        // --- Links update pattern ---\n        // All links are now between real nodes, with isDummy property for visual distinction\n        const filteredLinks = sankeyData.links;\n        // Remove mix-blend-mode in dark mode to prevent color washing out\n        linksG.style(\"mix-blend-mode\", settings.isDarkMode ? \"normal\" : \"multiply\");\n        const linkKey = (d)=>`${d.source.id}→${d.target.id}`;\n        const linkSel = linksG.selectAll(\"path\").data(filteredLinks, linkKey);\n        // EXIT: fade out and remove all old links\n        linkSel.exit().transition().duration(400).attr(\"opacity\", 0).remove();\n        // Check if this is a category change that should trigger animation\n        const isCategoryChange = lastCategoryChange.source !== currentSource || lastCategoryChange.target !== currentTarget;\n        // ENTER: draw in all new links with improved animation\n        const newLinks = linksG.selectAll(\"path\").data(filteredLinks, linkKey).enter().append(\"path\").attr(\"d\", (d)=>(0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankeyLinkHorizontal)()(d)).attr(\"stroke\", (d)=>(0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d.source, getCurrentThemeColors(), settings.isDarkMode)).attr(\"stroke-width\", (d)=>Math.max(settings.isDarkMode ? 2 : 1, d.width)).attr(\"fill\", \"none\").attr(\"filter\", (d)=>{\n            if (hoveredLink === d) return \"url(#glow)\";\n            return settings.isDarkMode ? \"url(#dark-mode-glow)\" : null;\n        }).attr(\"pointer-events\", \"all\").attr(\"stroke-linecap\", \"round\").attr(\"opacity\", (d)=>{\n            // Dummy links: very low opacity\n            if (d.isDummy) return 0.08;\n            // Adjust opacity based on dark mode for better visibility\n            const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n            const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n            const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n            // Default opacity when no highlighting\n            if (animationPhase !== \"highlighting\") return baseOpacity;\n            // Highlight links from the active source\n            if (hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n            }\n            // Highlight links to the active target\n            if (hoveredTargetIndex !== null) {\n                const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n            }\n            return baseOpacity;\n        }).attr(\"stroke-dasharray\", (d)=>d.isDummy ? \"4,4\" : null); // Dashed for dummy links\n        // Apply drawing animation only on category changes to prevent flickering\n        if (isCategoryChange) {\n            newLinks.each(function(d) {\n                const path = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n                const totalLength = this.getTotalLength();\n                // Start with invisible path\n                path.attr(\"stroke-dasharray\", totalLength).attr(\"stroke-dashoffset\", totalLength).attr(\"opacity\", 0).transition().delay((d, i)=>i * 25) // Reduced stagger delay\n                .duration(600) // Reduced from 1200ms to 600ms\n                .ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut).attr(\"opacity\", (d)=>{\n                    // Adjust opacity based on dark mode for better visibility\n                    const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n                    const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n                    const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n                    // Highlight links from the active source or to the active target\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        const hoveredSource = sortedSources[hoveredSourceIndex];\n                        return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n                    }\n                    if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                        const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                        return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n                    }\n                    return baseOpacity;\n                }).attr(\"stroke-dashoffset\", 0).on(\"end\", function() {\n                    d3__WEBPACK_IMPORTED_MODULE_2__.select(this).attr(\"stroke-linecap\", \"butt\") // crisp edge after animation\n                    .attr(\"stroke-dasharray\", null).attr(\"stroke-dashoffset\", null);\n                });\n            });\n        } else {\n            // For non-category changes, just set the opacity directly\n            newLinks.attr(\"opacity\", (d)=>{\n                // Adjust opacity based on dark mode for better visibility\n                const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n                const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n                const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n                // Highlight links from the active source or to the active target\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n                }\n                return baseOpacity;\n            });\n        }\n        // Add hover interactions\n        newLinks.on(\"mousemove\", function(event, d) {\n            setHoveredLink(d);\n            setTooltip({\n                x: event.offsetX,\n                y: event.offsetY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"font-bold\",\n                            children: [\n                                d.source.name,\n                                \" → \",\n                                d.target.name\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 948,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                d.value,\n                                \" attendees\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 949,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                    lineNumber: 947,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function() {\n            setHoveredLink(null);\n            setTooltip(null);\n        });\n        // --- Nodes update pattern (rects) ---\n        const filteredNodes = sankeyData.nodes;\n        const nodeSel = nodesG.selectAll(\"rect\").data(filteredNodes, (d)=>d.id);\n        nodeSel.exit().remove();\n        nodeSel.join((enter)=>enter.append(\"rect\").attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>(0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode)).attr(\"stroke\", settings.isDarkMode ? \"#444\" : \"#22223b\").attr(\"opacity\", (d)=>{\n                // Source nodes: only the highlighted one is bright\n                if (d.category === currentSource) {\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.3;\n                    }\n                    return 0.9; // Increased from 0.6 to 0.9 for more prominence\n                }\n                // Target nodes: only those connected to the highlighted source or hovered target are bright\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    const isConnected = filteredLinks.some((l)=>l.source.name === hoveredSource && l.target.name === d.name);\n                    return isConnected ? 1 : 0.3;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.name === hoveredTarget ? 1 : 0.3;\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }).on(\"mousemove\", function(event, d) {\n                setHoveredNode(d);\n                setTooltip({\n                    x: event.offsetX,\n                    y: event.offsetY,\n                    content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-bold\",\n                                children: d.name\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1001,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Category: \",\n                                    d.category\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1002,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Responses: \",\n                                    d.value\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1003,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1000,\n                        columnNumber: 15\n                    }, this)\n                });\n            }).on(\"mouseleave\", function() {\n                setHoveredNode(null);\n                setTooltip(null);\n            }).on(\"mouseenter\", function(event, d) {\n                if (d.category === currentSource) {\n                    const idx = sortedSources.indexOf(d.name);\n                    setHoveredSourceIndex(idx);\n                    setAnimationPhase(\"highlighting\");\n                }\n                if (d.category === currentTarget) {\n                    const idx = sortedTargets.indexOf(d.name);\n                    setHoveredTargetIndex(idx);\n                    setAnimationPhase(\"highlighting\");\n                }\n            }).on(\"mouseleave\", function(event, d) {\n                if (d.category === currentSource) {\n                    setHoveredSourceIndex(null);\n                    setAnimationPhase(\"full\");\n                }\n                if (d.category === currentTarget) {\n                    setHoveredTargetIndex(null);\n                    setAnimationPhase(\"full\");\n                }\n            }), (update)=>update.transition(d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(750).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut)).attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>(0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode)).attr(\"opacity\", (d)=>{\n                // Source nodes: only the highlighted one is bright\n                if (d.category === currentSource) {\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.3;\n                    }\n                    return 0.9; // Increased from 0.6 to 0.9 for more prominence\n                }\n                // Target nodes: only those connected to the highlighted source or hovered target are bright\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    const isConnected = filteredLinks.some((l)=>l.source.name === hoveredSource && l.target.name === d.name);\n                    return isConnected ? 1 : 0.3;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.name === hoveredTarget ? 1 : 0.3;\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }));\n        // --- Node labels (re-render as before) ---\n        g.selectAll(\"g.label-layer\").remove();\n        const labelLayer = g.append(\"g\").attr(\"class\", \"label-layer\");\n        const sourceNodeSet = new Set(sortedSources);\n        const targetNodeSet = new Set(sortedTargets);\n        const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource);\n        const targetNodes = sankeyData.nodes.filter((d)=>d.category === currentTarget);\n        sourceNodes.forEach((node)=>{\n            if (sourceNodeSet.has(node.name)) {\n                labelLayer.append(\"text\").attr(\"x\", -labelPadding).attr(\"y\", (node.y0 + node.y1) / 2).attr(\"text-anchor\", \"end\").attr(\"alignment-baseline\", \"middle\").attr(\"font-family\", nodeLabelFontFamily).attr(\"font-weight\", nodeLabelFontWeight).attr(\"font-size\", labelFontSize).attr(\"fill\", nodeLabelColor).attr(\"aria-label\", node.name).attr(\"opacity\", node.value === 0 ? 0.5 : 1).text(node.name);\n            }\n        });\n        targetNodes.forEach((node)=>{\n            if (targetNodeSet.has(node.name)) {\n                labelLayer.append(\"text\").attr(\"x\", chartWidth + labelPadding).attr(\"y\", (node.y0 + node.y1) / 2).attr(\"text-anchor\", \"start\").attr(\"alignment-baseline\", \"middle\").attr(\"font-family\", nodeLabelFontFamily).attr(\"font-weight\", nodeLabelFontWeight).attr(\"font-size\", labelFontSize).attr(\"fill\", nodeLabelColor).attr(\"aria-label\", node.name).attr(\"opacity\", node.value === 0 ? 0.5 : 1).text(node.name);\n            }\n        });\n        // 6. Update insights\n        let mostCommon = links.length > 0 ? links.reduce((a, b)=>b.value > a.value ? b : a, links[0]) : undefined;\n        setInsights([\n            {\n                title: \"Total Responses\",\n                value: data.length\n            },\n            {\n                title: \"Current View\",\n                value: `${currentSource} → ${currentTarget}`\n            },\n            mostCommon ? {\n                title: \"Most Common Flow\",\n                value: `${mostCommon.source.split(\":\")[1]} → ${mostCommon.target.split(\":\")[1]}`,\n                description: `${mostCommon.value} attendees`\n            } : {\n                title: \"Most Common Flow\",\n                value: \"N/A\",\n                description: \"\"\n            }\n        ]);\n        // 7. Automatic animation on question change only\n        const transition = d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(750).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut);\n        // Animate nodes\n        nodeSel.transition(transition).attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>(0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode));\n    }, [\n        filteredData,\n        currentSource,\n        currentTarget,\n        containerWidth,\n        containerHeight,\n        settings.categoryColors,\n        settings.isDarkMode,\n        lastCategoryChange,\n        getCurrentThemeColors\n    ]);\n    // Create sorted targets for consistent highlighting\n    const sortedTargetsForHighlight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const sorted = [\n            ...targets\n        ];\n        if (currentTarget === \"years_at_medtronic\") {\n            sorted.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sorted.sort();\n        }\n        return sorted;\n    }, [\n        targets,\n        currentTarget\n    ]);\n    // Separate effect to update visual highlighting during animation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        const g = svg.select(\"g\");\n        // Update node opacity based on animation state\n        g.selectAll(\"rect\").transition().duration(200).attr(\"opacity\", function(d) {\n            // Source nodes: only the highlighted one is bright\n            if (d.category === currentSource) {\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.2; // Slightly higher for better visibility\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }\n            // Target nodes: highlight those connected to the highlighted source\n            if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                // Check if this target node is connected to the highlighted source\n                const isConnected = svg.selectAll(\"path\").data().some((link)=>link.source.name === hoveredSource && link.target.name === d.name);\n                return isConnected ? 1 : 0.2; // Slightly higher for better visibility\n            }\n            if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                const hoveredTarget = sortedTargetsForHighlight[hoveredTargetIndex];\n                return d.name === hoveredTarget ? 1 : 0.2;\n            }\n            return 0.9; // Increased from 0.6 to 0.9 for more prominence\n        }).attr(\"stroke-width\", function(d) {\n            // Add thicker stroke to highlighted source node\n            if (d.category === currentSource && hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                return d.name === sortedSources[hoveredSourceIndex] ? 3 : 1;\n            }\n            return 1;\n        });\n        // Update link opacity based on animation state\n        g.selectAll(\"path\").transition().duration(200).attr(\"opacity\", function(d) {\n            // Adjust opacity based on dark mode for better visibility\n            const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n            const highlightOpacity = settings.isDarkMode ? 1.0 : 0.95;\n            const dimOpacity = settings.isDarkMode ? 0.35 : 0.05;\n            // Default opacity when no highlighting\n            if (animationPhase !== \"highlighting\") return baseOpacity;\n            // Highlight links from the active source\n            if (hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n            }\n            // Highlight links to the active target\n            if (hoveredTargetIndex !== null) {\n                const hoveredTarget = sortedTargetsForHighlight[hoveredTargetIndex];\n                return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n            }\n            return baseOpacity;\n        }).attr(\"stroke-width\", function(d) {\n            // Make highlighted links thicker\n            if (animationPhase === \"highlighting\" && hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? Math.max(2, d.width * 1.2) : Math.max(1, d.width);\n            }\n            return Math.max(1, d.width);\n        });\n        console.log(\"\\uD83C\\uDFA8 Visual highlighting updated:\", {\n            hoveredSourceIndex,\n            sourceName: hoveredSourceIndex !== null ? sortedSources[hoveredSourceIndex] : null,\n            hoveredTargetIndex,\n            targetName: hoveredTargetIndex !== null ? sortedTargetsForHighlight[hoveredTargetIndex] : null,\n            animationPhase\n        });\n    }, [\n        hoveredSourceIndex,\n        hoveredTargetIndex,\n        animationPhase,\n        sortedSources,\n        sortedTargetsForHighlight,\n        currentSource,\n        currentTarget\n    ]);\n    // Separate effect for hover interactions (doesn't re-render the whole visualization)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        const g = svg.select(\"g\");\n        // Update link hover effects\n        g.selectAll(\"path\").each(function(d) {\n            const path = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n            const isHovered = hoveredLink === d;\n            path.attr(\"filter\", isHovered ? \"url(#glow)\" : null);\n        });\n    }, [\n        hoveredNode,\n        hoveredLink\n    ]);\n    // Tooltip rendering with dark mode support\n    const tooltipEl = tooltip ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            left: tooltip.x + 16,\n            top: tooltip.y + 16,\n            background: settings.isDarkMode ? \"rgba(20,20,30,0.98)\" : \"rgba(255,255,255,0.98)\",\n            color: settings.isDarkMode ? \"#fff\" : \"#170F5F\",\n            padding: \"8px 12px\",\n            borderRadius: 6,\n            pointerEvents: \"none\",\n            zIndex: 100,\n            fontFamily: \"Avenir Next World, sans-serif\",\n            fontWeight: 600,\n            fontSize: 14,\n            boxShadow: settings.isDarkMode ? \"0 4px 24px 0 rgba(16, 16, 235, 0.12)\" : \"0 4px 24px 0 rgba(0, 0, 0, 0.15)\",\n            border: settings.isDarkMode ? \"1px solid rgba(255,255,255,0.1)\" : \"1px solid rgba(0,0,0,0.1)\",\n            maxWidth: 280,\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n        },\n        role: \"tooltip\",\n        \"aria-live\": \"polite\",\n        children: tooltip.content\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n        lineNumber: 1247,\n        columnNumber: 5\n    }, this) : null;\n    // Create sorted sources array for highlighting (same as rendering and animation)\n    const sortedSourcesForHighlight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        let visualOrder = [];\n        if (filteredData.length && chartWidth > 0 && chartHeight > 0) {\n            const sourcesForNodes = [\n                ...sources\n            ];\n            if (currentSource === \"years_at_medtronic\") {\n                sourcesForNodes.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n            } else {\n                sourcesForNodes.sort();\n            }\n            const nodes = [\n                ...sourcesForNodes.map((name)=>({\n                        id: `${currentSource}:${name}`,\n                        name,\n                        category: currentSource\n                    })),\n                ...targets.map((name)=>({\n                        id: `${currentTarget}:${name}`,\n                        name,\n                        category: currentTarget\n                    }))\n            ];\n            const linksMap = new Map();\n            filteredData.forEach((d)=>{\n                const source = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                const target = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                const sourceId = `${currentSource}:${source}`;\n                const targetId = `${currentTarget}:${target}`;\n                if (!sourcesForNodes.includes(source) || !targets.includes(target)) return;\n                const key = `${sourceId}→${targetId}`;\n                if (!linksMap.has(key)) {\n                    linksMap.set(key, {\n                        source: sourceId,\n                        target: targetId,\n                        value: 0\n                    });\n                }\n                linksMap.get(key).value += 1;\n            });\n            const links = Array.from(linksMap.values());\n            const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    chartWidth,\n                    chartHeight\n                ]\n            ]);\n            const sankeyData = sankeyGenerator({\n                nodes: nodes.map((d)=>({\n                        ...d\n                    })),\n                links: links.map((d)=>({\n                        ...d\n                    }))\n            });\n            const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource);\n            visualOrder = sourceNodes.slice().sort((a, b)=>a.y0 - b.y0).map((d)=>d.name);\n        }\n        return visualOrder.length ? visualOrder : [\n            ...sources\n        ];\n    }, [\n        filteredData,\n        currentSource,\n        currentTarget,\n        sources,\n        targets,\n        chartWidth,\n        chartHeight,\n        nodePadding\n    ]);\n    // Determine which source or target to highlight based on animation state\n    let highlightSourceName = null;\n    let highlightTargetName = null;\n    if (isInFullOpacityState) {\n        highlightSourceName = null;\n        highlightTargetName = null;\n    } else if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n        highlightSourceName = sortedSourcesForHighlight[hoveredSourceIndex];\n    } else if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n        highlightTargetName = targets[hoveredTargetIndex];\n    }\n    // Enhanced animation pause/resume with debug tracking\n    const pauseAnimation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((reason)=>{\n        if (animationRef.current.running && !animationRef.current.isPaused) {\n            console.log(\"⏸️  PAUSING ANIMATION:\", reason, {\n                currentSourceIndex: animationRef.current.currentSourceIndex,\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                currentSource,\n                currentTarget\n            });\n            animationRef.current.isPaused = true;\n            animationRef.current.pausedAt = Date.now();\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n        }\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    const resumeAnimation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((reason)=>{\n        if (animationRef.current.running && animationRef.current.isPaused) {\n            console.log(\"▶️  RESUMING ANIMATION:\", reason, {\n                currentSourceIndex: animationRef.current.currentSourceIndex,\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                pausedDuration: Date.now() - animationRef.current.pausedAt\n            });\n            animationRef.current.isPaused = false;\n            animationRef.current.resumeFrom = \"source\";\n            // Resume animation from current position with a small delay to ensure state is updated\n            setTimeout(()=>{\n                if (animationRef.current.running && !animationRef.current.isPaused) {\n                    animate();\n                }\n            }, 100);\n        }\n    }, [\n        animate\n    ]);\n    // Update hover handlers with proper state management\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Update link hover behavior\n        svg.selectAll(\"path\").on(\"mouseenter\", function(event, d) {\n            // Pause animation during hover\n            pauseAnimation(\"link hover\");\n            // Set hover states\n            setHoveredLink(d);\n            setAnimationPhase(\"highlighting\");\n            // Handle source node hover\n            if (d.source && d.source.category === currentSource) {\n                const idx = sortedSources.indexOf(d.source.name);\n                setHoveredSourceIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual source highlight:\", d.source.name, \"index:\", idx);\n            }\n            // Handle target node hover\n            if (d.target && d.target.category === currentTarget) {\n                const idx = sortedTargetsForHighlight.indexOf(d.target.name);\n                setHoveredTargetIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual target highlight:\", d.target.name, \"index:\", idx);\n            }\n        }).on(\"mouseleave\", function() {\n            // Resume animation\n            resumeAnimation(\"link hover end\");\n            // Clear hover states\n            setHoveredLink(null);\n            setHoveredSourceIndex(null);\n            setHoveredTargetIndex(null);\n            setAnimationPhase(\"full\");\n        });\n        // Update node hover behavior\n        svg.selectAll(\"rect\").on(\"mouseenter\", function(event, d) {\n            // Pause animation during hover\n            pauseAnimation(\"node hover\");\n            setAnimationPhase(\"highlighting\");\n            // Handle source node hover\n            if (d.category === currentSource) {\n                const idx = sortedSources.indexOf(d.name);\n                setHoveredSourceIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual source node highlight:\", d.name, \"index:\", idx);\n            }\n            // Handle target node hover\n            if (d.category === currentTarget) {\n                const idx = sortedTargetsForHighlight.indexOf(d.name);\n                setHoveredTargetIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual target node highlight:\", d.name, \"index:\", idx);\n            }\n        }).on(\"mouseleave\", function() {\n            // Resume animation\n            resumeAnimation(\"node hover end\");\n            // Clear hover states\n            setHoveredSourceIndex(null);\n            setHoveredTargetIndex(null);\n            setAnimationPhase(\"full\");\n        });\n        return ()=>{\n            // Clean up all event listeners\n            svg.selectAll(\"path, rect\").on(\"mouseenter\", null).on(\"mouseleave\", null);\n        };\n    }, [\n        sortedSources,\n        sortedTargetsForHighlight,\n        currentSource,\n        currentTarget,\n        pauseAnimation,\n        resumeAnimation\n    ]);\n    // Main rendering effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !data.length) return;\n    // The main rendering logic handles all opacity updates\n    // This ensures data binding is correct and prevents the undefined error\n    }, [\n        filteredData,\n        hoveredSourceIndex,\n        hoveredTargetIndex,\n        animationPhase,\n        sortedSources,\n        targets,\n        currentSource,\n        currentTarget\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        style: {\n            width: \"100%\",\n            height: \"100%\",\n            minHeight: 220,\n            minWidth: 320,\n            position: \"relative\"\n        },\n        children: [\n            (nodeCount <= 2 || sources.length <= 1 || targets.length <= 1) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: 40,\n                    left: \"50%\",\n                    transform: \"translateX(-50%)\",\n                    background: \"rgba(255,255,200,0.95)\",\n                    color: \"#170F5F\",\n                    padding: \"12px 24px\",\n                    borderRadius: 8,\n                    fontWeight: 600,\n                    fontSize: 18,\n                    zIndex: 10,\n                    boxShadow: \"0 2px 12px 0 rgba(0,0,0,0.08)\"\n                },\n                children: \"Not enough data to show a meaningful flow diagram.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                lineNumber: 1468,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                width: chartWidth + margin.left + margin.right,\n                height: chartHeight + margin.top + margin.bottom,\n                viewBox: `0 0 ${chartWidth + margin.left + margin.right} ${chartHeight + margin.top + margin.bottom}`,\n                style: {\n                    display: \"block\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    background: \"transparent\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: `translate(${margin.left},${margin.top})`\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1493,\n                        columnNumber: 9\n                    }, this),\n                    debugOn && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: `translate(${margin.left},${margin.top})`,\n                        children: [\n                            Array.isArray(debugSankeyData?.nodes) && debugSankeyData.nodes.map((d, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                    x: d.x0,\n                                    y: d.y0,\n                                    width: d.x1 - d.x0,\n                                    height: d.y1 - d.y0,\n                                    fill: \"none\",\n                                    stroke: \"magenta\",\n                                    strokeDasharray: \"4 2\",\n                                    pointerEvents: \"none\"\n                                }, `debug-node-${i}`, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1501,\n                                    columnNumber: 15\n                                }, this)),\n                            Array.isArray(debugSankeyData?.links) && debugSankeyData.links.map((d, i)=>{\n                                const path = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankeyLinkHorizontal)()(d) || \"\";\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    d: path,\n                                    fill: \"none\",\n                                    stroke: \"cyan\",\n                                    strokeWidth: 2,\n                                    pointerEvents: \"none\"\n                                }, `debug-link-${i}`, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1517,\n                                    columnNumber: 17\n                                }, this);\n                            })\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1498,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                lineNumber: 1485,\n                columnNumber: 7\n            }, this),\n            tooltipEl\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n        lineNumber: 1465,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/ChordDiagram.tsx":
/*!***********************************************************!*\
  !*** ./src/components/DataVisualization/ChordDiagram.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChordDiagram)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n/* harmony import */ var _shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/useVisualizationData */ \"(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\");\n/* harmony import */ var _shared_QuestionSelector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/QuestionSelector */ \"(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx\");\n/* harmony import */ var _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/chordUtils */ \"(ssr)/./src/components/DataVisualization/shared/chordUtils.ts\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* harmony import */ var _components_shared_GlobalControlsNav__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/shared/GlobalControlsNav */ \"(ssr)/./src/components/shared/GlobalControlsNav.tsx\");\n/* harmony import */ var _shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shared/colorUtils */ \"(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n// Helper to get color for a node using global context (theme-aware)\nfunction getNodeColor(nodeName, category, globalColors, isDarkMode = false) {\n    const themeColors = isDarkMode ? globalColors.dark : globalColors.light;\n    if (category === \"years_at_medtronic\") {\n        return themeColors.years_at_medtronic?.[nodeName] || \"#FF6B6B\";\n    }\n    // Use global colors if available, otherwise fallback to defaults\n    if (category === \"learning_style\") {\n        return themeColors.learning_style?.[nodeName] || \"#60a5fa\";\n    }\n    if (category === \"peak_performance\") {\n        return themeColors.peak_performance?.[nodeName] || \"#4F8EF7\";\n    }\n    if (category === \"motivation\") {\n        return themeColors.motivation?.[nodeName] || \"#9467bd\";\n    }\n    if (category === \"shaped_by\") {\n        return themeColors.shaped_by?.[nodeName] || \"#1f77b4\";\n    }\n    return \"#8884d8\";\n}\nfunction ChordDiagram({ width = 1400, height = 1000, autoPlay = true, onRelationshipChange, enableRotation = true, showAllConnections = false }) {\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const secondarySvgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { data, isLoading, error } = (0,_shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_3__.useVisualizationData)();\n    const [currentSource, setCurrentSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[0].source);\n    const [currentTarget, setCurrentTarget] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[0].target);\n    const [insights, setInsights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__.useAppContext)();\n    const [lastCategoryChange, setLastCategoryChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        source: currentSource,\n        target: currentTarget\n    });\n    const [showSecondaryChord, setShowSecondaryChord] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Animation state management (similar to AlluvialDiagram)\n    const [animationPhase, setAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const [highlightedArcIndex, setHighlightedArcIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [highlightedSide, setHighlightedSide] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Secondary chord animation state\n    const [secondaryAnimationPhase, setSecondaryAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const [secondaryHighlightedArcIndex, setSecondaryHighlightedArcIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [secondaryHighlightedSide, setSecondaryHighlightedSide] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Animation timing ref\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentIndex: 0,\n        currentSide: \"left\",\n        isPaused: false,\n        cycleCount: 0\n    });\n    // Secondary chord animation timing ref\n    const secondaryAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentIndex: 0,\n        currentSide: \"left\",\n        isPaused: false\n    });\n    // Define available fields for the selector\n    const availableFields = [\n        {\n            value: \"years_at_medtronic\",\n            label: \"Years at Medtronic\"\n        },\n        {\n            value: \"peak_performance\",\n            label: \"Peak Performance\"\n        },\n        {\n            value: \"learning_style\",\n            label: \"Learning Style\"\n        },\n        {\n            value: \"motivation\",\n            label: \"Motivation\"\n        },\n        {\n            value: \"shaped_by\",\n            label: \"Shaped By\"\n        }\n    ];\n    // Typography constants (theme-aware)\n    const labelFontSize = 20;\n    const labelFontWeight = 700;\n    const labelColor = settings.isDarkMode ? \"#ffffff\" : \"#170F5F\";\n    const labelFontFamily = 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif';\n    // Check if peak performance is involved and show secondary chord\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const isPeakPerformanceInvolved = currentSource === \"peak_performance\" || currentTarget === \"peak_performance\";\n        setShowSecondaryChord(isPeakPerformanceInvolved);\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    // Secondary chord diagram for peak performance breakdown\n    const renderSecondaryChord = ()=>{\n        if (!secondarySvgRef.current || !data.length || isLoading) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(secondarySvgRef.current);\n        svg.selectAll(\"*\").remove();\n        const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n        // Get all data for secondary chord (Years at Medtronic vs Peak Performance categories)\n        const secondaryData = filteredData.filter((d)=>d.peak_performance);\n        if (secondaryData.length < 5) return;\n        // Use same dimensions as main chord for consistency\n        const secondaryWidth = showSecondaryChord ? width * 0.45 : width;\n        const secondaryHeight = showSecondaryChord ? height * 0.8 : height * 0.85;\n        const secondaryMargin = {\n            top: 80,\n            right: 80,\n            bottom: 100,\n            left: 80\n        };\n        const secondaryChartWidth = secondaryWidth - secondaryMargin.left - secondaryMargin.right;\n        const secondaryChartHeight = secondaryHeight - secondaryMargin.top - secondaryMargin.bottom;\n        const secondaryRadius = Math.max(120, Math.min(secondaryChartWidth, secondaryChartHeight) / 2 - 60);\n        // Years categories and Peak Performance categories\n        const yearsCategories = [\n            \"0-5\",\n            \"6-10\",\n            \"11-15\",\n            \"16-20\",\n            \"20+\"\n        ];\n        const peakPerfCategories = Array.from(new Set(secondaryData.map((d)=>d.peak_performance))).filter(Boolean).sort();\n        // Create bipartite matrix: Years vs Peak Performance\n        const allCategories = [\n            ...yearsCategories,\n            ...peakPerfCategories\n        ];\n        const matrix = allCategories.map((sourceCategory, sourceIndex)=>allCategories.map((targetCategory, targetIndex)=>{\n                // Only create connections between years and peak performance (not within same type)\n                const sourceIsYears = sourceIndex < yearsCategories.length;\n                const targetIsYears = targetIndex < yearsCategories.length;\n                // Only connect years to peak performance\n                if (sourceIsYears === targetIsYears) return 0;\n                // Count people who match this year + performance combination\n                const yearsCat = sourceIsYears ? sourceCategory : targetCategory;\n                const perfCat = sourceIsYears ? targetCategory : sourceCategory;\n                return secondaryData.filter((d)=>{\n                    const years = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0);\n                    const perf = d.peak_performance;\n                    return years === yearsCat && perf === perfCat;\n                }).length;\n            }));\n        // Create chord layout\n        const chordLayout = d3__WEBPACK_IMPORTED_MODULE_2__.chord().padAngle(0.05);\n        const chordData = chordLayout(matrix);\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${secondaryMargin.left + secondaryChartWidth / 2}, ${secondaryMargin.top + secondaryChartHeight / 2})`);\n        // Draw arcs\n        const arc = d3__WEBPACK_IMPORTED_MODULE_2__.arc().innerRadius(secondaryRadius * 0.75).outerRadius(secondaryRadius * 0.95);\n        const ribbon = d3__WEBPACK_IMPORTED_MODULE_2__.ribbon().radius(secondaryRadius * 0.75);\n        // Colors: different hues for years vs peak performance types\n        const yearsColors = [\n            \"#0077CC\",\n            \"#00A3E0\",\n            \"#4FC3F7\",\n            \"#81C784\",\n            \"#AED581\"\n        ]; // Blues/Greens for years\n        const perfColors = [\n            \"#FF6B6B\",\n            \"#FFD166\",\n            \"#06D6A0\",\n            \"#118AB2\",\n            \"#FF9F1C\",\n            \"#4ECDC4\"\n        ]; // Various colors for performance types\n        const colors = [\n            ...yearsColors,\n            ...perfColors.slice(0, peakPerfCategories.length)\n        ];\n        // Draw groups (arcs) with animation and hover effects\n        const groupSelection = g.selectAll(\".chord-group\").data(chordData.groups).enter().append(\"path\").attr(\"class\", \"chord-group\").attr(\"d\", arc).style(\"fill\", (d, i)=>colors[i % colors.length]).style(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"secondary arc hover\");\n            // Trigger highlighting for secondary chord\n            console.log(\"\\uD83C\\uDFAF Secondary chord arc hover:\", {\n                groupIndex: d.index,\n                category: allCategories[d.index]\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            setSecondaryHighlightedArcIndex(d.index);\n            setSecondaryHighlightedSide(d.index < yearsCategories.length ? \"left\" : \"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: allCategories[d.index]?.toString().replace(/_/g, \" \") || \"\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 237,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: d.index < yearsCategories.length ? \"Years at Medtronic\" : \"Peak Performance Type\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 238,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Value: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 239,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 236,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"secondary arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        });\n        // Apply transition animations to groups\n        groupSelection.transition().duration(750).style(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === i) {\n                    return 1.0; // Source arc is fully highlighted\n                }\n                // Check if this arc is connected to the highlighted arc\n                if (secondaryHighlightedArcIndex !== null) {\n                    const isConnected = chordData.some((chord)=>chord.source.index === i && chord.target.index === secondaryHighlightedArcIndex || chord.source.index === secondaryHighlightedArcIndex && chord.target.index === i);\n                    return isConnected ? 0.95 : 0.3;\n                }\n            }\n            return 0.8;\n        }).style(\"stroke-width\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return 3;\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n            }\n            return \"none\";\n        });\n        // Draw chords (ribbons) with animation and hover effects\n        const chordSelection = g.selectAll(\".chord\").data(chordData).enter().append(\"path\").attr(\"class\", \"chord\").attr(\"d\", ribbon).style(\"fill\", (d)=>colors[d.source.index % colors.length]).style(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"secondary ribbon hover\");\n            // Trigger highlighting for the source side of this ribbon\n            console.log(\"\\uD83C\\uDFAF Secondary ribbon hover:\", {\n                sourceIndex: d.source.index,\n                targetIndex: d.target.index,\n                sourceCategory: allCategories[d.source.index],\n                targetCategory: allCategories[d.target.index]\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            setSecondaryHighlightedArcIndex(d.source.index);\n            setSecondaryHighlightedSide(d.source.index < yearsCategories.length ? \"left\" : \"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: [\n                                allCategories[d.source.index],\n                                \" ↔ \",\n                                allCategories[d.target.index]\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 317,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Connections: \",\n                                d.source.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 320,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 316,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function() {\n            resumeAnimation(\"secondary ribbon hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        });\n        // Apply transition animations to chords\n        chordSelection.transition().duration(750).style(\"opacity\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Add labels with proper spacing and rotation\n        const secondaryLabelRadius = Math.max(120, secondaryRadius * 1.45);\n        g.selectAll(\".chord-label\").data(chordData.groups).enter().append(\"text\").attr(\"class\", \"chord-label\").attr(\"transform\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            const x = secondaryLabelRadius * Math.cos(angle);\n            const y = secondaryLabelRadius * Math.sin(angle);\n            const rotation = angle * 180 / Math.PI;\n            // Rotate text for better readability\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return `translate(${x}, ${y}) rotate(${rotation + 180})`;\n            } else {\n                return `translate(${x}, ${y}) rotate(${rotation})`;\n            }\n        }).attr(\"text-anchor\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return \"end\";\n            } else {\n                return \"start\";\n            }\n        }).attr(\"alignment-baseline\", \"middle\").style(\"font-family\", labelFontFamily).style(\"font-weight\", labelFontWeight).style(\"font-size\", (d)=>{\n            // Dynamic font size based on number of labels\n            const totalLabels = allCategories.length;\n            if (totalLabels > 12) return \"13px\";\n            if (totalLabels > 10) return \"14px\";\n            if (totalLabels > 8) return \"15px\";\n            return \"16px\";\n        }).style(\"fill\", labelColor).style(\"text-transform\", \"uppercase\").text((d, i)=>{\n            const text = allCategories[i]?.toString().replace(/_/g, \" \") || \"\";\n            // Show full text for secondary chord labels\n            return text;\n        }).on(\"mouseenter\", function(event, d) {\n            const fullText = allCategories[d.index]?.toString().replace(/_/g, \" \") || \"\";\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: fullText\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 418,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: d.index < yearsCategories.length ? \"Years at Medtronic\" : \"Peak Performance Type\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 419,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 417,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>setTooltip(null));\n    };\n    // Helper function to ensure source and target are different\n    const ensureDifferentCategories = (source, target)=>{\n        if (source === target) {\n            // Find a different target\n            const differentOption = availableFields.find((field)=>field.value !== source);\n            return {\n                source,\n                target: differentOption ? differentOption.value : \"learning_style\"\n            };\n        }\n        return {\n            source,\n            target\n        };\n    };\n    // Ensure initial state doesn't have same categories\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const corrected = ensureDifferentCategories(currentSource, currentTarget);\n        if (corrected.source !== currentSource || corrected.target !== currentTarget) {\n            setCurrentSource(corrected.source);\n            setCurrentTarget(corrected.target);\n        }\n    }, []);\n    // Track current mode index with state\n    const [currentModeIndex, setCurrentModeIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Update mode index when source/target changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const modeIndex = _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.findIndex((mode)=>mode.source === currentSource && mode.target === currentTarget);\n        if (modeIndex !== -1) {\n            setCurrentModeIndex(modeIndex);\n        }\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    // Remove pulsing animation to eliminate flickering - will use CSS animations instead if needed\n    // Arc highlighting animation with connected ribbons\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDD04 ChordDiagram arc highlighting effect:\", {\n            autoPlay,\n            isAutoPlayEnabled: settings.isAutoPlayEnabled,\n            dataLength: data.length\n        });\n        if (!autoPlay || !settings.isAutoPlayEnabled || !data.length) {\n            console.log(\"❌ Arc highlighting disabled\");\n            // Reset to full opacity when animation is disabled\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            return;\n        }\n        const animate = ()=>{\n            if (!animationRef.current.running || animationRef.current.isPaused) return;\n            // Safety check: prevent infinite loops\n            if (animationRef.current.cycleCount > 1000) {\n                console.log(\"\\uD83D\\uDED1 Chord animation cycle limit reached, resetting\");\n                animationRef.current.cycleCount = 0;\n                animationRef.current.currentIndex = 0;\n                animationRef.current.currentSide = \"left\";\n            }\n            // Get current data context (this will adapt to mode changes)\n            const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n            // Define all possible categories for each field (not just those with data)\n            const allCategories = {\n                years_at_medtronic: [\n                    \"0-5\",\n                    \"6-10\",\n                    \"11-15\",\n                    \"16-20\",\n                    \"20+\"\n                ],\n                learning_style: [\n                    \"visual\",\n                    \"auditory\",\n                    \"kinesthetic\",\n                    \"reading_writing\"\n                ],\n                shaped_by: [\n                    \"mentor\",\n                    \"challenge\",\n                    \"failure\",\n                    \"success\",\n                    \"team\",\n                    \"other\"\n                ],\n                peak_performance: [\n                    \"Extrovert, Morning\",\n                    \"Extrovert, Evening\",\n                    \"Introvert, Morning\",\n                    \"Introvert, Night\",\n                    \"Ambivert, Morning\",\n                    \"Ambivert, Night\"\n                ],\n                motivation: [\n                    \"impact\",\n                    \"growth\",\n                    \"recognition\",\n                    \"autonomy\",\n                    \"purpose\"\n                ]\n            };\n            const leftValues = allCategories[currentSource] || [];\n            const rightValues = allCategories[currentTarget] || [];\n            const currentSideLength = animationRef.current.currentSide === \"left\" ? leftValues.length : rightValues.length;\n            // Safety check: if current index is out of bounds for new mode, reset to 0\n            if (animationRef.current.currentIndex >= currentSideLength) {\n                animationRef.current.currentIndex = 0;\n            }\n            // Debug: Log the current animation state for dev tools\n            console.log(\"[ChordAnimation] Side:\", animationRef.current.currentSide, \"Index:\", animationRef.current.currentIndex, \"Total on side:\", currentSideLength, \"Mode:\", currentSource + \" → \" + currentTarget);\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(animationRef.current.currentIndex);\n            setHighlightedSide(animationRef.current.currentSide);\n            const highlightedCategory = animationRef.current.currentSide === \"left\" ? leftValues[animationRef.current.currentIndex] : rightValues[animationRef.current.currentIndex];\n            // Check if this category has data\n            const hasData = filteredData.some((d)=>{\n                if (animationRef.current.currentSide === \"left\") {\n                    if (currentSource === \"years_at_medtronic\") {\n                        return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                    }\n                    return d[currentSource] === highlightedCategory;\n                } else {\n                    if (currentTarget === \"years_at_medtronic\") {\n                        return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                    }\n                    return d[currentTarget] === highlightedCategory;\n                }\n            });\n            console.log(\"✨ Highlighting full relationship chain for:\", {\n                sourceCategory: highlightedCategory,\n                sourceSide: animationRef.current.currentSide,\n                sourceIndex: animationRef.current.currentIndex,\n                hasData: hasData,\n                totalCategories: currentSideLength\n            });\n            // Calculate timing based on global settings - slower for better visibility\n            const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n            const pauseDuration = Math.max(300, stepDuration / 5);\n            // Move to next position - include the last index before switching\n            if (animationRef.current.currentIndex < currentSideLength - 1) {\n                animationRef.current.timer = setTimeout(()=>{\n                    if (animationRef.current.running && !animationRef.current.isPaused) {\n                        animationRef.current.currentIndex++;\n                        animate();\n                    }\n                }, stepDuration + pauseDuration);\n            } else {\n                // Show the last index for the full duration before switching\n                animationRef.current.timer = setTimeout(()=>{\n                    if (animationRef.current.running && !animationRef.current.isPaused) {\n                        // Now switch sides or complete cycle\n                        if (animationRef.current.currentSide === \"left\") {\n                            animationRef.current.currentSide = \"right\";\n                            animationRef.current.currentIndex = 0;\n                            animate();\n                        } else {\n                            // Complete cycle - show full diagram briefly, then restart\n                            animationRef.current.cycleCount++;\n                            const nextModeIndex = (currentModeIndex + 1) % _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.length;\n                            console.log(\"\\uD83C\\uDF89 ChordAnimation completed full cycle #\" + animationRef.current.cycleCount + \"! Advancing to mode\", nextModeIndex, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex]);\n                            setAnimationPhase(\"full\");\n                            setHighlightedArcIndex(null);\n                            setHighlightedSide(null);\n                            setTimeout(()=>{\n                                setCurrentModeIndex(nextModeIndex);\n                                setCurrentSource(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source);\n                                setCurrentTarget(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                setLastCategoryChange({\n                                    source: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source,\n                                    target: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target\n                                });\n                                onRelationshipChange?.(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                            // Animation will restart due to dependency on currentSource/currentTarget\n                            }, stepDuration * 2);\n                        }\n                    }\n                }, stepDuration + pauseDuration);\n            }\n        };\n        // Start animation if not already running\n        if (!animationRef.current.running) {\n            console.log(\"✅ Starting ChordDiagram arc highlighting animation\");\n            animationRef.current.running = true;\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.isPaused = false;\n            animate();\n        } else {\n            console.log(\"⚠️ Arc highlighting animation already running\");\n        }\n        return ()=>{\n            console.log(\"\\uD83E\\uDDF9 Cleaning up ChordDiagram arc highlighting animation\");\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        settings.autoPlaySpeed,\n        settings.useTestData\n    ]); // Removed currentSource, currentTarget to prevent restarting\n    // Restart animation when mode changes (but only if not paused)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (autoPlay && settings.isAutoPlayEnabled && data.length && !animationRef.current.isPaused) {\n            console.log(\"\\uD83D\\uDD04 Mode changed, restarting animation with new mode:\", currentSource + \" → \" + currentTarget);\n            // Reset animation state for new mode\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.cycleCount = 0;\n            // Clear any existing timer\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            // Restart animation if it was running\n            if (animationRef.current.running) {\n                // Call animate function directly to restart with new mode\n                const animate = ()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    // Safety check: prevent infinite loops\n                    if (animationRef.current.cycleCount > 1000) {\n                        console.log(\"\\uD83D\\uDED1 Chord animation cycle limit reached, resetting\");\n                        animationRef.current.cycleCount = 0;\n                        animationRef.current.currentIndex = 0;\n                        animationRef.current.currentSide = \"left\";\n                    }\n                    // Get current data context (this will adapt to mode changes)\n                    const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n                    // Define all possible categories for each field (not just those with data)\n                    const allCategories = {\n                        years_at_medtronic: [\n                            \"0-5\",\n                            \"6-10\",\n                            \"11-15\",\n                            \"16-20\",\n                            \"20+\"\n                        ],\n                        learning_style: [\n                            \"visual\",\n                            \"auditory\",\n                            \"kinesthetic\",\n                            \"reading_writing\"\n                        ],\n                        shaped_by: [\n                            \"mentor\",\n                            \"challenge\",\n                            \"failure\",\n                            \"success\",\n                            \"team\",\n                            \"other\"\n                        ],\n                        peak_performance: [\n                            \"Extrovert, Morning\",\n                            \"Extrovert, Evening\",\n                            \"Introvert, Morning\",\n                            \"Introvert, Night\",\n                            \"Ambivert, Morning\",\n                            \"Ambivert, Night\"\n                        ],\n                        motivation: [\n                            \"impact\",\n                            \"growth\",\n                            \"recognition\",\n                            \"autonomy\",\n                            \"purpose\"\n                        ]\n                    };\n                    const leftValues = allCategories[currentSource] || [];\n                    const rightValues = allCategories[currentTarget] || [];\n                    const currentSideLength = animationRef.current.currentSide === \"left\" ? leftValues.length : rightValues.length;\n                    // Safety check: if current index is out of bounds for new mode, reset to 0\n                    if (animationRef.current.currentIndex >= currentSideLength) {\n                        animationRef.current.currentIndex = 0;\n                    }\n                    // Debug: Log the current animation state for dev tools\n                    console.log(\"[ChordAnimation] Side:\", animationRef.current.currentSide, \"Index:\", animationRef.current.currentIndex, \"Total on side:\", currentSideLength, \"Mode:\", currentSource + \" → \" + currentTarget);\n                    setAnimationPhase(\"highlighting\");\n                    setHighlightedArcIndex(animationRef.current.currentIndex);\n                    setHighlightedSide(animationRef.current.currentSide);\n                    const highlightedCategory = animationRef.current.currentSide === \"left\" ? leftValues[animationRef.current.currentIndex] : rightValues[animationRef.current.currentIndex];\n                    // Check if this category has data\n                    const hasData = filteredData.some((d)=>{\n                        if (animationRef.current.currentSide === \"left\") {\n                            if (currentSource === \"years_at_medtronic\") {\n                                return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                            }\n                            return d[currentSource] === highlightedCategory;\n                        } else {\n                            if (currentTarget === \"years_at_medtronic\") {\n                                return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                            }\n                            return d[currentTarget] === highlightedCategory;\n                        }\n                    });\n                    console.log(\"✨ Highlighting full relationship chain for:\", {\n                        sourceCategory: highlightedCategory,\n                        sourceSide: animationRef.current.currentSide,\n                        sourceIndex: animationRef.current.currentIndex,\n                        hasData: hasData,\n                        totalCategories: currentSideLength\n                    });\n                    // Calculate timing based on global settings - slower for better visibility\n                    const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n                    const pauseDuration = Math.max(300, stepDuration / 5);\n                    // Move to next position - include the last index before switching\n                    if (animationRef.current.currentIndex < currentSideLength - 1) {\n                        animationRef.current.timer = setTimeout(()=>{\n                            if (animationRef.current.running && !animationRef.current.isPaused) {\n                                animationRef.current.currentIndex++;\n                                animate();\n                            }\n                        }, stepDuration + pauseDuration);\n                    } else {\n                        // Show the last index for the full duration before switching\n                        animationRef.current.timer = setTimeout(()=>{\n                            if (animationRef.current.running && !animationRef.current.isPaused) {\n                                // Now switch sides or complete cycle\n                                if (animationRef.current.currentSide === \"left\") {\n                                    animationRef.current.currentSide = \"right\";\n                                    animationRef.current.currentIndex = 0;\n                                    animate();\n                                } else {\n                                    // Complete cycle - show full diagram briefly, then restart\n                                    animationRef.current.cycleCount++;\n                                    const nextModeIndex = (currentModeIndex + 1) % _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.length;\n                                    console.log(\"\\uD83C\\uDF89 ChordAnimation completed full cycle #\" + animationRef.current.cycleCount + \"! Advancing to mode\", nextModeIndex, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex]);\n                                    setAnimationPhase(\"full\");\n                                    setHighlightedArcIndex(null);\n                                    setHighlightedSide(null);\n                                    setTimeout(()=>{\n                                        setCurrentModeIndex(nextModeIndex);\n                                        setCurrentSource(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source);\n                                        setCurrentTarget(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                        setLastCategoryChange({\n                                            source: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source,\n                                            target: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target\n                                        });\n                                        onRelationshipChange?.(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                    // Animation will restart due to dependency on currentSource/currentTarget\n                                    }, stepDuration * 2);\n                                }\n                            }\n                        }, stepDuration + pauseDuration);\n                    }\n                };\n                animate();\n            }\n        }\n    }, [\n        currentSource,\n        currentTarget,\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        settings.autoPlaySpeed,\n        settings.useTestData,\n        currentModeIndex\n    ]);\n    // Secondary chord animation system\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!autoPlay || !settings.isAutoPlayEnabled || !data.length || !showSecondaryChord) {\n            // Stop animation if conditions not met\n            console.log(\"\\uD83D\\uDED1 Stopping secondary chord animation:\", {\n                autoPlay,\n                isAutoPlayEnabled: settings.isAutoPlayEnabled,\n                hasData: data.length > 0,\n                showSecondaryChord\n            });\n            if (secondaryAnimationRef.current.timer) {\n                clearTimeout(secondaryAnimationRef.current.timer);\n                secondaryAnimationRef.current.timer = null;\n            }\n            secondaryAnimationRef.current.running = false;\n            return;\n        }\n        const animateSecondary = ()=>{\n            if (!secondaryAnimationRef.current.running || secondaryAnimationRef.current.isPaused) return;\n            // Get secondary chord data context first\n            const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n            const secondaryData = filteredData.filter((d)=>d.peak_performance);\n            const yearsCategories = [\n                \"0-5\",\n                \"6-10\",\n                \"11-15\",\n                \"16-20\",\n                \"20+\"\n            ];\n            const peakPerfCategories = Array.from(new Set(secondaryData.map((d)=>d.peak_performance))).filter(Boolean).sort();\n            const allCategories = [\n                ...yearsCategories,\n                ...peakPerfCategories\n            ];\n            const currentSideLength = secondaryAnimationRef.current.currentSide === \"left\" ? yearsCategories.length : peakPerfCategories.length;\n            // Safety check: if current index is out of bounds, reset to 0\n            if (secondaryAnimationRef.current.currentIndex >= currentSideLength) {\n                secondaryAnimationRef.current.currentIndex = 0;\n            }\n            console.log(\"\\uD83C\\uDFAF SecondaryChord arc animation:\", {\n                side: secondaryAnimationRef.current.currentSide,\n                index: secondaryAnimationRef.current.currentIndex\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            // Calculate the actual arc index based on side and position\n            const actualArcIndex = secondaryAnimationRef.current.currentSide === \"left\" ? secondaryAnimationRef.current.currentIndex // Left side: direct index (0-4)\n             : yearsCategories.length + secondaryAnimationRef.current.currentIndex; // Right side: offset by years count\n            setSecondaryHighlightedArcIndex(actualArcIndex);\n            setSecondaryHighlightedSide(secondaryAnimationRef.current.currentSide);\n            // Calculate timing based on global settings - slower for better visibility\n            const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n            const pauseDuration = Math.max(300, stepDuration / 5);\n            // Move to next position - include the last index before switching\n            if (secondaryAnimationRef.current.currentIndex < currentSideLength - 1) {\n                secondaryAnimationRef.current.timer = setTimeout(()=>{\n                    if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                        secondaryAnimationRef.current.currentIndex++;\n                        animateSecondary();\n                    }\n                }, stepDuration + pauseDuration);\n            } else {\n                // Show the last index for the full duration before switching\n                secondaryAnimationRef.current.timer = setTimeout(()=>{\n                    if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                        // Now switch sides or complete cycle\n                        if (secondaryAnimationRef.current.currentSide === \"left\") {\n                            secondaryAnimationRef.current.currentSide = \"right\";\n                            secondaryAnimationRef.current.currentIndex = 0;\n                            animateSecondary();\n                        } else {\n                            // Complete cycle - show full diagram briefly, then restart\n                            console.log(\"\\uD83C\\uDF89 SecondaryChordAnimation completed full cycle! Restarting...\");\n                            setSecondaryAnimationPhase(\"full\");\n                            setSecondaryHighlightedArcIndex(null);\n                            setSecondaryHighlightedSide(null);\n                            secondaryAnimationRef.current.timer = setTimeout(()=>{\n                                if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                                    secondaryAnimationRef.current.currentSide = \"left\";\n                                    secondaryAnimationRef.current.currentIndex = 0;\n                                    animateSecondary();\n                                }\n                            }, stepDuration * 2);\n                        }\n                    }\n                }, stepDuration + pauseDuration);\n            }\n        };\n        // Start animation if not already running\n        if (!secondaryAnimationRef.current.running) {\n            console.log(\"✅ Starting SecondaryChord arc highlighting animation\");\n            secondaryAnimationRef.current.running = true;\n            secondaryAnimationRef.current.currentIndex = 0;\n            secondaryAnimationRef.current.currentSide = \"left\";\n            secondaryAnimationRef.current.isPaused = false;\n            animateSecondary();\n        } else {\n            console.log(\"⚠️ Secondary arc highlighting animation already running\");\n        }\n        return ()=>{\n            console.log(\"\\uD83E\\uDDF9 Cleaning up SecondaryChord arc highlighting animation\");\n            if (secondaryAnimationRef.current.timer) {\n                clearTimeout(secondaryAnimationRef.current.timer);\n                secondaryAnimationRef.current.timer = null;\n            }\n            secondaryAnimationRef.current.running = false;\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        showSecondaryChord,\n        settings.autoPlaySpeed,\n        settings.useTestData\n    ]); // Removed currentSource, currentTarget to prevent restarting\n    // Re-render secondary chord when its animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (showSecondaryChord) {\n            renderSecondaryChord();\n        }\n    }, [\n        showSecondaryChord,\n        data,\n        settings.useTestData,\n        settings.isDarkMode\n    ]);\n    // Update visual styling of existing main chord elements when animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Update left arcs opacity and stroke based on animation state\n        svg.selectAll(\"path.left-arc\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\") {\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other left arcs\n                }\n            }\n            return 0.8; // Default opacity\n        }).style(\"stroke-width\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return 3;\n                }\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Update right arcs opacity and stroke based on animation state\n        svg.selectAll(\"path.right-arc\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\") {\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other right arcs\n                }\n            }\n            return 0.8; // Default opacity\n        }).style(\"stroke-width\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return 3;\n                }\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Update ribbons opacity and stroke based on animation state\n        svg.selectAll(\"path.ribbon\").transition().duration(300).style(\"opacity\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                if (highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n    }, [\n        animationPhase,\n        highlightedArcIndex,\n        highlightedSide,\n        settings.isDarkMode\n    ]);\n    // Update visual styling of existing secondary chord elements when animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!secondarySvgRef.current || !showSecondaryChord) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(secondarySvgRef.current);\n        // Update secondary chord elements based on their animation state\n        svg.selectAll(\"path.chord-group\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === i) {\n                    return 1.0; // Source arc is fully highlighted\n                }\n                return 0.4; // Dim other arcs\n            }\n            return 0.8;\n        }).style(\"stroke-width\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return 3;\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n            }\n            return \"none\";\n        });\n        svg.selectAll(\"path.chord\").transition().duration(300).style(\"opacity\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n    }, [\n        secondaryAnimationPhase,\n        secondaryHighlightedArcIndex,\n        secondaryHighlightedSide,\n        settings.isDarkMode,\n        showSecondaryChord\n    ]);\n    // Remove conflicting opacity update system - opacity will be handled in main rendering\n    // Add pause/resume functionality\n    const pauseAnimation = (reason)=>{\n        console.log(\"⏸️ Pausing animation:\", reason);\n        animationRef.current.isPaused = true;\n        secondaryAnimationRef.current.isPaused = true;\n        if (animationRef.current.timer) {\n            clearTimeout(animationRef.current.timer);\n            animationRef.current.timer = null;\n        }\n        if (secondaryAnimationRef.current.timer) {\n            clearTimeout(secondaryAnimationRef.current.timer);\n            secondaryAnimationRef.current.timer = null;\n        }\n    };\n    const resumeAnimation = (reason)=>{\n        console.log(\"▶️ Resuming animation:\", reason);\n        animationRef.current.isPaused = false;\n        secondaryAnimationRef.current.isPaused = false;\n        // Ensure animation state is properly reset\n        if (!animationRef.current.running) {\n            console.log(\"\\uD83D\\uDD04 Restarting chord animation after resume\");\n            animationRef.current.running = true;\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.cycleCount = 0;\n        }\n    // The mode change useEffect will automatically restart the animation\n    // when isPaused becomes false and mode changes\n    };\n    // Check if container is too small - reduced minimum size for better compatibility\n    const margin = {\n        top: 80,\n        right: 80,\n        bottom: 100,\n        left: 80\n    };\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    const isContainerTooSmall = chartWidth < 100 || chartHeight < 100; // Reduced from 200x200 to 100x100\n    // Render circular chord diagram\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !data.length || isLoading || isContainerTooSmall) return;\n        // Clear previous content\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        // Filter data based on global settings\n        const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Adjust size based on whether we're showing two chords\n        const effectiveWidth = showSecondaryChord ? width * 0.45 : width;\n        const effectiveHeight = showSecondaryChord ? height * 0.8 : height * 0.85;\n        const effectiveChartWidth = effectiveWidth - margin.left - margin.right;\n        const effectiveChartHeight = effectiveHeight - margin.top - margin.bottom;\n        const radius = Math.max(120, Math.min(effectiveChartWidth, effectiveChartHeight) / 2 - 60);\n        // Create definitions for gradients\n        const defs = svg.append(\"defs\");\n        // Define fixed order for years at Medtronic\n        const YEARS_GROUPS = [\n            \"0-5\",\n            \"6-10\",\n            \"11-15\",\n            \"16-20\",\n            \"20+\"\n        ];\n        // Get unique values for left and right sides, using fixed order for years\n        const leftValues = currentSource === \"years_at_medtronic\" ? YEARS_GROUPS : Array.from(new Set(filteredData.map((d)=>d[currentSource]))).filter(Boolean);\n        const rightValues = currentTarget === \"years_at_medtronic\" ? YEARS_GROUPS : Array.from(new Set(filteredData.map((d)=>d[currentTarget]))).filter(Boolean);\n        // Process data for chord layout\n        const chordData = (0,_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.processChordData)(filteredData, currentSource, currentTarget);\n        // Separate source and target categories\n        const sourceCategories = new Set();\n        const targetCategories = new Set();\n        filteredData.forEach((d)=>{\n            if (currentSource === \"years_at_medtronic\") {\n                sourceCategories.add((0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0));\n            } else {\n                sourceCategories.add(d[currentSource] || \"Unknown\");\n            }\n            if (currentTarget === \"years_at_medtronic\") {\n                targetCategories.add((0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0));\n            } else {\n                targetCategories.add(d[currentTarget] || \"Unknown\");\n            }\n        });\n        // Convert to arrays and sort\n        const sourceArray = Array.from(sourceCategories).sort();\n        const targetArray = Array.from(targetCategories).sort();\n        // Calculate totals for each category\n        const leftTotals = sourceArray.map((cat)=>filteredData.filter((d)=>{\n                const value = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                return value === cat;\n            }).length);\n        const rightTotals = targetArray.map((cat)=>filteredData.filter((d)=>{\n                const value = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                return value === cat;\n            }).length);\n        const leftTotalSum = leftTotals.reduce((sum, val)=>sum + val, 0);\n        const rightTotalSum = rightTotals.reduce((sum, val)=>sum + val, 0);\n        // Create connection matrix\n        const connectionMatrix = sourceArray.map((sourceCat)=>targetArray.map((targetCat)=>{\n                return filteredData.filter((d)=>{\n                    const source = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                    const target = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                    return source === sourceCat && target === targetCat;\n                }).length;\n            }));\n        // Check if this is a category change that should trigger animation\n        const isCategoryChange = lastCategoryChange.source !== currentSource || lastCategoryChange.target !== currentTarget;\n        // Add smooth transitions - faster for hover interactions\n        const transition = d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(isCategoryChange ? 750 : 100).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut);\n        // --- True left/right bipartite layout with better spacing ---\n        // Left arcs: 180°+gap to 360°-gap (Math.PI+gap to 2*Math.PI-gap)\n        // Right arcs: 0+gap to 180°-gap (0+gap to Math.PI-gap)\n        const arcGap = Math.PI * 0.12; // Larger gap for better label spacing\n        const leftStart = Math.PI + arcGap; // 180° + gap\n        const leftEnd = 2 * Math.PI - arcGap; // 360° - gap\n        const rightStart = 0 + arcGap; // 0° + gap\n        const rightEnd = Math.PI - arcGap; // 180° - gap\n        const leftArcSpan = leftEnd - leftStart; // 180° - 2*gap\n        const rightArcSpan = rightEnd - rightStart; // 180° - 2*gap\n        // Add minimum spacing between arcs to prevent label overlap\n        const minArcSpacing = Math.PI * 0.02; // Minimum 2° between arcs\n        // Assign arc angles for left arcs with proper spacing\n        let leftAngle = leftStart;\n        const leftArcs = leftValues.map((value, i)=>{\n            const count = filteredData.filter((d)=>currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === value : d[currentSource] === value).length;\n            // Calculate arc span with spacing consideration\n            const availableSpan = leftArcSpan - minArcSpacing * (leftValues.length - 1);\n            const arcSpan = currentSource === \"years_at_medtronic\" ? availableSpan / leftValues.length : Math.max(minArcSpacing, availableSpan * (count / (leftTotalSum || 1)));\n            const startAngle = leftAngle;\n            const endAngle = leftAngle + arcSpan;\n            leftAngle = endAngle + minArcSpacing; // Add spacing between arcs\n            const color = getNodeColor(value, currentSource, settings.categoryColors, settings.isDarkMode);\n            const opacity = count === 0 ? 0.15 : 0.8;\n            return {\n                name: value,\n                value: count,\n                startAngle,\n                endAngle,\n                color,\n                opacity\n            };\n        });\n        // Assign arc angles for right arcs with proper spacing\n        let rightAngle = rightStart;\n        const rightArcs = rightValues.map((value, i)=>{\n            const count = filteredData.filter((d)=>currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === value : d[currentTarget] === value).length;\n            // Calculate arc span with spacing consideration\n            const availableSpan = rightArcSpan - minArcSpacing * (rightValues.length - 1);\n            const arcSpan = currentTarget === \"years_at_medtronic\" ? availableSpan / rightValues.length : Math.max(minArcSpacing, availableSpan * (count / (rightTotalSum || 1)));\n            const startAngle = rightAngle;\n            const endAngle = rightAngle + arcSpan;\n            rightAngle = endAngle + minArcSpacing; // Add spacing between arcs\n            const color = getNodeColor(value, currentTarget, settings.categoryColors, settings.isDarkMode);\n            const opacity = count === 0 ? 0.15 : 0.8;\n            return {\n                name: value,\n                value: count,\n                startAngle,\n                endAngle,\n                color,\n                opacity\n            };\n        });\n        // Draw arcs (use per-arc opacity)\n        const innerRadius = Math.max(60, radius * 0.75);\n        const outerRadius = Math.max(80, radius * 0.95);\n        const arcGen = d3__WEBPACK_IMPORTED_MODULE_2__.arc().innerRadius(innerRadius).outerRadius(outerRadius).cornerRadius((d)=>{\n            // Only round the outer corners (outerRadius), not the inner\n            // D3 v7+ supports cornerRadius as a function\n            // We'll return 0 for inner, 8 for outer\n            // But d3.arc() only supports one value, so we need to use custom path if we want true squared inner corners\n            // As a workaround, set cornerRadius to 0 if the arc is small, else 8\n            return 0;\n        });\n        // Position the chart group with margins to prevent cropping\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left + effectiveChartWidth / 2}, ${margin.top + effectiveChartHeight / 2})`);\n        // Add gradients for arcs\n        leftArcs.forEach((arc, i)=>{\n            const baseColor = arc.color;\n            const lighterColor = d3__WEBPACK_IMPORTED_MODULE_2__.color(baseColor)?.brighter(0.3).toString() || baseColor;\n            defs.append(\"linearGradient\").attr(\"id\", `left-arc-gradient-${i}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", 1).selectAll(\"stop\").data([\n                {\n                    offset: \"0%\",\n                    color: baseColor\n                },\n                {\n                    offset: \"100%\",\n                    color: lighterColor\n                }\n            ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n        });\n        rightArcs.forEach((arc, i)=>{\n            const baseColor = arc.color;\n            const lighterColor = d3__WEBPACK_IMPORTED_MODULE_2__.color(baseColor)?.brighter(0.3).toString() || baseColor;\n            defs.append(\"linearGradient\").attr(\"id\", `right-arc-gradient-${i}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", 1).selectAll(\"stop\").data([\n                {\n                    offset: \"0%\",\n                    color: baseColor\n                },\n                {\n                    offset: \"100%\",\n                    color: lighterColor\n                }\n            ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n        });\n        // Create left arcs with event handlers first\n        const leftArcSelection = g.selectAll(\"path.left-arc\").data(leftArcs).enter().append(\"path\").attr(\"class\", \"left-arc\").attr(\"d\", (d)=>arcGen({\n                startAngle: d.startAngle,\n                endAngle: d.endAngle\n            })).attr(\"fill\", (d, i)=>`url(#left-arc-gradient-${i})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"left arc hover\");\n            // Trigger the same highlighting as auto-cycle animation\n            const arcIndex = leftArcs.findIndex((arc)=>arc.name === d.name);\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(arcIndex);\n            setHighlightedSide(\"left\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: (d.name || \"Unknown\").toString().replace(/_/g, \" \")\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1342,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1343,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1341,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"left arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        leftArcSelection.transition(transition).attr(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\") {\n                    // Highlight the source arc\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    // Check if this arc is connected to the highlighted right arc\n                    if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                        return 0.4; // Dim other left arcs\n                    }\n                } else if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    // When right arc is highlighted, highlight left arcs connected to it\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    const isConnectedToHighlightedRight = matrixValue > 0;\n                    console.log(`🔗 Left arc ${i} (${leftArcs[i]?.name}) connected to right arc ${highlightedArcIndex} (${rightArcs[highlightedArcIndex]?.name})?`, isConnectedToHighlightedRight, \"Matrix value:\", matrixValue);\n                    return isConnectedToHighlightedRight ? 0.95 : 0.3; // Higher contrast\n                }\n            }\n            // Use stable base opacity without pulsing to prevent flickering\n            return Math.max(0.8, d.opacity);\n        }).attr(\"stroke-width\", (d, i)=>{\n            // Enhanced stroke for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return 3; // Thickest stroke for source arc\n                }\n                // Stroke for connected arcs when right side is highlighted\n                if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    if (matrixValue > 0) {\n                        return 2; // Medium stroke for connected arcs\n                    }\n                }\n            }\n            return 1;\n        }).attr(\"stroke\", (d, i)=>{\n            // Enhanced stroke color for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n                // Stroke for connected arcs when right side is highlighted\n                if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    if (matrixValue > 0) {\n                        return settings.isDarkMode ? \"rgba(255,255,255,0.3)\" : \"rgba(0,0,0,0.2)\";\n                    }\n                }\n            }\n            return \"none\";\n        });\n        // Create right arcs with event handlers first\n        const rightArcSelection = g.selectAll(\"path.right-arc\").data(rightArcs).enter().append(\"path\").attr(\"class\", \"right-arc\").attr(\"d\", (d)=>arcGen({\n                startAngle: d.startAngle,\n                endAngle: d.endAngle\n            })).attr(\"fill\", (d, i)=>`url(#right-arc-gradient-${i})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"arc hover\");\n            // Trigger the same highlighting as auto-cycle animation\n            const arcIndex = rightArcs.findIndex((arc)=>arc.name === d.name);\n            console.log(\"\\uD83C\\uDFAF Hover triggering right arc highlighting:\", {\n                arcName: d.name,\n                arcIndex: arcIndex\n            });\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(arcIndex);\n            setHighlightedSide(\"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: (d.name || \"Unknown\").toString().replace(/_/g, \" \")\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1445,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1446,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1444,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        rightArcSelection.transition(transition).attr(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\") {\n                    // Highlight the source arc\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other right arcs\n                } else if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    // When left arc is highlighted, highlight right arcs connected to it\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    const isConnectedToHighlightedLeft = matrixValue > 0;\n                    console.log(`🔗 Right arc ${i} (${rightArcs[i]?.name}) connected to left arc ${highlightedArcIndex} (${leftArcs[highlightedArcIndex]?.name})?`, isConnectedToHighlightedLeft, \"Matrix value:\", matrixValue);\n                    return isConnectedToHighlightedLeft ? 0.95 : 0.3; // Higher contrast\n                }\n            }\n            // Use stable base opacity without pulsing to prevent flickering\n            return Math.max(0.8, d.opacity);\n        }).attr(\"stroke-width\", (d, i)=>{\n            // Enhanced stroke for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return 3; // Thickest stroke for source arc\n                }\n                // Stroke for connected arcs when left side is highlighted\n                if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    if (matrixValue > 0) {\n                        return 2; // Medium stroke for connected arcs\n                    }\n                }\n            }\n            return 1;\n        }).attr(\"stroke\", (d, i)=>{\n            // Enhanced stroke color for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n                // Stroke for connected arcs when left side is highlighted\n                if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    if (matrixValue > 0) {\n                        return settings.isDarkMode ? \"rgba(255,255,255,0.3)\" : \"rgba(0,0,0,0.2)\";\n                    }\n                }\n            }\n            return \"none\";\n        });\n        // Draw ribbons for connections (distributed along arc, proportional thickness)\n        // Use d3.ribbon() for each connection, but set the width by using the full segment for each connection\n        const ribbonRadius = Math.max(60, radius * 0.75); // Ensure minimum radius for ribbons\n        const ribbonGen = d3__WEBPACK_IMPORTED_MODULE_2__.ribbon().radius(ribbonRadius);\n        const connections = [];\n        for(let i = 0; i < sourceArray.length; i++){\n            for(let j = 0; j < targetArray.length; j++){\n                const value = connectionMatrix[i][j];\n                if (value > 0) {\n                    // Find the segment for this connection on both arcs\n                    const leftSeg = leftArcs[i];\n                    const rightSeg = rightArcs[j];\n                    // Compute arc midpoints for gradient direction\n                    const leftMidAngle = (leftSeg.startAngle + leftSeg.endAngle) / 2 - Math.PI / 2;\n                    const rightMidAngle = (rightSeg.startAngle + rightSeg.endAngle) / 2 - Math.PI / 2;\n                    const leftX = Math.cos(leftMidAngle) * ribbonRadius;\n                    const leftY = Math.sin(leftMidAngle) * ribbonRadius;\n                    const rightX = Math.cos(rightMidAngle) * ribbonRadius;\n                    const rightY = Math.sin(rightMidAngle) * ribbonRadius;\n                    // Add gradient for this ribbon\n                    const leftColor = leftArcs[i].color || d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10[i % 10];\n                    const rightColor = rightArcs[j].color || d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10[(j + 5) % 10];\n                    defs.append(\"linearGradient\").attr(\"id\", `ribbon-gradient-${i}-${j}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", leftX).attr(\"y1\", leftY).attr(\"x2\", rightX).attr(\"y2\", rightY).selectAll(\"stop\").data([\n                        {\n                            offset: \"0%\",\n                            color: leftColor\n                        },\n                        {\n                            offset: \"100%\",\n                            color: rightColor\n                        }\n                    ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n                    connections.push({\n                        source: {\n                            startAngle: leftSeg.startAngle,\n                            endAngle: leftSeg.endAngle,\n                            index: i\n                        },\n                        target: {\n                            startAngle: rightSeg.startAngle,\n                            endAngle: rightSeg.endAngle,\n                            index: j\n                        },\n                        value,\n                        left: leftArcs[i],\n                        right: rightArcs[j],\n                        gradientId: `ribbon-gradient-${i}-${j}`\n                    });\n                }\n            }\n        }\n        // Create ribbons with event handlers first\n        const ribbonSelection = g.selectAll(\"path.ribbon\").data(connections).enter().append(\"path\").attr(\"class\", \"ribbon\").attr(\"d\", function(d) {\n            const path = ribbonGen({\n                source: d.source,\n                target: d.target\n            });\n            return typeof path === \"string\" ? path : \"\";\n        }).attr(\"fill\", (d)=>`url(#${d.gradientId})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"ribbon hover\");\n            // Trigger highlighting for the source side of this ribbon (same as auto-cycle)\n            console.log(\"\\uD83C\\uDFAF Hover triggering ribbon highlighting:\", {\n                leftArcName: d.left.name,\n                rightArcName: d.right.name,\n                sourceIndex: d.source.index,\n                targetIndex: d.target.index\n            });\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(d.source.index);\n            setHighlightedSide(\"left\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: [\n                                (d.left.name || \"Unknown\").toString().replace(/_/g, \" \"),\n                                \" ↔ \",\n                                (d.right.name || \"Unknown\").toString().replace(/_/g, \" \")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1604,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Connections: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1607,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1603,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function(event, d) {\n            resumeAnimation(\"ribbon hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        ribbonSelection.transition(transition).attr(\"opacity\", (d)=>{\n            // Highlight ribbons connected to highlighted arcs with enhanced visibility\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                if (highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons more for better contrast\n            }\n            // Use stable base opacity without pulsing\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).attr(\"stroke-width\", (d)=>{\n            // Enhanced stroke for highlighted ribbons to show connections clearly\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 2.5; // Slightly thicker for better visibility\n                }\n            }\n            return 0.5;\n        }).attr(\"stroke\", (d)=>{\n            // Enhanced stroke color for highlighted connections\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // --- Label placement: properly spaced around circle ---\n        const labelRadius = Math.max(120, radius * 1.45); // Even more space for full text labels\n        const labelGroup = svg.append(\"g\").attr(\"transform\", `translate(${margin.left + effectiveChartWidth / 2}, ${margin.top + effectiveChartHeight / 2})`);\n        // Combine all arcs for unified label placement\n        const allArcs = [\n            ...leftArcs.map((arc)=>({\n                    ...arc,\n                    side: \"left\"\n                })),\n            ...rightArcs.map((arc)=>({\n                    ...arc,\n                    side: \"right\"\n                }))\n        ];\n        // Add labels with smart positioning to avoid overlap\n        labelGroup.selectAll(\"text.arc-label\").data(allArcs).enter().append(\"text\").attr(\"class\", \"arc-label\").attr(\"transform\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            const x = labelRadius * Math.cos(angle);\n            const y = labelRadius * Math.sin(angle);\n            const rotation = angle * 180 / Math.PI;\n            // Rotate text for better readability\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return `translate(${x}, ${y}) rotate(${rotation + 180})`;\n            } else {\n                return `translate(${x}, ${y}) rotate(${rotation})`;\n            }\n        }).attr(\"text-anchor\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return \"end\";\n            } else {\n                return \"start\";\n            }\n        }).attr(\"alignment-baseline\", \"middle\").style(\"font-family\", labelFontFamily).style(\"font-weight\", labelFontWeight).style(\"font-size\", (d)=>{\n            // Dynamic font size based on number of labels - larger since we're showing full text\n            const totalLabels = allArcs.length;\n            if (totalLabels > 12) return \"13px\";\n            if (totalLabels > 10) return \"14px\";\n            if (totalLabels > 8) return \"15px\";\n            return `${Math.max(16, labelFontSize)}px`;\n        }).style(\"fill\", labelColor).style(\"text-transform\", \"uppercase\").text((d)=>{\n            const text = (d.name || \"Unknown\").toString().replace(/_/g, \" \");\n            // Show full text - no truncation\n            return text;\n        }).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"label hover\");\n            const fullText = (d.name || \"Unknown\").toString().replace(/_/g, \" \");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: fullText\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1720,\n                            columnNumber: 16\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1721,\n                            columnNumber: 16\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Side: \",\n                                d.side\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1722,\n                            columnNumber: 16\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1719,\n                    columnNumber: 14\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"label hover end\");\n            setTooltip(null);\n        });\n        // Update insights\n        const totalConnections = connections.reduce((sum, d)=>sum + d.value, 0);\n        const strongestConnection = connections.length > 0 ? connections.reduce((max, d)=>d.value > max.value ? d : max, connections[0]) : null;\n        setInsights([\n            {\n                title: \"Total Responses\",\n                value: filteredData.length.toString()\n            },\n            {\n                title: \"Current View\",\n                value: `${currentSource} ↔ ${currentTarget}`\n            },\n            strongestConnection ? {\n                title: \"Strongest Connection\",\n                value: `${strongestConnection.left.name || \"Unknown\"} ↔ ${strongestConnection.right.name || \"Unknown\"}`,\n                description: `${strongestConnection.value} connections`\n            } : {\n                title: \"Strongest Connection\",\n                value: \"No connections found\",\n                description: \"\"\n            },\n            {\n                title: \"Total Connections\",\n                value: totalConnections.toString()\n            }\n        ]);\n    }, [\n        data,\n        currentSource,\n        currentTarget,\n        settings.useTestData,\n        settings.categoryColors,\n        isLoading,\n        lastCategoryChange,\n        isContainerTooSmall,\n        chartWidth,\n        chartHeight,\n        showSecondaryChord,\n        settings.isDarkMode\n    ]);\n    // Render secondary chord when peak performance is involved\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (showSecondaryChord) {\n            renderSecondaryChord();\n        }\n    }, [\n        showSecondaryChord,\n        data,\n        settings.useTestData,\n        settings.isDarkMode,\n        labelColor\n    ]);\n    // Tooltip rendering\n    const tooltipEl = tooltip ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            left: tooltip.x + 16,\n            top: tooltip.y + 16,\n            background: \"rgba(20,20,30,0.98)\",\n            color: \"#fff\",\n            padding: \"10px 16px\",\n            borderRadius: 8,\n            pointerEvents: \"none\",\n            zIndex: 100,\n            fontFamily: \"Avenir Next World, sans-serif\",\n            fontWeight: 600,\n            fontSize: 16,\n            boxShadow: \"0 4px 24px 0 rgba(16, 16, 235, 0.12)\",\n            maxWidth: 320\n        },\n        role: \"tooltip\",\n        \"aria-live\": \"polite\",\n        children: tooltip.content\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n        lineNumber: 1761,\n        columnNumber: 5\n    }, this) : null;\n    // Apply theme based on global settings\n    const themeClass = settings.isDarkMode ? \"dark\" : \"\";\n    const backgroundColor = settings.isDarkMode ? \"#1a1a1a\" : \"#ffffff\";\n    const textColor = settings.isDarkMode ? \"#ffffff\" : \"#0A0A0F\";\n    // Handle case where container is too small\n    if (isContainerTooSmall) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: `w-full h-full flex items-center justify-center ${themeClass}`,\n            style: {\n                backgroundColor\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                style: {\n                    color: textColor\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg mb-2\",\n                        children: \"Container too small\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1795,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm opacity-70\",\n                        children: \"Minimum size: 100x100px\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1796,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1794,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n            lineNumber: 1793,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `w-full h-full flex flex-col items-center justify-center ${themeClass}`,\n        style: {\n            backgroundColor\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_GlobalControlsNav__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1804,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex flex-col items-center justify-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full flex flex-col items-center justify-center mb-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_QuestionSelector__WEBPACK_IMPORTED_MODULE_4__.QuestionSelector, {\n                            availableFields: availableFields,\n                            currentSource: currentSource,\n                            currentTarget: currentTarget,\n                            onChange: (source, target)=>{\n                                const corrected = ensureDifferentCategories(source, target);\n                                setCurrentSource(corrected.source);\n                                setCurrentTarget(corrected.target);\n                                setLastCategoryChange(corrected);\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1807,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1806,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full flex justify-center items-center relative\",\n                        style: {\n                            height: height * 0.85\n                        },\n                        children: [\n                            showSecondaryChord ? // Two-chord layout when peak performance is involved\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full flex justify-center items-center gap-16\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-col items-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-bold mb-4\",\n                                                style: {\n                                                    color: textColor\n                                                },\n                                                children: \"Main Relationships\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1827,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                ref: svgRef,\n                                                width: width * 0.45,\n                                                height: height * 0.8,\n                                                style: {\n                                                    display: \"block\",\n                                                    background: \"transparent\",\n                                                    color: textColor\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1830,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                        lineNumber: 1826,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-col items-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-bold mb-4\",\n                                                style: {\n                                                    color: textColor\n                                                },\n                                                children: \"Years \\xd7 Performance Types\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1838,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                ref: secondarySvgRef,\n                                                width: width * 0.45,\n                                                height: height * 0.8,\n                                                style: {\n                                                    display: \"block\",\n                                                    background: \"transparent\",\n                                                    color: textColor\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1841,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                        lineNumber: 1837,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                lineNumber: 1825,\n                                columnNumber: 13\n                            }, this) : // Single chord layout when peak performance is not involved\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                ref: svgRef,\n                                width: width,\n                                height: height * 0.85,\n                                style: {\n                                    display: \"block\",\n                                    margin: \"0 auto\",\n                                    background: \"transparent\",\n                                    color: textColor\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                lineNumber: 1851,\n                                columnNumber: 13\n                            }, this),\n                            tooltipEl\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1819,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1805,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n        lineNumber: 1803,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9DaG9yZERpYWdyYW0udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFd0U7QUFDL0M7QUFFNEM7QUFHUjtBQVdoQztBQUM0QjtBQUNhO0FBQ2Y7QUFXdkQsb0VBQW9FO0FBQ3BFLFNBQVNZLGFBQWFDLFFBQWdCLEVBQUVDLFFBQWdCLEVBQUVDLFlBQWlCLEVBQUVDLGFBQXNCLEtBQUs7SUFDdEcsTUFBTUMsY0FBY0QsYUFBYUQsYUFBYUcsSUFBSSxHQUFHSCxhQUFhSSxLQUFLO0lBRXZFLElBQUlMLGFBQWEsc0JBQXNCO1FBQ3JDLE9BQU9HLFlBQVlHLGtCQUFrQixFQUFFLENBQUNQLFNBQVMsSUFBSTtJQUN2RDtJQUVBLGlFQUFpRTtJQUNqRSxJQUFJQyxhQUFhLGtCQUFrQjtRQUNqQyxPQUFPRyxZQUFZSSxjQUFjLEVBQUUsQ0FBQ1IsU0FBUyxJQUFJO0lBQ25EO0lBQ0EsSUFBSUMsYUFBYSxvQkFBb0I7UUFDbkMsT0FBT0csWUFBWUssZ0JBQWdCLEVBQUUsQ0FBQ1QsU0FBUyxJQUFJO0lBQ3JEO0lBQ0EsSUFBSUMsYUFBYSxjQUFjO1FBQzdCLE9BQU9HLFlBQVlNLFVBQVUsRUFBRSxDQUFDVixTQUFTLElBQUk7SUFDL0M7SUFDQSxJQUFJQyxhQUFhLGFBQWE7UUFDNUIsT0FBT0csWUFBWU8sU0FBUyxFQUFFLENBQUNYLFNBQVMsSUFBSTtJQUM5QztJQUNBLE9BQU87QUFDVDtBQUVlLFNBQVNZLGFBQWEsRUFDbkNDLFFBQVEsSUFBSSxFQUNaQyxTQUFTLElBQUksRUFDYkMsV0FBVyxJQUFJLEVBQ2ZDLG9CQUFvQixFQUNwQkMsaUJBQWlCLElBQUksRUFDckJDLHFCQUFxQixLQUFLLEVBQ1I7SUFDbEIsTUFBTUMsU0FBUzlCLDZDQUFNQSxDQUFnQjtJQUNyQyxNQUFNK0Isa0JBQWtCL0IsNkNBQU1BLENBQWdCO0lBQzlDLE1BQU0sRUFBRWdDLElBQUksRUFBRUMsU0FBUyxF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O2dEQUNDK08sS0FBS3BTO2dEQUNMTixPQUFPQSxRQUFRO2dEQUNmQyxRQUFRQSxTQUFTO2dEQUNqQnlILE9BQU87b0RBQUVpTCxTQUFTO29EQUFTbkIsWUFBWTtvREFBZWpELE9BQU84RDtnREFBVTs7Ozs7Ozs7Ozs7O2tEQUczRSw4REFBQzdKO3dDQUFJOEosV0FBVTs7MERBQ2IsOERBQUNHO2dEQUFHSCxXQUFVO2dEQUF5QjVLLE9BQU87b0RBQUU2RyxPQUFPOEQ7Z0RBQVU7MERBQUc7Ozs7OzswREFHcEUsOERBQUMxTztnREFDQytPLEtBQUtuUztnREFDTFAsT0FBT0EsUUFBUTtnREFDZkMsUUFBUUEsU0FBUztnREFDakJ5SCxPQUFPO29EQUFFaUwsU0FBUztvREFBU25CLFlBQVk7b0RBQWVqRCxPQUFPOEQ7Z0RBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7O3VDQUs3RSw0REFBNEQ7MENBQzVELDhEQUFDMU87Z0NBQ0MrTyxLQUFLcFM7Z0NBQ0xOLE9BQU9BO2dDQUNQQyxRQUFRQSxTQUFTO2dDQUNqQnlILE9BQU87b0NBQUVpTCxTQUFTO29DQUFTL0csUUFBUTtvQ0FBVTRGLFlBQVk7b0NBQWVqRCxPQUFPOEQ7Z0NBQVU7Ozs7Ozs0QkFHNUZmOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YVZpc3VhbGl6YXRpb24vQ2hvcmREaWFncmFtLnRzeD82ZDZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7XG5pbXBvcnQgeyBhcmMgfSBmcm9tICdkMy1zaGFwZSc7XG5pbXBvcnQgeyB1c2VWaXN1YWxpemF0aW9uRGF0YSB9IGZyb20gJy4vc2hhcmVkL3VzZVZpc3VhbGl6YXRpb25EYXRhJztcbmltcG9ydCB7IFZpc3VhbGl6YXRpb25Db250YWluZXIgfSBmcm9tICcuL3NoYXJlZC9WaXN1YWxpemF0aW9uQ29udGFpbmVyJztcbmltcG9ydCB7IERhdGFJbnNpZ2h0UGFuZWwgfSBmcm9tICcuL3NoYXJlZC9EYXRhSW5zaWdodFBhbmVsJztcbmltcG9ydCB7IFF1ZXN0aW9uU2VsZWN0b3IgfSBmcm9tICcuL3NoYXJlZC9RdWVzdGlvblNlbGVjdG9yJztcbmltcG9ydCB7IFxuICBwcm9jZXNzQ2hvcmREYXRhLCBcbiAgY2hvcmRDb25maWcsIFxuICBjeWNsaW5nTW9kZXMsIFxuICBnZXRDaG9yZENvbG9yLFxuICBjaG9yZEFuaW1hdGlvbnMsXG4gIGZpbHRlckNvbm5lY3RlZENhdGVnb3JpZXMsXG4gIHR5cGUgQ2hvcmRNYXRyaXgsXG4gIHR5cGUgQ2hvcmRHcm91cCxcbiAgdHlwZSBDaG9yZExpbmtcbn0gZnJvbSAnLi9zaGFyZWQvY2hvcmRVdGlscyc7XG5pbXBvcnQgeyB1c2VBcHBDb250ZXh0IH0gZnJvbSAnQC9saWIvY29udGV4dC9BcHBDb250ZXh0JztcbmltcG9ydCBHbG9iYWxDb250cm9sc05hdiBmcm9tICdAL2NvbXBvbmVudHMvc2hhcmVkL0dsb2JhbENvbnRyb2xzTmF2JztcbmltcG9ydCB7IGdldFllYXJzQ2F0ZWdvcnkgfSBmcm9tICcuL3NoYXJlZC9jb2xvclV0aWxzJztcblxuaW50ZXJmYWNlIENob3JkRGlhZ3JhbVByb3BzIHtcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGhlaWdodD86IG51bWJlcjtcbiAgYXV0b1BsYXk/OiBib29sZWFuO1xuICBvblJlbGF0aW9uc2hpcENoYW5nZT86IChzb3VyY2U6IHN0cmluZywgdGFyZ2V0OiBzdHJpbmcpID0+IHZvaWQ7XG4gIGVuYWJsZVJvdGF0aW9uPzogYm9vbGVhbjtcbiAgc2hvd0FsbENvbm5lY3Rpb25zPzogYm9vbGVhbjtcbn1cblxuLy8gSGVscGVyIHRvIGdldCBjb2xvciBmb3IgYSBub2RlIHVzaW5nIGdsb2JhbCBjb250ZXh0ICh0aGVtZS1hd2FyZSlcbmZ1bmN0aW9uIGdldE5vZGVDb2xvcihub2RlTmFtZTogc3RyaW5nLCBjYXRlZ29yeTogc3RyaW5nLCBnbG9iYWxDb2xvcnM6IGFueSwgaXNEYXJrTW9kZTogYm9vbGVhbiA9IGZhbHNlKTogc3RyaW5nIHtcbiAgY29uc3QgdGhlbWVDb2xvcnMgPSBpc0RhcmtNb2RlID8gZ2xvYmFsQ29sb3JzLmRhcmsgOiBnbG9iYWxDb2xvcnMubGlnaHQ7XG4gIFxuICBpZiAoY2F0ZWdvcnkgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnKSB7XG4gICAgcmV0dXJuIHRoZW1lQ29sb3JzLnllYXJzX2F0X21lZHRyb25pYz8uW25vZGVOYW1lXSB8fCAnI0ZGNkI2Qic7XG4gIH1cbiAgXG4gIC8vIFVzZSBnbG9iYWwgY29sb3JzIGlmIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGZhbGxiYWNrIHRvIGRlZmF1bHRzXG4gIGlmIChjYXRlZ29yeSA9PT0gJ2xlYXJuaW5nX3N0eWxlJykge1xuICAgIHJldHVybiB0aGVtZUNvbG9ycy5sZWFybmluZ19zdHlsZT8uW25vZGVOYW1lXSB8fCAnIzYwYTVmYSc7XG4gIH1cbiAgaWYgKGNhdGVnb3J5ID09PSAncGVha19wZXJmb3JtYW5jZScpIHtcbiAgICByZXR1cm4gdGhlbWVDb2xvcnMucGVha19wZXJmb3JtYW5jZT8uW25vZGVOYW1lXSB8fCAnIzRGOEVGNyc7XG4gIH1cbiAgaWYgKGNhdGVnb3J5ID09PSAnbW90aXZhdGlvbicpIHtcbiAgICByZXR1cm4gdGhlbWVDb2xvcnMubW90aXZhdGlvbj8uW25vZGVOYW1lXSB8fCAnIzk0NjdiZCc7XG4gIH1cbiAgaWYgKGNhdGVnb3J5ID09PSAnc2hhcGVkX2J5Jykge1xuICAgIHJldHVybiB0aGVtZUNvbG9ycy5zaGFwZWRfYnk/Lltub2RlTmFtZV0gfHwgJyMxZjc3YjQnO1xuICB9XG4gIHJldHVybiAnIzg4ODRkOCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENob3JkRGlhZ3JhbSh7XG4gIHdpZHRoID0gMTQwMCxcbiAgaGVpZ2h0ID0gMTAwMCxcbiAgYXV0b1BsYXkgPSB0cnVlLFxuICBvblJlbGF0aW9uc2hpcENoYW5nZSxcbiAgZW5hYmxlUm90YXRpb24gPSB0cnVlLFxuICBzaG93QWxsQ29ubmVjdGlvbnMgPSBmYWxzZSxcbn06IENob3JkRGlhZ3JhbVByb3BzKSB7XG4gIGNvbnN0IHN2Z1JlZiA9IHVzZVJlZjxTVkdTVkdFbGVtZW50PihudWxsKTtcbiAgY29uc3Qgc2Vjb25kYXJ5U3ZnUmVmID0gdXNlUmVmPFNWR1NWR0VsZW1lbnQ+KG51bGwpO1xuICBjb25zdCB7IGRhdGEsIGlzTG9hZGluZywgZXJyb3IgfSA9IHVzZVZpc3VhbGl6YXRpb25EYXRhKCk7XG4gIGNvbnN0IFtjdXJyZW50U291cmNlLCBzZXRDdXJyZW50U291cmNlXSA9IHVzZVN0YXRlKGN5Y2xpbmdNb2Rlc1swXS5zb3VyY2UpO1xuICBjb25zdCBbY3VycmVudFRhcmdldCwgc2V0Q3VycmVudFRhcmdldF0gPSB1c2VTdGF0ZShjeWNsaW5nTW9kZXNbMF0udGFyZ2V0KTtcbiAgY29uc3QgW2luc2lnaHRzLCBzZXRJbnNpZ2h0c10gPSB1c2VTdGF0ZTxBcnJheTx7IHRpdGxlOiBzdHJpbmc7IHZhbHVlOiBzdHJpbmc7IGRlc2NyaXB0aW9uPzogc3RyaW5nIH0+PihbXSk7XG4gIGNvbnN0IFt0b29sdGlwLCBzZXRUb29sdGlwXSA9IHVzZVN0YXRlPHsgeDogbnVtYmVyOyB5OiBudW1iZXI7IGNvbnRlbnQ6IFJlYWN0LlJlYWN0Tm9kZSB9IHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IHsgc2V0dGluZ3MgfSA9IHVzZUFwcENvbnRleHQoKTtcbiAgY29uc3QgW2xhc3RDYXRlZ29yeUNoYW5nZSwgc2V0TGFzdENhdGVnb3J5Q2hhbmdlXSA9IHVzZVN0YXRlPHsgc291cmNlOiBzdHJpbmc7IHRhcmdldDogc3RyaW5nIH0+KHsgc291cmNlOiBjdXJyZW50U291cmNlLCB0YXJnZXQ6IGN1cnJlbnRUYXJnZXQgfSk7XG4gIGNvbnN0IFtzaG93U2Vjb25kYXJ5Q2hvcmQsIHNldFNob3dTZWNvbmRhcnlDaG9yZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIFxuICAvLyBBbmltYXRpb24gc3RhdGUgbWFuYWdlbWVudCAoc2ltaWxhciB0byBBbGx1dmlhbERpYWdyYW0pXG4gIGNvbnN0IFthbmltYXRpb25QaGFzZSwgc2V0QW5pbWF0aW9uUGhhc2VdID0gdXNlU3RhdGU8J2Z1bGwnIHwgJ2hpZ2hsaWdodGluZycgfCAndHJhbnNpdGlvbmluZyc+KCdmdWxsJyk7XG4gIGNvbnN0IFtoaWdobGlnaHRlZEFyY0luZGV4LCBzZXRIaWdobGlnaHRlZEFyY0luZGV4XSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaGlnaGxpZ2h0ZWRTaWRlLCBzZXRIaWdobGlnaHRlZFNpZGVdID0gdXNlU3RhdGU8J2xlZnQnIHwgJ3JpZ2h0JyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaXNBbmltYXRpbmcsIHNldElzQW5pbWF0aW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBcbiAgLy8gU2Vjb25kYXJ5IGNob3JkIGFuaW1hdGlvbiBzdGF0ZVxuICBjb25zdCBbc2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UsIHNldFNlY29uZGFyeUFuaW1hdGlvblBoYXNlXSA9IHVzZVN0YXRlPCdmdWxsJyB8ICdoaWdobGlnaHRpbmcnIHwgJ3RyYW5zaXRpb25pbmcnPignZnVsbCcpO1xuICBjb25zdCBbc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCwgc2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleF0gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3NlY29uZGFyeUhpZ2hsaWdodGVkU2lkZSwgc2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRTaWRlXSA9IHVzZVN0YXRlPCdsZWZ0JyB8ICdyaWdodCcgfCBudWxsPihudWxsKTtcbiAgXG4gIC8vIEFuaW1hdGlvbiB0aW1pbmcgcmVmXG4gIGNvbnN0IGFuaW1hdGlvblJlZiA9IHVzZVJlZjx7XG4gICAgdGltZXI6IE5vZGVKUy5UaW1lb3V0IHwgbnVsbDtcbiAgICBydW5uaW5nOiBib29sZWFuO1xuICAgIGN1cnJlbnRJbmRleDogbnVtYmVyO1xuICAgIGN1cnJlbnRTaWRlOiAnbGVmdCcgfCAncmlnaHQnO1xuICAgIGlzUGF1c2VkOiBib29sZWFuO1xuICAgIGN5Y2xlQ291bnQ6IG51bWJlcjtcbiAgfT4oe1xuICAgIHRpbWVyOiBudWxsLFxuICAgIHJ1bm5pbmc6IGZhbHNlLFxuICAgIGN1cnJlbnRJbmRleDogMCxcbiAgICBjdXJyZW50U2lkZTogJ2xlZnQnLFxuICAgIGlzUGF1c2VkOiBmYWxzZSxcbiAgICBjeWNsZUNvdW50OiAwXG4gIH0pO1xuXG4gIC8vIFNlY29uZGFyeSBjaG9yZCBhbmltYXRpb24gdGltaW5nIHJlZlxuICBjb25zdCBzZWNvbmRhcnlBbmltYXRpb25SZWYgPSB1c2VSZWY8e1xuICAgIHRpbWVyOiBOb2RlSlMuVGltZW91dCB8IG51bGw7XG4gICAgcnVubmluZzogYm9vbGVhbjtcbiAgICBjdXJyZW50SW5kZXg6IG51bWJlcjtcbiAgICBjdXJyZW50U2lkZTogJ2xlZnQnIHwgJ3JpZ2h0JztcbiAgICBpc1BhdXNlZDogYm9vbGVhbjtcbiAgfT4oe1xuICAgIHRpbWVyOiBudWxsLFxuICAgIHJ1bm5pbmc6IGZhbHNlLFxuICAgIGN1cnJlbnRJbmRleDogMCxcbiAgICBjdXJyZW50U2lkZTogJ2xlZnQnLFxuICAgIGlzUGF1c2VkOiBmYWxzZVxuICB9KTtcblxuICAvLyBEZWZpbmUgYXZhaWxhYmxlIGZpZWxkcyBmb3IgdGhlIHNlbGVjdG9yXG4gIGNvbnN0IGF2YWlsYWJsZUZpZWxkcyA9IFtcbiAgICB7IHZhbHVlOiAneWVhcnNfYXRfbWVkdHJvbmljJywgbGFiZWw6ICdZZWFycyBhdCBNZWR0cm9uaWMnIH0sXG4gICAgeyB2YWx1ZTogJ3BlYWtfcGVyZm9ybWFuY2UnLCBsYWJlbDogJ1BlYWsgUGVyZm9ybWFuY2UnIH0sXG4gICAgeyB2YWx1ZTogJ2xlYXJuaW5nX3N0eWxlJywgbGFiZWw6ICdMZWFybmluZyBTdHlsZScgfSxcbiAgICB7IHZhbHVlOiAnbW90aXZhdGlvbicsIGxhYmVsOiAnTW90aXZhdGlvbicgfSxcbiAgICB7IHZhbHVlOiAnc2hhcGVkX2J5JywgbGFiZWw6ICdTaGFwZWQgQnknIH1cbiAgXTtcblxuICAvLyBUeXBvZ3JhcGh5IGNvbnN0YW50cyAodGhlbWUtYXdhcmUpXG4gIGNvbnN0IGxhYmVsRm9udFNpemUgPSAyMDtcbiAgY29uc3QgbGFiZWxGb250V2VpZ2h0ID0gNzAwO1xuICBjb25zdCBsYWJlbENvbG9yID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICcjZmZmZmZmJyA6ICcjMTcwRjVGJztcbiAgY29uc3QgbGFiZWxGb250RmFtaWx5ID0gJ0F2ZW5pciBOZXh0IFdvcmxkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU0YgUHJvXCIsIFwiUm9ib3RvXCIsIHNhbnMtc2VyaWYnO1xuXG4gIC8vIENoZWNrIGlmIHBlYWsgcGVyZm9ybWFuY2UgaXMgaW52b2x2ZWQgYW5kIHNob3cgc2Vjb25kYXJ5IGNob3JkXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaXNQZWFrUGVyZm9ybWFuY2VJbnZvbHZlZCA9IGN1cnJlbnRTb3VyY2UgPT09ICdwZWFrX3BlcmZvcm1hbmNlJyB8fCBjdXJyZW50VGFyZ2V0ID09PSAncGVha19wZXJmb3JtYW5jZSc7XG4gICAgc2V0U2hvd1NlY29uZGFyeUNob3JkKGlzUGVha1BlcmZvcm1hbmNlSW52b2x2ZWQpO1xuICB9LCBbY3VycmVudFNvdXJjZSwgY3VycmVudFRhcmdldF0pO1xuXG4gIC8vIFNlY29uZGFyeSBjaG9yZCBkaWFncmFtIGZvciBwZWFrIHBlcmZvcm1hbmNlIGJyZWFrZG93blxuICBjb25zdCByZW5kZXJTZWNvbmRhcnlDaG9yZCA9ICgpID0+IHtcbiAgICBpZiAoIXNlY29uZGFyeVN2Z1JlZi5jdXJyZW50IHx8ICFkYXRhLmxlbmd0aCB8fCBpc0xvYWRpbmcpIHJldHVybjtcblxuICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdChzZWNvbmRhcnlTdmdSZWYuY3VycmVudCk7XG4gICAgc3ZnLnNlbGVjdEFsbCgnKicpLnJlbW92ZSgpO1xuXG4gICAgY29uc3QgZmlsdGVyZWREYXRhID0gc2V0dGluZ3MudXNlVGVzdERhdGEgXG4gICAgICA/IGRhdGEgXG4gICAgICA6IGRhdGEuZmlsdGVyKGl0ZW0gPT4gIShpdGVtIGFzIGFueSkudGVzdF9kYXRhKTtcblxuICAgIC8vIEdldCBhbGwgZGF0YSBmb3Igc2Vjb25kYXJ5IGNob3JkIChZZWFycyBhdCBNZWR0cm9uaWMgdnMgUGVhayBQZXJmb3JtYW5jZSBjYXRlZ29yaWVzKVxuICAgIGNvbnN0IHNlY29uZGFyeURhdGEgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT4gKGQgYXMgYW55KS5wZWFrX3BlcmZvcm1hbmNlKTtcbiAgICBcbiAgICBpZiAoc2Vjb25kYXJ5RGF0YS5sZW5ndGggPCA1KSByZXR1cm47XG5cbiAgICAvLyBVc2Ugc2FtZSBkaW1lbnNpb25zIGFzIG1haW4gY2hvcmQgZm9yIGNvbnNpc3RlbmN5XG4gICAgY29uc3Qgc2Vjb25kYXJ5V2lkdGggPSBzaG93U2Vjb25kYXJ5Q2hvcmQgPyB3aWR0aCAqIDAuNDUgOiB3aWR0aDtcbiAgICBjb25zdCBzZWNvbmRhcnlIZWlnaHQgPSBzaG93U2Vjb25kYXJ5Q2hvcmQgPyBoZWlnaHQgKiAwLjggOiBoZWlnaHQgKiAwLjg1O1xuICAgIGNvbnN0IHNlY29uZGFyeU1hcmdpbiA9IHsgdG9wOiA4MCwgcmlnaHQ6IDgwLCBib3R0b206IDEwMCwgbGVmdDogODAgfTtcbiAgICBjb25zdCBzZWNvbmRhcnlDaGFydFdpZHRoID0gc2Vjb25kYXJ5V2lkdGggLSBzZWNvbmRhcnlNYXJnaW4ubGVmdCAtIHNlY29uZGFyeU1hcmdpbi5yaWdodDtcbiAgICBjb25zdCBzZWNvbmRhcnlDaGFydEhlaWdodCA9IHNlY29uZGFyeUhlaWdodCAtIHNlY29uZGFyeU1hcmdpbi50b3AgLSBzZWNvbmRhcnlNYXJnaW4uYm90dG9tO1xuICAgIGNvbnN0IHNlY29uZGFyeVJhZGl1cyA9IE1hdGgubWF4KDEyMCwgTWF0aC5taW4oc2Vjb25kYXJ5Q2hhcnRXaWR0aCwgc2Vjb25kYXJ5Q2hhcnRIZWlnaHQpIC8gMiAtIDYwKTtcblxuICAgIC8vIFllYXJzIGNhdGVnb3JpZXMgYW5kIFBlYWsgUGVyZm9ybWFuY2UgY2F0ZWdvcmllc1xuICAgIGNvbnN0IHllYXJzQ2F0ZWdvcmllcyA9IFsnMC01JywgJzYtMTAnLCAnMTEtMTUnLCAnMTYtMjAnLCAnMjArJ107XG4gICAgY29uc3QgcGVha1BlcmZDYXRlZ29yaWVzID0gQXJyYXkuZnJvbShuZXcgU2V0KHNlY29uZGFyeURhdGEubWFwKGQgPT4gKGQgYXMgYW55KS5wZWFrX3BlcmZvcm1hbmNlKSkpLmZpbHRlcihCb29sZWFuKS5zb3J0KCk7XG4gICAgXG4gICAgLy8gQ3JlYXRlIGJpcGFydGl0ZSBtYXRyaXg6IFllYXJzIHZzIFBlYWsgUGVyZm9ybWFuY2VcbiAgICBjb25zdCBhbGxDYXRlZ29yaWVzID0gWy4uLnllYXJzQ2F0ZWdvcmllcywgLi4ucGVha1BlcmZDYXRlZ29yaWVzXTtcbiAgICBjb25zdCBtYXRyaXggPSBhbGxDYXRlZ29yaWVzLm1hcCgoc291cmNlQ2F0ZWdvcnksIHNvdXJjZUluZGV4KSA9PiBcbiAgICAgIGFsbENhdGVnb3JpZXMubWFwKCh0YXJnZXRDYXRlZ29yeSwgdGFyZ2V0SW5kZXgpID0+IHtcbiAgICAgICAgLy8gT25seSBjcmVhdGUgY29ubmVjdGlvbnMgYmV0d2VlbiB5ZWFycyBhbmQgcGVhayBwZXJmb3JtYW5jZSAobm90IHdpdGhpbiBzYW1lIHR5cGUpXG4gICAgICAgIGNvbnN0IHNvdXJjZUlzWWVhcnMgPSBzb3VyY2VJbmRleCA8IHllYXJzQ2F0ZWdvcmllcy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IHRhcmdldElzWWVhcnMgPSB0YXJnZXRJbmRleCA8IHllYXJzQ2F0ZWdvcmllcy5sZW5ndGg7XG4gICAgICAgIFxuICAgICAgICAvLyBPbmx5IGNvbm5lY3QgeWVhcnMgdG8gcGVhayBwZXJmb3JtYW5jZVxuICAgICAgICBpZiAoc291cmNlSXNZZWFycyA9PT0gdGFyZ2V0SXNZZWFycykgcmV0dXJuIDA7XG4gICAgICAgIFxuICAgICAgICAvLyBDb3VudCBwZW9wbGUgd2hvIG1hdGNoIHRoaXMgeWVhciArIHBlcmZvcm1hbmNlIGNvbWJpbmF0aW9uXG4gICAgICAgIGNvbnN0IHllYXJzQ2F0ID0gc291cmNlSXNZZWFycyA/IHNvdXJjZUNhdGVnb3J5IDogdGFyZ2V0Q2F0ZWdvcnk7XG4gICAgICAgIGNvbnN0IHBlcmZDYXQgPSBzb3VyY2VJc1llYXJzID8gdGFyZ2V0Q2F0ZWdvcnkgOiBzb3VyY2VDYXRlZ29yeTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBzZWNvbmRhcnlEYXRhLmZpbHRlcihkID0+IHtcbiAgICAgICAgICBjb25zdCB5ZWFycyA9IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCk7XG4gICAgICAgICAgY29uc3QgcGVyZiA9IChkIGFzIGFueSkucGVha19wZXJmb3JtYW5jZTtcbiAgICAgICAgICByZXR1cm4geWVhcnMgPT09IHllYXJzQ2F0ICYmIHBlcmYgPT09IHBlcmZDYXQ7XG4gICAgICAgIH0pLmxlbmd0aDtcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIC8vIENyZWF0ZSBjaG9yZCBsYXlvdXRcbiAgICBjb25zdCBjaG9yZExheW91dCA9IGQzLmNob3JkKCkucGFkQW5nbGUoMC4wNSk7XG4gICAgY29uc3QgY2hvcmREYXRhID0gY2hvcmRMYXlvdXQobWF0cml4KTtcblxuICAgIGNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke3NlY29uZGFyeU1hcmdpbi5sZWZ0ICsgc2Vjb25kYXJ5Q2hhcnRXaWR0aCAvIDJ9LCAke3NlY29uZGFyeU1hcmdpbi50b3AgKyBzZWNvbmRhcnlDaGFydEhlaWdodCAvIDJ9KWApO1xuXG4gICAgLy8gRHJhdyBhcmNzXG4gICAgY29uc3QgYXJjID0gZDMuYXJjKClcbiAgICAgIC5pbm5lclJhZGl1cyhzZWNvbmRhcnlSYWRpdXMgKiAwLjc1KVxuICAgICAgLm91dGVyUmFkaXVzKHNlY29uZGFyeVJhZGl1cyAqIDAuOTUpO1xuXG4gICAgY29uc3QgcmliYm9uID0gZDMucmliYm9uKCkucmFkaXVzKHNlY29uZGFyeVJhZGl1cyAqIDAuNzUpO1xuXG4gICAgLy8gQ29sb3JzOiBkaWZmZXJlbnQgaHVlcyBmb3IgeWVhcnMgdnMgcGVhayBwZXJmb3JtYW5jZSB0eXBlc1xuICAgIGNvbnN0IHllYXJzQ29sb3JzID0gWycjMDA3N0NDJywgJyMwMEEzRTAnLCAnIzRGQzNGNycsICcjODFDNzg0JywgJyNBRUQ1ODEnXTsgLy8gQmx1ZXMvR3JlZW5zIGZvciB5ZWFyc1xuICAgIGNvbnN0IHBlcmZDb2xvcnMgPSBbJyNGRjZCNkInLCAnI0ZGRDE2NicsICcjMDZENkEwJywgJyMxMThBQjInLCAnI0ZGOUYxQycsICcjNEVDREM0J107IC8vIFZhcmlvdXMgY29sb3JzIGZvciBwZXJmb3JtYW5jZSB0eXBlc1xuICAgIGNvbnN0IGNvbG9ycyA9IFsuLi55ZWFyc0NvbG9ycywgLi4ucGVyZkNvbG9ycy5zbGljZSgwLCBwZWFrUGVyZkNhdGVnb3JpZXMubGVuZ3RoKV07XG5cbiAgICAvLyBEcmF3IGdyb3VwcyAoYXJjcykgd2l0aCBhbmltYXRpb24gYW5kIGhvdmVyIGVmZmVjdHNcbiAgICBjb25zdCBncm91cFNlbGVjdGlvbiA9IGcuc2VsZWN0QWxsKCcuY2hvcmQtZ3JvdXAnKVxuICAgICAgLmRhdGEoY2hvcmREYXRhLmdyb3VwcylcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdjbGFzcycsICdjaG9yZC1ncm91cCcpXG4gICAgICAuYXR0cignZCcsIGFyYyBhcyBhbnkpXG4gICAgICAuc3R5bGUoJ2ZpbGwnLCAoZCwgaSkgPT4gY29sb3JzW2kgJSBjb2xvcnMubGVuZ3RoXSlcbiAgICAgIC5zdHlsZSgnb3BhY2l0eScsIDApXG4gICAgICAub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudCwgZDogYW55KSB7XG4gICAgICAgIHBhdXNlQW5pbWF0aW9uKCdzZWNvbmRhcnkgYXJjIGhvdmVyJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBUcmlnZ2VyIGhpZ2hsaWdodGluZyBmb3Igc2Vjb25kYXJ5IGNob3JkXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn46vIFNlY29uZGFyeSBjaG9yZCBhcmMgaG92ZXI6Jywge1xuICAgICAgICAgIGdyb3VwSW5kZXg6IGQuaW5kZXgsXG4gICAgICAgICAgY2F0ZWdvcnk6IGFsbENhdGVnb3JpZXNbZC5pbmRleF1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBzZXRTZWNvbmRhcnlBbmltYXRpb25QaGFzZSgnaGlnaGxpZ2h0aW5nJyk7XG4gICAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXgoZC5pbmRleCk7XG4gICAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkU2lkZShkLmluZGV4IDwgeWVhcnNDYXRlZ29yaWVzLmxlbmd0aCA/ICdsZWZ0JyA6ICdyaWdodCcpO1xuICAgICAgICBcbiAgICAgICAgc2V0VG9vbHRpcCh7XG4gICAgICAgICAgeDogZXZlbnQucGFnZVgsXG4gICAgICAgICAgeTogZXZlbnQucGFnZVksXG4gICAgICAgICAgY29udGVudDogKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcsIG1hcmdpbkJvdHRvbTogNCB9fT57YWxsQ2F0ZWdvcmllc1tkLmluZGV4XT8udG9TdHJpbmcoKS5yZXBsYWNlKC9fL2csICcgJykgfHwgJyd9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXY+e2QuaW5kZXggPCB5ZWFyc0NhdGVnb3JpZXMubGVuZ3RoID8gJ1llYXJzIGF0IE1lZHRyb25pYycgOiAnUGVhayBQZXJmb3JtYW5jZSBUeXBlJ308L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj5WYWx1ZToge2QudmFsdWV9PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VsZWF2ZScsICgpID0+IHtcbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdzZWNvbmRhcnkgYXJjIGhvdmVyIGVuZCcpO1xuICAgICAgICBzZXRUb29sdGlwKG51bGwpO1xuICAgICAgICBcbiAgICAgICAgLy8gUmVzZXQgaGlnaGxpZ2h0aW5nIHdoZW4gYW5pbWF0aW9uIHJlc3VtZXNcbiAgICAgICAgc2V0U2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgICAgc2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleChudWxsKTtcbiAgICAgICAgc2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRTaWRlKG51bGwpO1xuICAgICAgfSk7XG5cbiAgICAvLyBBcHBseSB0cmFuc2l0aW9uIGFuaW1hdGlvbnMgdG8gZ3JvdXBzXG4gICAgZ3JvdXBTZWxlY3Rpb25cbiAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbig3NTApXG4gICAgICAuc3R5bGUoJ29wYWNpdHknLCAoZCwgaSkgPT4ge1xuICAgICAgICAvLyBBcHBseSBmdWxsIHJlbGF0aW9uc2hpcCBjaGFpbiBoaWdobGlnaHRpbmdcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBpKSB7XG4gICAgICAgICAgICByZXR1cm4gMS4wOyAvLyBTb3VyY2UgYXJjIGlzIGZ1bGx5IGhpZ2hsaWdodGVkXG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIENoZWNrIGlmIHRoaXMgYXJjIGlzIGNvbm5lY3RlZCB0byB0aGUgaGlnaGxpZ2h0ZWQgYXJjXG4gICAgICAgICAgaWYgKHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzQ29ubmVjdGVkID0gY2hvcmREYXRhLnNvbWUoY2hvcmQgPT4gXG4gICAgICAgICAgICAgIChjaG9yZC5zb3VyY2UuaW5kZXggPT09IGkgJiYgY2hvcmQudGFyZ2V0LmluZGV4ID09PSBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4KSB8fFxuICAgICAgICAgICAgICAoY2hvcmQuc291cmNlLmluZGV4ID09PSBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ICYmIGNob3JkLnRhcmdldC5pbmRleCA9PT0gaSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm4gaXNDb25uZWN0ZWQgPyAwLjk1IDogMC4zO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMC44O1xuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgKGQsIGkpID0+IHtcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJyAmJiBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBpKSB7XG4gICAgICAgICAgcmV0dXJuIDM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9KVxuICAgICAgLnN0eWxlKCdzdHJva2UnLCAoZCwgaSkgPT4ge1xuICAgICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnICYmIHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGkpIHtcbiAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgIH0pO1xuXG4gICAgLy8gRHJhdyBjaG9yZHMgKHJpYmJvbnMpIHdpdGggYW5pbWF0aW9uIGFuZCBob3ZlciBlZmZlY3RzXG4gICAgY29uc3QgY2hvcmRTZWxlY3Rpb24gPSBnLnNlbGVjdEFsbCgnLmNob3JkJylcbiAgICAgIC5kYXRhKGNob3JkRGF0YSlcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdjbGFzcycsICdjaG9yZCcpXG4gICAgICAuYXR0cignZCcsIHJpYmJvbiBhcyBhbnkpXG4gICAgICAuc3R5bGUoJ2ZpbGwnLCBkID0+IGNvbG9yc1tkLnNvdXJjZS5pbmRleCAlIGNvbG9ycy5sZW5ndGhdKVxuICAgICAgLnN0eWxlKCdvcGFjaXR5JywgMClcbiAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICBwYXVzZUFuaW1hdGlvbignc2Vjb25kYXJ5IHJpYmJvbiBob3ZlcicpO1xuICAgICAgICBcbiAgICAgICAgLy8gVHJpZ2dlciBoaWdobGlnaHRpbmcgZm9yIHRoZSBzb3VyY2Ugc2lkZSBvZiB0aGlzIHJpYmJvblxuICAgICAgICBjb25zb2xlLmxvZygn8J+OryBTZWNvbmRhcnkgcmliYm9uIGhvdmVyOicsIHtcbiAgICAgICAgICBzb3VyY2VJbmRleDogZC5zb3VyY2UuaW5kZXgsXG4gICAgICAgICAgdGFyZ2V0SW5kZXg6IGQudGFyZ2V0LmluZGV4LFxuICAgICAgICAgIHNvdXJjZUNhdGVnb3J5OiBhbGxDYXRlZ29yaWVzW2Quc291cmNlLmluZGV4XSxcbiAgICAgICAgICB0YXJnZXRDYXRlZ29yeTogYWxsQ2F0ZWdvcmllc1tkLnRhcmdldC5pbmRleF1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBzZXRTZWNvbmRhcnlBbmltYXRpb25QaGFzZSgnaGlnaGxpZ2h0aW5nJyk7XG4gICAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXgoZC5zb3VyY2UuaW5kZXgpO1xuICAgICAgICBzZXRTZWNvbmRhcnlIaWdobGlnaHRlZFNpZGUoZC5zb3VyY2UuaW5kZXggPCB5ZWFyc0NhdGVnb3JpZXMubGVuZ3RoID8gJ2xlZnQnIDogJ3JpZ2h0Jyk7XG4gICAgICAgIFxuICAgICAgICBzZXRUb29sdGlwKHtcbiAgICAgICAgICB4OiBldmVudC5wYWdlWCxcbiAgICAgICAgICB5OiBldmVudC5wYWdlWSxcbiAgICAgICAgICBjb250ZW50OiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICdib2xkJywgbWFyZ2luQm90dG9tOiA0IH19PlxuICAgICAgICAgICAgICAgIHthbGxDYXRlZ29yaWVzW2Quc291cmNlLmluZGV4XX0g4oaUIHthbGxDYXRlZ29yaWVzW2QudGFyZ2V0LmluZGV4XX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXY+Q29ubmVjdGlvbnM6IHtkLnNvdXJjZS52YWx1ZX08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIClcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJlc3VtZUFuaW1hdGlvbignc2Vjb25kYXJ5IHJpYmJvbiBob3ZlciBlbmQnKTtcbiAgICAgICAgc2V0VG9vbHRpcChudWxsKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlc2V0IGhpZ2hsaWdodGluZyB3aGVuIGFuaW1hdGlvbiByZXN1bWVzXG4gICAgICAgIHNldFNlY29uZGFyeUFuaW1hdGlvblBoYXNlKCdmdWxsJyk7XG4gICAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXgobnVsbCk7XG4gICAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkU2lkZShudWxsKTtcbiAgICAgIH0pO1xuXG4gICAgLy8gQXBwbHkgdHJhbnNpdGlvbiBhbmltYXRpb25zIHRvIGNob3Jkc1xuICAgIGNob3JkU2VsZWN0aW9uXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oNzUwKVxuICAgICAgLnN0eWxlKCdvcGFjaXR5JywgZCA9PiB7XG4gICAgICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC5zb3VyY2UuaW5kZXggfHwgc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC50YXJnZXQuaW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAwLjk1OyAvLyBNYWtlIGNvbm5lY3RlZCByaWJib25zIHZlcnkgcHJvbWluZW50XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAwLjI7IC8vIERpbSBub24tY29ubmVjdGVkIHJpYmJvbnNcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuNyA6IDAuNjtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsIChkOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnNvdXJjZS5pbmRleCB8fCBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnRhcmdldC5pbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIDIuNTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDAuNTtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZScsIGQgPT4ge1xuICAgICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4IHx8IHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICB9KTtcblxuICAgIC8vIEFkZCBsYWJlbHMgd2l0aCBwcm9wZXIgc3BhY2luZyBhbmQgcm90YXRpb25cbiAgICBjb25zdCBzZWNvbmRhcnlMYWJlbFJhZGl1cyA9IE1hdGgubWF4KDEyMCwgc2Vjb25kYXJ5UmFkaXVzICogMS40NSk7XG4gICAgZy5zZWxlY3RBbGwoJy5jaG9yZC1sYWJlbCcpXG4gICAgICAuZGF0YShjaG9yZERhdGEuZ3JvdXBzKVxuICAgICAgLmVudGVyKClcbiAgICAgIC5hcHBlbmQoJ3RleHQnKVxuICAgICAgLmF0dHIoJ2NsYXNzJywgJ2Nob3JkLWxhYmVsJylcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBkID0+IHtcbiAgICAgICAgY29uc3QgYW5nbGUgPSAoZC5zdGFydEFuZ2xlICsgZC5lbmRBbmdsZSkgLyAyIC0gTWF0aC5QSSAvIDI7XG4gICAgICAgIGNvbnN0IHggPSBzZWNvbmRhcnlMYWJlbFJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKTtcbiAgICAgICAgY29uc3QgeSA9IHNlY29uZGFyeUxhYmVsUmFkaXVzICogTWF0aC5zaW4oYW5nbGUpO1xuICAgICAgICBjb25zdCByb3RhdGlvbiA9IGFuZ2xlICogMTgwIC8gTWF0aC5QSTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJvdGF0ZSB0ZXh0IGZvciBiZXR0ZXIgcmVhZGFiaWxpdHlcbiAgICAgICAgaWYgKGFuZ2xlID4gTWF0aC5QSSAvIDIgfHwgYW5nbGUgPCAtTWF0aC5QSSAvIDIpIHtcbiAgICAgICAgICByZXR1cm4gYHRyYW5zbGF0ZSgke3h9LCAke3l9KSByb3RhdGUoJHtyb3RhdGlvbiArIDE4MH0pYDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gYHRyYW5zbGF0ZSgke3h9LCAke3l9KSByb3RhdGUoJHtyb3RhdGlvbn0pYDtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsIGQgPT4ge1xuICAgICAgICBjb25zdCBhbmdsZSA9IChkLnN0YXJ0QW5nbGUgKyBkLmVuZEFuZ2xlKSAvIDIgLSBNYXRoLlBJIC8gMjtcbiAgICAgICAgaWYgKGFuZ2xlID4gTWF0aC5QSSAvIDIgfHwgYW5nbGUgPCAtTWF0aC5QSSAvIDIpIHtcbiAgICAgICAgICByZXR1cm4gJ2VuZCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICdzdGFydCc7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuYXR0cignYWxpZ25tZW50LWJhc2VsaW5lJywgJ21pZGRsZScpXG4gICAgICAuc3R5bGUoJ2ZvbnQtZmFtaWx5JywgbGFiZWxGb250RmFtaWx5KVxuICAgICAgLnN0eWxlKCdmb250LXdlaWdodCcsIGxhYmVsRm9udFdlaWdodClcbiAgICAgIC5zdHlsZSgnZm9udC1zaXplJywgZCA9PiB7XG4gICAgICAgIC8vIER5bmFtaWMgZm9udCBzaXplIGJhc2VkIG9uIG51bWJlciBvZiBsYWJlbHNcbiAgICAgICAgY29uc3QgdG90YWxMYWJlbHMgPSBhbGxDYXRlZ29yaWVzLmxlbmd0aDtcbiAgICAgICAgaWYgKHRvdGFsTGFiZWxzID4gMTIpIHJldHVybiAnMTNweCc7XG4gICAgICAgIGlmICh0b3RhbExhYmVscyA+IDEwKSByZXR1cm4gJzE0cHgnO1xuICAgICAgICBpZiAodG90YWxMYWJlbHMgPiA4KSByZXR1cm4gJzE1cHgnO1xuICAgICAgICByZXR1cm4gJzE2cHgnO1xuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnZmlsbCcsIGxhYmVsQ29sb3IpXG4gICAgICAuc3R5bGUoJ3RleHQtdHJhbnNmb3JtJywgJ3VwcGVyY2FzZScpXG4gICAgICAudGV4dCgoZCwgaSkgPT4ge1xuICAgICAgICBjb25zdCB0ZXh0ID0gYWxsQ2F0ZWdvcmllc1tpXT8udG9TdHJpbmcoKS5yZXBsYWNlKC9fL2csICcgJykgfHwgJyc7XG4gICAgICAgIC8vIFNob3cgZnVsbCB0ZXh0IGZvciBzZWNvbmRhcnkgY2hvcmQgbGFiZWxzXG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKGV2ZW50LCBkKSB7XG4gICAgICAgIGNvbnN0IGZ1bGxUZXh0ID0gYWxsQ2F0ZWdvcmllc1tkLmluZGV4XT8udG9TdHJpbmcoKS5yZXBsYWNlKC9fL2csICcgJykgfHwgJyc7XG4gICAgICAgIHNldFRvb2x0aXAoe1xuICAgICAgICAgIHg6IGV2ZW50LnBhZ2VYLFxuICAgICAgICAgIHk6IGV2ZW50LnBhZ2VZLFxuICAgICAgICAgIGNvbnRlbnQ6IChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnLCBtYXJnaW5Cb3R0b206IDQgfX0+e2Z1bGxUZXh0fTwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PntkLmluZGV4IDwgeWVhcnNDYXRlZ29yaWVzLmxlbmd0aCA/ICdZZWFycyBhdCBNZWR0cm9uaWMnIDogJ1BlYWsgUGVyZm9ybWFuY2UgVHlwZSd9PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VsZWF2ZScsICgpID0+IHNldFRvb2x0aXAobnVsbCkpO1xuXG5cbiAgfTtcblxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZW5zdXJlIHNvdXJjZSBhbmQgdGFyZ2V0IGFyZSBkaWZmZXJlbnRcbiAgY29uc3QgZW5zdXJlRGlmZmVyZW50Q2F0ZWdvcmllcyA9IChzb3VyY2U6IHN0cmluZywgdGFyZ2V0OiBzdHJpbmcpOiB7IHNvdXJjZTogc3RyaW5nOyB0YXJnZXQ6IHN0cmluZyB9ID0+IHtcbiAgICBpZiAoc291cmNlID09PSB0YXJnZXQpIHtcbiAgICAgIC8vIEZpbmQgYSBkaWZmZXJlbnQgdGFyZ2V0XG4gICAgICBjb25zdCBkaWZmZXJlbnRPcHRpb24gPSBhdmFpbGFibGVGaWVsZHMuZmluZChmaWVsZCA9PiBmaWVsZC52YWx1ZSAhPT0gc291cmNlKTtcbiAgICAgIHJldHVybiB7IHNvdXJjZSwgdGFyZ2V0OiBkaWZmZXJlbnRPcHRpb24gPyBkaWZmZXJlbnRPcHRpb24udmFsdWUgOiAnbGVhcm5pbmdfc3R5bGUnIH07XG4gICAgfVxuICAgIHJldHVybiB7IHNvdXJjZSwgdGFyZ2V0IH07XG4gIH07XG5cbiAgLy8gRW5zdXJlIGluaXRpYWwgc3RhdGUgZG9lc24ndCBoYXZlIHNhbWUgY2F0ZWdvcmllc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGNvcnJlY3RlZCA9IGVuc3VyZURpZmZlcmVudENhdGVnb3JpZXMoY3VycmVudFNvdXJjZSwgY3VycmVudFRhcmdldCk7XG4gICAgaWYgKGNvcnJlY3RlZC5zb3VyY2UgIT09IGN1cnJlbnRTb3VyY2UgfHwgY29ycmVjdGVkLnRhcmdldCAhPT0gY3VycmVudFRhcmdldCkge1xuICAgICAgc2V0Q3VycmVudFNvdXJjZShjb3JyZWN0ZWQuc291cmNlKTtcbiAgICAgIHNldEN1cnJlbnRUYXJnZXQoY29ycmVjdGVkLnRhcmdldCk7XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgLy8gVHJhY2sgY3VycmVudCBtb2RlIGluZGV4IHdpdGggc3RhdGVcbiAgY29uc3QgW2N1cnJlbnRNb2RlSW5kZXgsIHNldEN1cnJlbnRNb2RlSW5kZXhdID0gdXNlU3RhdGUoMCk7XG4gIFxuICAvLyBVcGRhdGUgbW9kZSBpbmRleCB3aGVuIHNvdXJjZS90YXJnZXQgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IG1vZGVJbmRleCA9IGN5Y2xpbmdNb2Rlcy5maW5kSW5kZXgoXG4gICAgICBtb2RlID0+IG1vZGUuc291cmNlID09PSBjdXJyZW50U291cmNlICYmIG1vZGUudGFyZ2V0ID09PSBjdXJyZW50VGFyZ2V0XG4gICAgKTtcbiAgICBpZiAobW9kZUluZGV4ICE9PSAtMSkge1xuICAgICAgc2V0Q3VycmVudE1vZGVJbmRleChtb2RlSW5kZXgpO1xuICAgIH1cbiAgfSwgW2N1cnJlbnRTb3VyY2UsIGN1cnJlbnRUYXJnZXRdKTtcblxuICAvLyBSZW1vdmUgcHVsc2luZyBhbmltYXRpb24gdG8gZWxpbWluYXRlIGZsaWNrZXJpbmcgLSB3aWxsIHVzZSBDU1MgYW5pbWF0aW9ucyBpbnN0ZWFkIGlmIG5lZWRlZFxuXG4gIC8vIEFyYyBoaWdobGlnaHRpbmcgYW5pbWF0aW9uIHdpdGggY29ubmVjdGVkIHJpYmJvbnNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZygn8J+UhCBDaG9yZERpYWdyYW0gYXJjIGhpZ2hsaWdodGluZyBlZmZlY3Q6Jywge1xuICAgICAgYXV0b1BsYXksXG4gICAgICBpc0F1dG9QbGF5RW5hYmxlZDogc2V0dGluZ3MuaXNBdXRvUGxheUVuYWJsZWQsXG4gICAgICBkYXRhTGVuZ3RoOiBkYXRhLmxlbmd0aFxuICAgIH0pO1xuXG4gICAgaWYgKCFhdXRvUGxheSB8fCAhc2V0dGluZ3MuaXNBdXRvUGxheUVuYWJsZWQgfHwgIWRhdGEubGVuZ3RoKSB7XG4gICAgICBjb25zb2xlLmxvZygn4p2MIEFyYyBoaWdobGlnaHRpbmcgZGlzYWJsZWQnKTtcbiAgICAgIC8vIFJlc2V0IHRvIGZ1bGwgb3BhY2l0eSB3aGVuIGFuaW1hdGlvbiBpcyBkaXNhYmxlZFxuICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgIHNldEhpZ2hsaWdodGVkQXJjSW5kZXgobnVsbCk7XG4gICAgICBzZXRIaWdobGlnaHRlZFNpZGUobnVsbCk7XG4gICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGFuaW1hdGUgPSAoKSA9PiB7XG4gICAgICBpZiAoIWFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgfHwgYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHJldHVybjtcblxuICAgICAgLy8gU2FmZXR5IGNoZWNrOiBwcmV2ZW50IGluZmluaXRlIGxvb3BzXG4gICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3ljbGVDb3VudCA+IDEwMDApIHtcbiAgICAgICAgY29uc29sZS5sb2coJ/Cfm5EgQ2hvcmQgYW5pbWF0aW9uIGN5Y2xlIGxpbWl0IHJlYWNoZWQsIHJlc2V0dGluZycpO1xuICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jeWNsZUNvdW50ID0gMDtcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4ID0gMDtcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPSAnbGVmdCc7XG4gICAgICB9XG5cbiAgICAgIC8vIEdldCBjdXJyZW50IGRhdGEgY29udGV4dCAodGhpcyB3aWxsIGFkYXB0IHRvIG1vZGUgY2hhbmdlcylcbiAgICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IHNldHRpbmdzLnVzZVRlc3REYXRhID8gZGF0YSA6IGRhdGEuZmlsdGVyKGl0ZW0gPT4gIShpdGVtIGFzIGFueSkudGVzdF9kYXRhKTtcbiAgICAgIFxuICAgICAgLy8gRGVmaW5lIGFsbCBwb3NzaWJsZSBjYXRlZ29yaWVzIGZvciBlYWNoIGZpZWxkIChub3QganVzdCB0aG9zZSB3aXRoIGRhdGEpXG4gICAgICBjb25zdCBhbGxDYXRlZ29yaWVzID0ge1xuICAgICAgICB5ZWFyc19hdF9tZWR0cm9uaWM6IFsnMC01JywgJzYtMTAnLCAnMTEtMTUnLCAnMTYtMjAnLCAnMjArJ10sXG4gICAgICAgIGxlYXJuaW5nX3N0eWxlOiBbJ3Zpc3VhbCcsICdhdWRpdG9yeScsICdraW5lc3RoZXRpYycsICdyZWFkaW5nX3dyaXRpbmcnXSxcbiAgICAgICAgc2hhcGVkX2J5OiBbJ21lbnRvcicsICdjaGFsbGVuZ2UnLCAnZmFpbHVyZScsICdzdWNjZXNzJywgJ3RlYW0nLCAnb3RoZXInXSxcbiAgICAgICAgcGVha19wZXJmb3JtYW5jZTogWydFeHRyb3ZlcnQsIE1vcm5pbmcnLCAnRXh0cm92ZXJ0LCBFdmVuaW5nJywgJ0ludHJvdmVydCwgTW9ybmluZycsICdJbnRyb3ZlcnQsIE5pZ2h0JywgJ0FtYml2ZXJ0LCBNb3JuaW5nJywgJ0FtYml2ZXJ0LCBOaWdodCddLFxuICAgICAgICBtb3RpdmF0aW9uOiBbJ2ltcGFjdCcsICdncm93dGgnLCAncmVjb2duaXRpb24nLCAnYXV0b25vbXknLCAncHVycG9zZSddXG4gICAgICB9O1xuICAgICAgXG4gICAgICBjb25zdCBsZWZ0VmFsdWVzID0gYWxsQ2F0ZWdvcmllc1tjdXJyZW50U291cmNlIGFzIGtleW9mIHR5cGVvZiBhbGxDYXRlZ29yaWVzXSB8fCBbXTtcbiAgICAgIGNvbnN0IHJpZ2h0VmFsdWVzID0gYWxsQ2F0ZWdvcmllc1tjdXJyZW50VGFyZ2V0IGFzIGtleW9mIHR5cGVvZiBhbGxDYXRlZ29yaWVzXSB8fCBbXTtcblxuICAgICAgY29uc3QgY3VycmVudFNpZGVMZW5ndGggPSBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9PT0gJ2xlZnQnID8gbGVmdFZhbHVlcy5sZW5ndGggOiByaWdodFZhbHVlcy5sZW5ndGg7XG5cbiAgICAgIC8vIFNhZmV0eSBjaGVjazogaWYgY3VycmVudCBpbmRleCBpcyBvdXQgb2YgYm91bmRzIGZvciBuZXcgbW9kZSwgcmVzZXQgdG8gMFxuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCA+PSBjdXJyZW50U2lkZUxlbmd0aCkge1xuICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgfVxuXG4gICAgICAvLyBEZWJ1ZzogTG9nIHRoZSBjdXJyZW50IGFuaW1hdGlvbiBzdGF0ZSBmb3IgZGV2IHRvb2xzXG4gICAgICBjb25zb2xlLmxvZygnW0Nob3JkQW5pbWF0aW9uXSBTaWRlOicsIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlLCAnSW5kZXg6JywgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4LCAnVG90YWwgb24gc2lkZTonLCBjdXJyZW50U2lkZUxlbmd0aCwgJ01vZGU6JywgY3VycmVudFNvdXJjZSArICcg4oaSICcgKyBjdXJyZW50VGFyZ2V0KTtcblxuICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2hpZ2hsaWdodGluZycpO1xuICAgICAgc2V0SGlnaGxpZ2h0ZWRBcmNJbmRleChhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXgpO1xuICAgICAgc2V0SGlnaGxpZ2h0ZWRTaWRlKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlKTtcbiAgICAgIFxuICAgICAgY29uc3QgaGlnaGxpZ2h0ZWRDYXRlZ29yeSA9IGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID09PSAnbGVmdCcgXG4gICAgICAgID8gbGVmdFZhbHVlc1thbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXhdXG4gICAgICAgIDogcmlnaHRWYWx1ZXNbYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4XTtcbiAgICAgIFxuICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBjYXRlZ29yeSBoYXMgZGF0YVxuICAgICAgY29uc3QgaGFzRGF0YSA9IGZpbHRlcmVkRGF0YS5zb21lKGQgPT4ge1xuICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPT09ICdsZWZ0Jykge1xuICAgICAgICAgIGlmIChjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgICAgICAgcmV0dXJuIGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IGhpZ2hsaWdodGVkQ2F0ZWdvcnk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAoZCBhcyBhbnkpW2N1cnJlbnRTb3VyY2VdID09PSBoaWdobGlnaHRlZENhdGVnb3J5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgICAgICAgcmV0dXJuIGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IGhpZ2hsaWdodGVkQ2F0ZWdvcnk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAoZCBhcyBhbnkpW2N1cnJlbnRUYXJnZXRdID09PSBoaWdobGlnaHRlZENhdGVnb3J5O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ+KcqCBIaWdobGlnaHRpbmcgZnVsbCByZWxhdGlvbnNoaXAgY2hhaW4gZm9yOicsIHtcbiAgICAgICAgc291cmNlQ2F0ZWdvcnk6IGhpZ2hsaWdodGVkQ2F0ZWdvcnksXG4gICAgICAgIHNvdXJjZVNpZGU6IGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlLFxuICAgICAgICBzb3VyY2VJbmRleDogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4LFxuICAgICAgICBoYXNEYXRhOiBoYXNEYXRhLFxuICAgICAgICB0b3RhbENhdGVnb3JpZXM6IGN1cnJlbnRTaWRlTGVuZ3RoXG4gICAgICB9KTtcblxuICAgICAgLy8gQ2FsY3VsYXRlIHRpbWluZyBiYXNlZCBvbiBnbG9iYWwgc2V0dGluZ3MgLSBzbG93ZXIgZm9yIGJldHRlciB2aXNpYmlsaXR5XG4gICAgICBjb25zdCBzdGVwRHVyYXRpb24gPSBNYXRoLm1heCgxNTAwLCAoc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCB8fCAzMDAwKSAvIDMpO1xuICAgICAgY29uc3QgcGF1c2VEdXJhdGlvbiA9IE1hdGgubWF4KDMwMCwgc3RlcER1cmF0aW9uIC8gNSk7XG5cbiAgICAgIC8vIE1vdmUgdG8gbmV4dCBwb3NpdGlvbiAtIGluY2x1ZGUgdGhlIGxhc3QgaW5kZXggYmVmb3JlIHN3aXRjaGluZ1xuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCA8IGN1cnJlbnRTaWRlTGVuZ3RoIC0gMSkge1xuICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nICYmICFhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICBhbmltYXRlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBzdGVwRHVyYXRpb24gKyBwYXVzZUR1cmF0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFNob3cgdGhlIGxhc3QgaW5kZXggZm9yIHRoZSBmdWxsIGR1cmF0aW9uIGJlZm9yZSBzd2l0Y2hpbmdcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyAmJiAhYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHtcbiAgICAgICAgICAgIC8vIE5vdyBzd2l0Y2ggc2lkZXMgb3IgY29tcGxldGUgY3ljbGVcbiAgICAgICAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9PT0gJ2xlZnQnKSB7XG4gICAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID0gJ3JpZ2h0JztcbiAgICAgICAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4ID0gMDtcbiAgICAgICAgICAgICAgYW5pbWF0ZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gQ29tcGxldGUgY3ljbGUgLSBzaG93IGZ1bGwgZGlhZ3JhbSBicmllZmx5LCB0aGVuIHJlc3RhcnRcbiAgICAgICAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3ljbGVDb3VudCsrO1xuICAgICAgICAgICAgICBjb25zdCBuZXh0TW9kZUluZGV4ID0gKGN1cnJlbnRNb2RlSW5kZXggKyAxKSAlIGN5Y2xpbmdNb2Rlcy5sZW5ndGg7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn46JIENob3JkQW5pbWF0aW9uIGNvbXBsZXRlZCBmdWxsIGN5Y2xlICMnICsgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3ljbGVDb3VudCArICchIEFkdmFuY2luZyB0byBtb2RlJywgbmV4dE1vZGVJbmRleCwgY3ljbGluZ01vZGVzW25leHRNb2RlSW5kZXhdKTtcbiAgICAgICAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgICAgICAgICAgc2V0SGlnaGxpZ2h0ZWRBcmNJbmRleChudWxsKTtcbiAgICAgICAgICAgICAgc2V0SGlnaGxpZ2h0ZWRTaWRlKG51bGwpO1xuICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRDdXJyZW50TW9kZUluZGV4KG5leHRNb2RlSW5kZXgpO1xuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRTb3VyY2UoY3ljbGluZ01vZGVzW25leHRNb2RlSW5kZXhdLnNvdXJjZSk7XG4gICAgICAgICAgICAgICAgc2V0Q3VycmVudFRhcmdldChjeWNsaW5nTW9kZXNbbmV4dE1vZGVJbmRleF0udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBzZXRMYXN0Q2F0ZWdvcnlDaGFuZ2UoeyBzb3VyY2U6IGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS5zb3VyY2UsIHRhcmdldDogY3ljbGluZ01vZGVzW25leHRNb2RlSW5kZXhdLnRhcmdldCB9KTtcbiAgICAgICAgICAgICAgICBvblJlbGF0aW9uc2hpcENoYW5nZT8uKGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS5zb3VyY2UsIGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS50YXJnZXQpO1xuICAgICAgICAgICAgICAgIC8vIEFuaW1hdGlvbiB3aWxsIHJlc3RhcnQgZHVlIHRvIGRlcGVuZGVuY3kgb24gY3VycmVudFNvdXJjZS9jdXJyZW50VGFyZ2V0XG4gICAgICAgICAgICAgIH0sIHN0ZXBEdXJhdGlvbiAqIDIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgc3RlcER1cmF0aW9uICsgcGF1c2VEdXJhdGlvbik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIFN0YXJ0IGFuaW1hdGlvbiBpZiBub3QgYWxyZWFkeSBydW5uaW5nXG4gICAgaWYgKCFhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nKSB7XG4gICAgICBjb25zb2xlLmxvZygn4pyFIFN0YXJ0aW5nIENob3JkRGlhZ3JhbSBhcmMgaGlnaGxpZ2h0aW5nIGFuaW1hdGlvbicpO1xuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyA9IHRydWU7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPSAnbGVmdCc7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCA9IGZhbHNlO1xuICAgICAgYW5pbWF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygn4pqg77iPIEFyYyBoaWdobGlnaHRpbmcgYW5pbWF0aW9uIGFscmVhZHkgcnVubmluZycpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn8J+nuSBDbGVhbmluZyB1cCBDaG9yZERpYWdyYW0gYXJjIGhpZ2hsaWdodGluZyBhbmltYXRpb24nKTtcbiAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcikge1xuICAgICAgICBjbGVhclRpbWVvdXQoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpO1xuICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IG51bGw7XG4gICAgICB9XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nID0gZmFsc2U7XG4gICAgICBzZXRBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgc2V0SGlnaGxpZ2h0ZWRBcmNJbmRleChudWxsKTtcbiAgICAgIHNldEhpZ2hsaWdodGVkU2lkZShudWxsKTtcbiAgICB9O1xuICB9LCBbYXV0b1BsYXksIHNldHRpbmdzLmlzQXV0b1BsYXlFbmFibGVkLCBkYXRhLmxlbmd0aCwgc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCwgc2V0dGluZ3MudXNlVGVzdERhdGFdKTsgLy8gUmVtb3ZlZCBjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0IHRvIHByZXZlbnQgcmVzdGFydGluZ1xuXG4gIC8vIFJlc3RhcnQgYW5pbWF0aW9uIHdoZW4gbW9kZSBjaGFuZ2VzIChidXQgb25seSBpZiBub3QgcGF1c2VkKVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChhdXRvUGxheSAmJiBzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCAmJiBkYXRhLmxlbmd0aCAmJiAhYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SEIE1vZGUgY2hhbmdlZCwgcmVzdGFydGluZyBhbmltYXRpb24gd2l0aCBuZXcgbW9kZTonLCBjdXJyZW50U291cmNlICsgJyDihpIgJyArIGN1cnJlbnRUYXJnZXQpO1xuICAgICAgXG4gICAgICAvLyBSZXNldCBhbmltYXRpb24gc3RhdGUgZm9yIG5ldyBtb2RlXG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPSAnbGVmdCc7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jeWNsZUNvdW50ID0gMDtcbiAgICAgIFxuICAgICAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIHRpbWVyXG4gICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBSZXN0YXJ0IGFuaW1hdGlvbiBpZiBpdCB3YXMgcnVubmluZ1xuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcpIHtcbiAgICAgICAgLy8gQ2FsbCBhbmltYXRlIGZ1bmN0aW9uIGRpcmVjdGx5IHRvIHJlc3RhcnQgd2l0aCBuZXcgbW9kZVxuICAgICAgICBjb25zdCBhbmltYXRlID0gKCkgPT4ge1xuICAgICAgICAgIGlmICghYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyB8fCBhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgLy8gU2FmZXR5IGNoZWNrOiBwcmV2ZW50IGluZmluaXRlIGxvb3BzXG4gICAgICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LmN5Y2xlQ291bnQgPiAxMDAwKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+bkSBDaG9yZCBhbmltYXRpb24gY3ljbGUgbGltaXQgcmVhY2hlZCwgcmVzZXR0aW5nJyk7XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jeWNsZUNvdW50ID0gMDtcbiAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCA9IDA7XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9ICdsZWZ0JztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBHZXQgY3VycmVudCBkYXRhIGNvbnRleHQgKHRoaXMgd2lsbCBhZGFwdCB0byBtb2RlIGNoYW5nZXMpXG4gICAgICAgICAgY29uc3QgZmlsdGVyZWREYXRhID0gc2V0dGluZ3MudXNlVGVzdERhdGEgPyBkYXRhIDogZGF0YS5maWx0ZXIoaXRlbSA9PiAhKGl0ZW0gYXMgYW55KS50ZXN0X2RhdGEpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIERlZmluZSBhbGwgcG9zc2libGUgY2F0ZWdvcmllcyBmb3IgZWFjaCBmaWVsZCAobm90IGp1c3QgdGhvc2Ugd2l0aCBkYXRhKVxuICAgICAgICAgIGNvbnN0IGFsbENhdGVnb3JpZXMgPSB7XG4gICAgICAgICAgICB5ZWFyc19hdF9tZWR0cm9uaWM6IFsnMC01JywgJzYtMTAnLCAnMTEtMTUnLCAnMTYtMjAnLCAnMjArJ10sXG4gICAgICAgICAgICBsZWFybmluZ19zdHlsZTogWyd2aXN1YWwnLCAnYXVkaXRvcnknLCAna2luZXN0aGV0aWMnLCAncmVhZGluZ193cml0aW5nJ10sXG4gICAgICAgICAgICBzaGFwZWRfYnk6IFsnbWVudG9yJywgJ2NoYWxsZW5nZScsICdmYWlsdXJlJywgJ3N1Y2Nlc3MnLCAndGVhbScsICdvdGhlciddLFxuICAgICAgICAgICAgcGVha19wZXJmb3JtYW5jZTogWydFeHRyb3ZlcnQsIE1vcm5pbmcnLCAnRXh0cm92ZXJ0LCBFdmVuaW5nJywgJ0ludHJvdmVydCwgTW9ybmluZycsICdJbnRyb3ZlcnQsIE5pZ2h0JywgJ0FtYml2ZXJ0LCBNb3JuaW5nJywgJ0FtYml2ZXJ0LCBOaWdodCddLFxuICAgICAgICAgICAgbW90aXZhdGlvbjogWydpbXBhY3QnLCAnZ3Jvd3RoJywgJ3JlY29nbml0aW9uJywgJ2F1dG9ub215JywgJ3B1cnBvc2UnXVxuICAgICAgICAgIH07XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgbGVmdFZhbHVlcyA9IGFsbENhdGVnb3JpZXNbY3VycmVudFNvdXJjZSBhcyBrZXlvZiB0eXBlb2YgYWxsQ2F0ZWdvcmllc10gfHwgW107XG4gICAgICAgICAgY29uc3QgcmlnaHRWYWx1ZXMgPSBhbGxDYXRlZ29yaWVzW2N1cnJlbnRUYXJnZXQgYXMga2V5b2YgdHlwZW9mIGFsbENhdGVnb3JpZXNdIHx8IFtdO1xuXG4gICAgICAgICAgY29uc3QgY3VycmVudFNpZGVMZW5ndGggPSBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9PT0gJ2xlZnQnID8gbGVmdFZhbHVlcy5sZW5ndGggOiByaWdodFZhbHVlcy5sZW5ndGg7XG5cbiAgICAgICAgICAvLyBTYWZldHkgY2hlY2s6IGlmIGN1cnJlbnQgaW5kZXggaXMgb3V0IG9mIGJvdW5kcyBmb3IgbmV3IG1vZGUsIHJlc2V0IHRvIDBcbiAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4ID49IGN1cnJlbnRTaWRlTGVuZ3RoKSB7XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIERlYnVnOiBMb2cgdGhlIGN1cnJlbnQgYW5pbWF0aW9uIHN0YXRlIGZvciBkZXYgdG9vbHNcbiAgICAgICAgICBjb25zb2xlLmxvZygnW0Nob3JkQW5pbWF0aW9uXSBTaWRlOicsIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlLCAnSW5kZXg6JywgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4LCAnVG90YWwgb24gc2lkZTonLCBjdXJyZW50U2lkZUxlbmd0aCwgJ01vZGU6JywgY3VycmVudFNvdXJjZSArICcg4oaSICcgKyBjdXJyZW50VGFyZ2V0KTtcblxuICAgICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdoaWdobGlnaHRpbmcnKTtcbiAgICAgICAgICBzZXRIaWdobGlnaHRlZEFyY0luZGV4KGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCk7XG4gICAgICAgICAgc2V0SGlnaGxpZ2h0ZWRTaWRlKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBoaWdobGlnaHRlZENhdGVnb3J5ID0gYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPT09ICdsZWZ0JyBcbiAgICAgICAgICAgID8gbGVmdFZhbHVlc1thbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXhdXG4gICAgICAgICAgICA6IHJpZ2h0VmFsdWVzW2FuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleF07XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBjYXRlZ29yeSBoYXMgZGF0YVxuICAgICAgICAgIGNvbnN0IGhhc0RhdGEgPSBmaWx0ZXJlZERhdGEuc29tZShkID0+IHtcbiAgICAgICAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9PT0gJ2xlZnQnKSB7XG4gICAgICAgICAgICAgIGlmIChjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApID09PSBoaWdobGlnaHRlZENhdGVnb3J5O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiAoZCBhcyBhbnkpW2N1cnJlbnRTb3VyY2VdID09PSBoaWdobGlnaHRlZENhdGVnb3J5O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKGN1cnJlbnRUYXJnZXQgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IGhpZ2hsaWdodGVkQ2F0ZWdvcnk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgcmV0dXJuIChkIGFzIGFueSlbY3VycmVudFRhcmdldF0gPT09IGhpZ2hsaWdodGVkQ2F0ZWdvcnk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc29sZS5sb2coJ+KcqCBIaWdobGlnaHRpbmcgZnVsbCByZWxhdGlvbnNoaXAgY2hhaW4gZm9yOicsIHtcbiAgICAgICAgICAgIHNvdXJjZUNhdGVnb3J5OiBoaWdobGlnaHRlZENhdGVnb3J5LFxuICAgICAgICAgICAgc291cmNlU2lkZTogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUsXG4gICAgICAgICAgICBzb3VyY2VJbmRleDogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4LFxuICAgICAgICAgICAgaGFzRGF0YTogaGFzRGF0YSxcbiAgICAgICAgICAgIHRvdGFsQ2F0ZWdvcmllczogY3VycmVudFNpZGVMZW5ndGhcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIENhbGN1bGF0ZSB0aW1pbmcgYmFzZWQgb24gZ2xvYmFsIHNldHRpbmdzIC0gc2xvd2VyIGZvciBiZXR0ZXIgdmlzaWJpbGl0eVxuICAgICAgICAgIGNvbnN0IHN0ZXBEdXJhdGlvbiA9IE1hdGgubWF4KDE1MDAsIChzZXR0aW5ncy5hdXRvUGxheVNwZWVkIHx8IDMwMDApIC8gMyk7XG4gICAgICAgICAgY29uc3QgcGF1c2VEdXJhdGlvbiA9IE1hdGgubWF4KDMwMCwgc3RlcER1cmF0aW9uIC8gNSk7XG5cbiAgICAgICAgICAvLyBNb3ZlIHRvIG5leHQgcG9zaXRpb24gLSBpbmNsdWRlIHRoZSBsYXN0IGluZGV4IGJlZm9yZSBzd2l0Y2hpbmdcbiAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4IDwgY3VycmVudFNpZGVMZW5ndGggLSAxKSB7XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyAmJiAhYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHtcbiAgICAgICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgICAgICBhbmltYXRlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIHN0ZXBEdXJhdGlvbiArIHBhdXNlRHVyYXRpb24pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBTaG93IHRoZSBsYXN0IGluZGV4IGZvciB0aGUgZnVsbCBkdXJhdGlvbiBiZWZvcmUgc3dpdGNoaW5nXG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyAmJiAhYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHtcbiAgICAgICAgICAgICAgICAvLyBOb3cgc3dpdGNoIHNpZGVzIG9yIGNvbXBsZXRlIGN5Y2xlXG4gICAgICAgICAgICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID09PSAnbGVmdCcpIHtcbiAgICAgICAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID0gJ3JpZ2h0JztcbiAgICAgICAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgICBhbmltYXRlKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIC8vIENvbXBsZXRlIGN5Y2xlIC0gc2hvdyBmdWxsIGRpYWdyYW0gYnJpZWZseSwgdGhlbiByZXN0YXJ0XG4gICAgICAgICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jeWNsZUNvdW50Kys7XG4gICAgICAgICAgICAgICAgICBjb25zdCBuZXh0TW9kZUluZGV4ID0gKGN1cnJlbnRNb2RlSW5kZXggKyAxKSAlIGN5Y2xpbmdNb2Rlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+OiSBDaG9yZEFuaW1hdGlvbiBjb21wbGV0ZWQgZnVsbCBjeWNsZSAjJyArIGFuaW1hdGlvblJlZi5jdXJyZW50LmN5Y2xlQ291bnQgKyAnISBBZHZhbmNpbmcgdG8gbW9kZScsIG5leHRNb2RlSW5kZXgsIGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XSk7XG4gICAgICAgICAgICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgICAgICAgICAgICAgc2V0SGlnaGxpZ2h0ZWRBcmNJbmRleChudWxsKTtcbiAgICAgICAgICAgICAgICAgIHNldEhpZ2hsaWdodGVkU2lkZShudWxsKTtcbiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50TW9kZUluZGV4KG5leHRNb2RlSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50U291cmNlKGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS5zb3VyY2UpO1xuICAgICAgICAgICAgICAgICAgICBzZXRDdXJyZW50VGFyZ2V0KGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS50YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICBzZXRMYXN0Q2F0ZWdvcnlDaGFuZ2UoeyBzb3VyY2U6IGN5Y2xpbmdNb2Rlc1tuZXh0TW9kZUluZGV4XS5zb3VyY2UsIHRhcmdldDogY3ljbGluZ01vZGVzW25leHRNb2RlSW5kZXhdLnRhcmdldCB9KTtcbiAgICAgICAgICAgICAgICAgICAgb25SZWxhdGlvbnNoaXBDaGFuZ2U/LihjeWNsaW5nTW9kZXNbbmV4dE1vZGVJbmRleF0uc291cmNlLCBjeWNsaW5nTW9kZXNbbmV4dE1vZGVJbmRleF0udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQW5pbWF0aW9uIHdpbGwgcmVzdGFydCBkdWUgdG8gZGVwZW5kZW5jeSBvbiBjdXJyZW50U291cmNlL2N1cnJlbnRUYXJnZXRcbiAgICAgICAgICAgICAgICAgIH0sIHN0ZXBEdXJhdGlvbiAqIDIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgc3RlcER1cmF0aW9uICsgcGF1c2VEdXJhdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgYW5pbWF0ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW2N1cnJlbnRTb3VyY2UsIGN1cnJlbnRUYXJnZXQsIGF1dG9QbGF5LCBzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCwgZGF0YS5sZW5ndGgsIHNldHRpbmdzLmF1dG9QbGF5U3BlZWQsIHNldHRpbmdzLnVzZVRlc3REYXRhLCBjdXJyZW50TW9kZUluZGV4XSk7XG5cbiAgLy8gU2Vjb25kYXJ5IGNob3JkIGFuaW1hdGlvbiBzeXN0ZW1cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWF1dG9QbGF5IHx8ICFzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCB8fCAhZGF0YS5sZW5ndGggfHwgIXNob3dTZWNvbmRhcnlDaG9yZCkge1xuICAgICAgLy8gU3RvcCBhbmltYXRpb24gaWYgY29uZGl0aW9ucyBub3QgbWV0XG4gICAgICBjb25zb2xlLmxvZygn8J+bkSBTdG9wcGluZyBzZWNvbmRhcnkgY2hvcmQgYW5pbWF0aW9uOicsIHtcbiAgICAgICAgYXV0b1BsYXksXG4gICAgICAgIGlzQXV0b1BsYXlFbmFibGVkOiBzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCxcbiAgICAgICAgaGFzRGF0YTogZGF0YS5sZW5ndGggPiAwLFxuICAgICAgICBzaG93U2Vjb25kYXJ5Q2hvcmRcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGFuaW1hdGVTZWNvbmRhcnkgPSAoKSA9PiB7XG4gICAgICBpZiAoIXNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgfHwgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHJldHVybjtcblxuICAgICAgLy8gR2V0IHNlY29uZGFyeSBjaG9yZCBkYXRhIGNvbnRleHQgZmlyc3RcbiAgICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IHNldHRpbmdzLnVzZVRlc3REYXRhID8gZGF0YSA6IGRhdGEuZmlsdGVyKGl0ZW0gPT4gIShpdGVtIGFzIGFueSkudGVzdF9kYXRhKTtcbiAgICAgIGNvbnN0IHNlY29uZGFyeURhdGEgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT4gKGQgYXMgYW55KS5wZWFrX3BlcmZvcm1hbmNlKTtcbiAgICAgIGNvbnN0IHllYXJzQ2F0ZWdvcmllcyA9IFsnMC01JywgJzYtMTAnLCAnMTEtMTUnLCAnMTYtMjAnLCAnMjArJ107XG4gICAgICBjb25zdCBwZWFrUGVyZkNhdGVnb3JpZXMgPSBBcnJheS5mcm9tKG5ldyBTZXQoc2Vjb25kYXJ5RGF0YS5tYXAoZCA9PiAoZCBhcyBhbnkpLnBlYWtfcGVyZm9ybWFuY2UpKSkuZmlsdGVyKEJvb2xlYW4pLnNvcnQoKTtcbiAgICAgIGNvbnN0IGFsbENhdGVnb3JpZXMgPSBbLi4ueWVhcnNDYXRlZ29yaWVzLCAuLi5wZWFrUGVyZkNhdGVnb3JpZXNdO1xuXG4gICAgICBjb25zdCBjdXJyZW50U2lkZUxlbmd0aCA9IHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID09PSAnbGVmdCcgPyB5ZWFyc0NhdGVnb3JpZXMubGVuZ3RoIDogcGVha1BlcmZDYXRlZ29yaWVzLmxlbmd0aDtcblxuICAgICAgLy8gU2FmZXR5IGNoZWNrOiBpZiBjdXJyZW50IGluZGV4IGlzIG91dCBvZiBib3VuZHMsIHJlc2V0IHRvIDBcbiAgICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPj0gY3VycmVudFNpZGVMZW5ndGgpIHtcbiAgICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ/Cfjq8gU2Vjb25kYXJ5Q2hvcmQgYXJjIGFuaW1hdGlvbjonLCB7XG4gICAgICAgIHNpZGU6IHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlLFxuICAgICAgICBpbmRleDogc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4XG4gICAgICB9KTtcblxuICAgICAgc2V0U2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UoJ2hpZ2hsaWdodGluZycpO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgdGhlIGFjdHVhbCBhcmMgaW5kZXggYmFzZWQgb24gc2lkZSBhbmQgcG9zaXRpb25cbiAgICAgIGNvbnN0IGFjdHVhbEFyY0luZGV4ID0gc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPT09ICdsZWZ0JyBcbiAgICAgICAgPyBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggLy8gTGVmdCBzaWRlOiBkaXJlY3QgaW5kZXggKDAtNClcbiAgICAgICAgOiB5ZWFyc0NhdGVnb3JpZXMubGVuZ3RoICsgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4OyAvLyBSaWdodCBzaWRlOiBvZmZzZXQgYnkgeWVhcnMgY291bnRcbiAgICAgIFxuICAgICAgc2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleChhY3R1YWxBcmNJbmRleCk7XG4gICAgICBzZXRTZWNvbmRhcnlIaWdobGlnaHRlZFNpZGUoc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUpO1xuXG4gICAgICAvLyBDYWxjdWxhdGUgdGltaW5nIGJhc2VkIG9uIGdsb2JhbCBzZXR0aW5ncyAtIHNsb3dlciBmb3IgYmV0dGVyIHZpc2liaWxpdHlcbiAgICAgIGNvbnN0IHN0ZXBEdXJhdGlvbiA9IE1hdGgubWF4KDE1MDAsIChzZXR0aW5ncy5hdXRvUGxheVNwZWVkIHx8IDMwMDApIC8gMyk7XG4gICAgICBjb25zdCBwYXVzZUR1cmF0aW9uID0gTWF0aC5tYXgoMzAwLCBzdGVwRHVyYXRpb24gLyA1KTtcblxuICAgICAgLy8gTW92ZSB0byBuZXh0IHBvc2l0aW9uIC0gaW5jbHVkZSB0aGUgbGFzdCBpbmRleCBiZWZvcmUgc3dpdGNoaW5nXG4gICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4IDwgY3VycmVudFNpZGVMZW5ndGggLSAxKSB7XG4gICAgICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgJiYgIXNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkKSB7XG4gICAgICAgICAgICBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgIGFuaW1hdGVTZWNvbmRhcnkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHN0ZXBEdXJhdGlvbiArIHBhdXNlRHVyYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gU2hvdyB0aGUgbGFzdCBpbmRleCBmb3IgdGhlIGZ1bGwgZHVyYXRpb24gYmVmb3JlIHN3aXRjaGluZ1xuICAgICAgICBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nICYmICFzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgICAgICAgLy8gTm93IHN3aXRjaCBzaWRlcyBvciBjb21wbGV0ZSBjeWNsZVxuICAgICAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID09PSAnbGVmdCcpIHtcbiAgICAgICAgICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPSAncmlnaHQnO1xuICAgICAgICAgICAgICBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgICAgICAgICBhbmltYXRlU2Vjb25kYXJ5KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBDb21wbGV0ZSBjeWNsZSAtIHNob3cgZnVsbCBkaWFncmFtIGJyaWVmbHksIHRoZW4gcmVzdGFydFxuICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+OiSBTZWNvbmRhcnlDaG9yZEFuaW1hdGlvbiBjb21wbGV0ZWQgZnVsbCBjeWNsZSEgUmVzdGFydGluZy4uLicpO1xuICAgICAgICAgICAgICBzZXRTZWNvbmRhcnlBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgICAgICAgICBzZXRTZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4KG51bGwpO1xuICAgICAgICAgICAgICBzZXRTZWNvbmRhcnlIaWdobGlnaHRlZFNpZGUobnVsbCk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nICYmICFzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgICAgICAgICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNpZGUgPSAnbGVmdCc7XG4gICAgICAgICAgICAgICAgICBzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50SW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgYW5pbWF0ZVNlY29uZGFyeSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSwgc3RlcER1cmF0aW9uICogMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBzdGVwRHVyYXRpb24gKyBwYXVzZUR1cmF0aW9uKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gU3RhcnQgYW5pbWF0aW9uIGlmIG5vdCBhbHJlYWR5IHJ1bm5pbmdcbiAgICBpZiAoIXNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgU3RhcnRpbmcgU2Vjb25kYXJ5Q2hvcmQgYXJjIGhpZ2hsaWdodGluZyBhbmltYXRpb24nKTtcbiAgICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgPSB0cnVlO1xuICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudEluZGV4ID0gMDtcbiAgICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTaWRlID0gJ2xlZnQnO1xuICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQgPSBmYWxzZTtcbiAgICAgIGFuaW1hdGVTZWNvbmRhcnkoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ+KaoO+4jyBTZWNvbmRhcnkgYXJjIGhpZ2hsaWdodGluZyBhbmltYXRpb24gYWxyZWFkeSBydW5uaW5nJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn6e5IENsZWFuaW5nIHVwIFNlY29uZGFyeUNob3JkIGFyYyBoaWdobGlnaHRpbmcgYW5pbWF0aW9uJyk7XG4gICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgICAgc2Vjb25kYXJ5QW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyA9IGZhbHNlO1xuICAgICAgc2V0U2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgIHNldFNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXgobnVsbCk7XG4gICAgICBzZXRTZWNvbmRhcnlIaWdobGlnaHRlZFNpZGUobnVsbCk7XG4gICAgfTtcbiAgfSwgW2F1dG9QbGF5LCBzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCwgZGF0YS5sZW5ndGgsIHNob3dTZWNvbmRhcnlDaG9yZCwgc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCwgc2V0dGluZ3MudXNlVGVzdERhdGFdKTsgLy8gUmVtb3ZlZCBjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0IHRvIHByZXZlbnQgcmVzdGFydGluZ1xuXG4gIC8vIFJlLXJlbmRlciBzZWNvbmRhcnkgY2hvcmQgd2hlbiBpdHMgYW5pbWF0aW9uIHN0YXRlIGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2hvd1NlY29uZGFyeUNob3JkKSB7XG4gICAgICByZW5kZXJTZWNvbmRhcnlDaG9yZCgpO1xuICAgIH1cbiAgfSwgW3Nob3dTZWNvbmRhcnlDaG9yZCwgZGF0YSwgc2V0dGluZ3MudXNlVGVzdERhdGEsIHNldHRpbmdzLmlzRGFya01vZGVdKTtcblxuICAvLyBVcGRhdGUgdmlzdWFsIHN0eWxpbmcgb2YgZXhpc3RpbmcgbWFpbiBjaG9yZCBlbGVtZW50cyB3aGVuIGFuaW1hdGlvbiBzdGF0ZSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFzdmdSZWYuY3VycmVudCkgcmV0dXJuO1xuXG4gICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KTtcbiAgICBcbiAgICAvLyBVcGRhdGUgbGVmdCBhcmNzIG9wYWNpdHkgYW5kIHN0cm9rZSBiYXNlZCBvbiBhbmltYXRpb24gc3RhdGVcbiAgICBzdmcuc2VsZWN0QWxsKCdwYXRoLmxlZnQtYXJjJylcbiAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbigzMDApXG4gICAgICAuc3R5bGUoJ29wYWNpdHknLCAoZDogYW55LCBpOiBudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdsZWZ0Jykge1xuICAgICAgICAgICAgaWYgKGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDEuMDsgLy8gU291cmNlIGFyYyBpcyBmdWxseSBoaWdobGlnaHRlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDAuNDsgLy8gRGltIG90aGVyIGxlZnQgYXJjc1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMC44OyAvLyBEZWZhdWx0IG9wYWNpdHlcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsIChkOiBhbnksIGk6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZScsIChkOiBhbnksIGk6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJ3JnYmEoMjU1LDI1NSwyNTUsMC40KScgOiAncmdiYSgwLDAsMCwwLjMpJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgIH0pO1xuXG4gICAgLy8gVXBkYXRlIHJpZ2h0IGFyY3Mgb3BhY2l0eSBhbmQgc3Ryb2tlIGJhc2VkIG9uIGFuaW1hdGlvbiBzdGF0ZVxuICAgIHN2Zy5zZWxlY3RBbGwoJ3BhdGgucmlnaHQtYXJjJylcbiAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbigzMDApXG4gICAgICAuc3R5bGUoJ29wYWNpdHknLCAoZDogYW55LCBpOiBudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdyaWdodCcpIHtcbiAgICAgICAgICAgIGlmIChpID09PSBoaWdobGlnaHRlZEFyY0luZGV4KSB7XG4gICAgICAgICAgICAgIHJldHVybiAxLjA7IC8vIFNvdXJjZSBhcmMgaXMgZnVsbHkgaGlnaGxpZ2h0ZWRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAwLjQ7IC8vIERpbSBvdGhlciByaWdodCBhcmNzXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwLjg7IC8vIERlZmF1bHQgb3BhY2l0eVxuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgKGQ6IGFueSwgaTogbnVtYmVyKSA9PiB7XG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZScsIChkOiBhbnksIGk6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ3JpZ2h0JyAmJiBpID09PSBoaWdobGlnaHRlZEFyY0luZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICB9KTtcblxuICAgIC8vIFVwZGF0ZSByaWJib25zIG9wYWNpdHkgYW5kIHN0cm9rZSBiYXNlZCBvbiBhbmltYXRpb24gc3RhdGVcbiAgICBzdmcuc2VsZWN0QWxsKCdwYXRoLnJpYmJvbicpXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oMzAwKVxuICAgICAgLnN0eWxlKCdvcGFjaXR5JywgKGQ6IGFueSkgPT4ge1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gMC45NTsgLy8gTWFrZSBjb25uZWN0ZWQgcmliYm9ucyB2ZXJ5IHByb21pbmVudFxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gMC45NTsgLy8gTWFrZSBjb25uZWN0ZWQgcmliYm9ucyB2ZXJ5IHByb21pbmVudFxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gMC4yOyAvLyBEaW0gbm9uLWNvbm5lY3RlZCByaWJib25zXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNldHRpbmdzLmlzRGFya01vZGUgPyAwLjcgOiAwLjY7XG4gICAgICB9KVxuICAgICAgLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAoZDogYW55KSA9PiB7XG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4KSB8fFxuICAgICAgICAgICAgICAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSkge1xuICAgICAgICAgICAgcmV0dXJuIDIuNTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDAuNTtcbiAgICAgIH0pXG4gICAgICAuc3R5bGUoJ3N0cm9rZScsIChkOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmICgoaGlnaGxpZ2h0ZWRTaWRlID09PSAnbGVmdCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC5zb3VyY2UuaW5kZXgpIHx8XG4gICAgICAgICAgICAgIChoaWdobGlnaHRlZFNpZGUgPT09ICdyaWdodCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC50YXJnZXQuaW5kZXgpKSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICB9KTtcblxuXG4gIH0sIFthbmltYXRpb25QaGFzZSwgaGlnaGxpZ2h0ZWRBcmNJbmRleCwgaGlnaGxpZ2h0ZWRTaWRlLCBzZXR0aW5ncy5pc0RhcmtNb2RlXSk7XG5cbiAgLy8gVXBkYXRlIHZpc3VhbCBzdHlsaW5nIG9mIGV4aXN0aW5nIHNlY29uZGFyeSBjaG9yZCBlbGVtZW50cyB3aGVuIGFuaW1hdGlvbiBzdGF0ZSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFzZWNvbmRhcnlTdmdSZWYuY3VycmVudCB8fCAhc2hvd1NlY29uZGFyeUNob3JkKSByZXR1cm47XG5cbiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Qoc2Vjb25kYXJ5U3ZnUmVmLmN1cnJlbnQpO1xuICAgIFxuICAgIC8vIFVwZGF0ZSBzZWNvbmRhcnkgY2hvcmQgZWxlbWVudHMgYmFzZWQgb24gdGhlaXIgYW5pbWF0aW9uIHN0YXRlXG4gICAgc3ZnLnNlbGVjdEFsbCgncGF0aC5jaG9yZC1ncm91cCcpXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oMzAwKVxuICAgICAgLnN0eWxlKCdvcGFjaXR5JywgKGQ6IGFueSwgaTogbnVtYmVyKSA9PiB7XG4gICAgICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gaSkge1xuICAgICAgICAgICAgcmV0dXJuIDEuMDsgLy8gU291cmNlIGFyYyBpcyBmdWxseSBoaWdobGlnaHRlZFxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gMC40OyAvLyBEaW0gb3RoZXIgYXJjc1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwLjg7XG4gICAgICB9KVxuICAgICAgLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAoZDogYW55LCBpOiBudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJyAmJiBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBpKSB7XG4gICAgICAgICAgcmV0dXJuIDM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9KVxuICAgICAgLnN0eWxlKCdzdHJva2UnLCAoZDogYW55LCBpOiBudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJyAmJiBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBpKSB7XG4gICAgICAgICAgcmV0dXJuIHNldHRpbmdzLmlzRGFya01vZGUgPyAncmdiYSgyNTUsMjU1LDI1NSwwLjQpJyA6ICdyZ2JhKDAsMCwwLDAuMyknO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICB9KTtcblxuICAgIHN2Zy5zZWxlY3RBbGwoJ3BhdGguY2hvcmQnKVxuICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgLmR1cmF0aW9uKDMwMClcbiAgICAgIC5zdHlsZSgnb3BhY2l0eScsIChkOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKHNlY29uZGFyeUFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnNvdXJjZS5pbmRleCB8fCBzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnRhcmdldC5pbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIDAuOTU7IC8vIE1ha2UgY29ubmVjdGVkIHJpYmJvbnMgdmVyeSBwcm9taW5lbnRcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDAuMjsgLy8gRGltIG5vbi1jb25uZWN0ZWQgcmliYm9uc1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gMC43IDogMC42O1xuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgKGQ6IGFueSkgPT4ge1xuICAgICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4IHx8IHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gMi41O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMC41O1xuICAgICAgfSlcbiAgICAgIC5zdHlsZSgnc3Ryb2tlJywgKGQ6IGFueSkgPT4ge1xuICAgICAgICBpZiAoc2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4IHx8IHNlY29uZGFyeUhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnbm9uZSc7XG4gICAgICB9KTtcblxuXG4gIH0sIFtzZWNvbmRhcnlBbmltYXRpb25QaGFzZSwgc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCwgc2Vjb25kYXJ5SGlnaGxpZ2h0ZWRTaWRlLCBzZXR0aW5ncy5pc0RhcmtNb2RlLCBzaG93U2Vjb25kYXJ5Q2hvcmRdKTtcblxuICAvLyBSZW1vdmUgY29uZmxpY3Rpbmcgb3BhY2l0eSB1cGRhdGUgc3lzdGVtIC0gb3BhY2l0eSB3aWxsIGJlIGhhbmRsZWQgaW4gbWFpbiByZW5kZXJpbmdcblxuICAvLyBBZGQgcGF1c2UvcmVzdW1lIGZ1bmN0aW9uYWxpdHlcbiAgY29uc3QgcGF1c2VBbmltYXRpb24gPSAocmVhc29uOiBzdHJpbmcpID0+IHtcbiAgICBjb25zb2xlLmxvZygn4o+477iPIFBhdXNpbmcgYW5pbWF0aW9uOicsIHJlYXNvbik7XG4gICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQgPSB0cnVlO1xuICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkID0gdHJ1ZTtcbiAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcik7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IG51bGw7XG4gICAgfVxuICAgIGlmIChzZWNvbmRhcnlBbmltYXRpb25SZWYuY3VycmVudC50aW1lcikge1xuICAgICAgY2xlYXJUaW1lb3V0KHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgcmVzdW1lQW5pbWF0aW9uID0gKHJlYXNvbjogc3RyaW5nKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+KWtu+4jyBSZXN1bWluZyBhbmltYXRpb246JywgcmVhc29uKTtcbiAgICBhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCA9IGZhbHNlO1xuICAgIHNlY29uZGFyeUFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkID0gZmFsc2U7XG4gICAgXG4gICAgLy8gRW5zdXJlIGFuaW1hdGlvbiBzdGF0ZSBpcyBwcm9wZXJseSByZXNldFxuICAgIGlmICghYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZykge1xuICAgICAgY29uc29sZS5sb2coJ/CflIQgUmVzdGFydGluZyBjaG9yZCBhbmltYXRpb24gYWZ0ZXIgcmVzdW1lJyk7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nID0gdHJ1ZTtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRJbmRleCA9IDA7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U2lkZSA9ICdsZWZ0JztcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN5Y2xlQ291bnQgPSAwO1xuICAgIH1cbiAgICBcbiAgICAvLyBUaGUgbW9kZSBjaGFuZ2UgdXNlRWZmZWN0IHdpbGwgYXV0b21hdGljYWxseSByZXN0YXJ0IHRoZSBhbmltYXRpb25cbiAgICAvLyB3aGVuIGlzUGF1c2VkIGJlY29tZXMgZmFsc2UgYW5kIG1vZGUgY2hhbmdlc1xuICB9O1xuXG4gIC8vIENoZWNrIGlmIGNvbnRhaW5lciBpcyB0b28gc21hbGwgLSByZWR1Y2VkIG1pbmltdW0gc2l6ZSBmb3IgYmV0dGVyIGNvbXBhdGliaWxpdHlcbiAgY29uc3QgbWFyZ2luID0geyB0b3A6IDgwLCByaWdodDogODAsIGJvdHRvbTogMTAwLCBsZWZ0OiA4MCB9O1xuICBjb25zdCBjaGFydFdpZHRoID0gd2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDtcbiAgY29uc3QgY2hhcnRIZWlnaHQgPSBoZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbTtcbiAgY29uc3QgaXNDb250YWluZXJUb29TbWFsbCA9IGNoYXJ0V2lkdGggPCAxMDAgfHwgY2hhcnRIZWlnaHQgPCAxMDA7IC8vIFJlZHVjZWQgZnJvbSAyMDB4MjAwIHRvIDEwMHgxMDBcblxuICAvLyBSZW5kZXIgY2lyY3VsYXIgY2hvcmQgZGlhZ3JhbVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghc3ZnUmVmLmN1cnJlbnQgfHwgIWRhdGEubGVuZ3RoIHx8IGlzTG9hZGluZyB8fCBpc0NvbnRhaW5lclRvb1NtYWxsKSByZXR1cm47XG5cbiAgICAvLyBDbGVhciBwcmV2aW91cyBjb250ZW50XG4gICAgZDMuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KS5zZWxlY3RBbGwoJyonKS5yZW1vdmUoKTtcblxuICAgIC8vIEZpbHRlciBkYXRhIGJhc2VkIG9uIGdsb2JhbCBzZXR0aW5nc1xuICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IHNldHRpbmdzLnVzZVRlc3REYXRhIFxuICAgICAgPyBkYXRhIFxuICAgICAgOiBkYXRhLmZpbHRlcihpdGVtID0+ICEoaXRlbSBhcyBhbnkpLnRlc3RfZGF0YSk7XG5cbiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Qoc3ZnUmVmLmN1cnJlbnQpO1xuICAgIFxuICAgIC8vIEFkanVzdCBzaXplIGJhc2VkIG9uIHdoZXRoZXIgd2UncmUgc2hvd2luZyB0d28gY2hvcmRzXG4gICAgY29uc3QgZWZmZWN0aXZlV2lkdGggPSBzaG93U2Vjb25kYXJ5Q2hvcmQgPyB3aWR0aCAqIDAuNDUgOiB3aWR0aDtcbiAgICBjb25zdCBlZmZlY3RpdmVIZWlnaHQgPSBzaG93U2Vjb25kYXJ5Q2hvcmQgPyBoZWlnaHQgKiAwLjggOiBoZWlnaHQgKiAwLjg1O1xuICAgIGNvbnN0IGVmZmVjdGl2ZUNoYXJ0V2lkdGggPSBlZmZlY3RpdmVXaWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xuICAgIGNvbnN0IGVmZmVjdGl2ZUNoYXJ0SGVpZ2h0ID0gZWZmZWN0aXZlSGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XG4gICAgXG4gICAgY29uc3QgcmFkaXVzID0gTWF0aC5tYXgoMTIwLCBNYXRoLm1pbihlZmZlY3RpdmVDaGFydFdpZHRoLCBlZmZlY3RpdmVDaGFydEhlaWdodCkgLyAyIC0gNjApO1xuXG4gICAgLy8gQ3JlYXRlIGRlZmluaXRpb25zIGZvciBncmFkaWVudHNcbiAgICBjb25zdCBkZWZzID0gc3ZnLmFwcGVuZCgnZGVmcycpO1xuXG4gICAgLy8gRGVmaW5lIGZpeGVkIG9yZGVyIGZvciB5ZWFycyBhdCBNZWR0cm9uaWNcbiAgICBjb25zdCBZRUFSU19HUk9VUFMgPSBbJzAtNScsICc2LTEwJywgJzExLTE1JywgJzE2LTIwJywgJzIwKyddO1xuXG4gICAgLy8gR2V0IHVuaXF1ZSB2YWx1ZXMgZm9yIGxlZnQgYW5kIHJpZ2h0IHNpZGVzLCB1c2luZyBmaXhlZCBvcmRlciBmb3IgeWVhcnNcbiAgICBjb25zdCBsZWZ0VmFsdWVzID0gY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYydcbiAgICAgID8gWUVBUlNfR1JPVVBTXG4gICAgICA6IEFycmF5LmZyb20obmV3IFNldChmaWx0ZXJlZERhdGEubWFwKGQgPT4gKGQgYXMgYW55KVtjdXJyZW50U291cmNlXSkpKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgY29uc3QgcmlnaHRWYWx1ZXMgPSBjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJ1xuICAgICAgPyBZRUFSU19HUk9VUFNcbiAgICAgIDogQXJyYXkuZnJvbShuZXcgU2V0KGZpbHRlcmVkRGF0YS5tYXAoZCA9PiAoZCBhcyBhbnkpW2N1cnJlbnRUYXJnZXRdKSkpLmZpbHRlcihCb29sZWFuKTtcblxuICAgIC8vIFByb2Nlc3MgZGF0YSBmb3IgY2hvcmQgbGF5b3V0XG4gICAgY29uc3QgY2hvcmREYXRhID0gcHJvY2Vzc0Nob3JkRGF0YShmaWx0ZXJlZERhdGEsIGN1cnJlbnRTb3VyY2UsIGN1cnJlbnRUYXJnZXQpO1xuICAgIFxuICAgIC8vIFNlcGFyYXRlIHNvdXJjZSBhbmQgdGFyZ2V0IGNhdGVnb3JpZXNcbiAgICBjb25zdCBzb3VyY2VDYXRlZ29yaWVzID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gICAgY29uc3QgdGFyZ2V0Q2F0ZWdvcmllcyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuICAgIFxuICAgIGZpbHRlcmVkRGF0YS5mb3JFYWNoKChkOiBhbnkpID0+IHtcbiAgICAgIGlmIChjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgICBzb3VyY2VDYXRlZ29yaWVzLmFkZChnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNvdXJjZUNhdGVnb3JpZXMuYWRkKGRbY3VycmVudFNvdXJjZV0gfHwgJ1Vua25vd24nKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGN1cnJlbnRUYXJnZXQgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnKSB7XG4gICAgICAgIHRhcmdldENhdGVnb3JpZXMuYWRkKGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGFyZ2V0Q2F0ZWdvcmllcy5hZGQoZFtjdXJyZW50VGFyZ2V0XSB8fCAnVW5rbm93bicpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQ29udmVydCB0byBhcnJheXMgYW5kIHNvcnRcbiAgICBjb25zdCBzb3VyY2VBcnJheSA9IEFycmF5LmZyb20oc291cmNlQ2F0ZWdvcmllcykuc29ydCgpIGFzIHN0cmluZ1tdO1xuICAgIGNvbnN0IHRhcmdldEFycmF5ID0gQXJyYXkuZnJvbSh0YXJnZXRDYXRlZ29yaWVzKS5zb3J0KCkgYXMgc3RyaW5nW107XG5cbiAgICAvLyBDYWxjdWxhdGUgdG90YWxzIGZvciBlYWNoIGNhdGVnb3J5XG4gICAgY29uc3QgbGVmdFRvdGFscyA9IHNvdXJjZUFycmF5Lm1hcChjYXQgPT4gXG4gICAgICBmaWx0ZXJlZERhdGEuZmlsdGVyKChkOiBhbnkpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJyBcbiAgICAgICAgICA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgXG4gICAgICAgICAgOiBkW2N1cnJlbnRTb3VyY2VdO1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09IGNhdDtcbiAgICAgIH0pLmxlbmd0aFxuICAgICk7XG4gICAgXG4gICAgY29uc3QgcmlnaHRUb3RhbHMgPSB0YXJnZXRBcnJheS5tYXAoY2F0ID0+IFxuICAgICAgZmlsdGVyZWREYXRhLmZpbHRlcigoZDogYW55KSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY3VycmVudFRhcmdldCA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycgXG4gICAgICAgICAgPyBnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApIFxuICAgICAgICAgIDogZFtjdXJyZW50VGFyZ2V0XTtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSBjYXQ7XG4gICAgICB9KS5sZW5ndGhcbiAgICApO1xuXG4gICAgY29uc3QgbGVmdFRvdGFsU3VtID0gbGVmdFRvdGFscy5yZWR1Y2UoKHN1bSwgdmFsKSA9PiBzdW0gKyB2YWwsIDApO1xuICAgIGNvbnN0IHJpZ2h0VG90YWxTdW0gPSByaWdodFRvdGFscy5yZWR1Y2UoKHN1bSwgdmFsKSA9PiBzdW0gKyB2YWwsIDApO1xuXG4gICAgLy8gQ3JlYXRlIGNvbm5lY3Rpb24gbWF0cml4XG4gICAgY29uc3QgY29ubmVjdGlvbk1hdHJpeCA9IHNvdXJjZUFycmF5Lm1hcChzb3VyY2VDYXQgPT4gXG4gICAgICB0YXJnZXRBcnJheS5tYXAodGFyZ2V0Q2F0ID0+IHtcbiAgICAgICAgcmV0dXJuIGZpbHRlcmVkRGF0YS5maWx0ZXIoKGQ6IGFueSkgPT4ge1xuICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IGN1cnJlbnRTb3VyY2UgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnIFxuICAgICAgICAgICAgPyBnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApIFxuICAgICAgICAgICAgOiBkW2N1cnJlbnRTb3VyY2VdO1xuICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGN1cnJlbnRUYXJnZXQgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnIFxuICAgICAgICAgICAgPyBnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApIFxuICAgICAgICAgICAgOiBkW2N1cnJlbnRUYXJnZXRdO1xuICAgICAgICAgIHJldHVybiBzb3VyY2UgPT09IHNvdXJjZUNhdCAmJiB0YXJnZXQgPT09IHRhcmdldENhdDtcbiAgICAgICAgfSkubGVuZ3RoO1xuICAgICAgfSlcbiAgICApO1xuXG4gICAgLy8gQ2hlY2sgaWYgdGhpcyBpcyBhIGNhdGVnb3J5IGNoYW5nZSB0aGF0IHNob3VsZCB0cmlnZ2VyIGFuaW1hdGlvblxuICAgIGNvbnN0IGlzQ2F0ZWdvcnlDaGFuZ2UgPSBsYXN0Q2F0ZWdvcnlDaGFuZ2Uuc291cmNlICE9PSBjdXJyZW50U291cmNlIHx8IGxhc3RDYXRlZ29yeUNoYW5nZS50YXJnZXQgIT09IGN1cnJlbnRUYXJnZXQ7XG4gICAgXG4gICAgLy8gQWRkIHNtb290aCB0cmFuc2l0aW9ucyAtIGZhc3RlciBmb3IgaG92ZXIgaW50ZXJhY3Rpb25zXG4gICAgY29uc3QgdHJhbnNpdGlvbiA9IGQzLnRyYW5zaXRpb24oKVxuICAgICAgLmR1cmF0aW9uKGlzQ2F0ZWdvcnlDaGFuZ2UgPyA3NTAgOiAxMDApXG4gICAgICAuZWFzZShkMy5lYXNlQ3ViaWNJbk91dCk7XG5cbiAgICAvLyAtLS0gVHJ1ZSBsZWZ0L3JpZ2h0IGJpcGFydGl0ZSBsYXlvdXQgd2l0aCBiZXR0ZXIgc3BhY2luZyAtLS1cbiAgICAvLyBMZWZ0IGFyY3M6IDE4MMKwK2dhcCB0byAzNjDCsC1nYXAgKE1hdGguUEkrZ2FwIHRvIDIqTWF0aC5QSS1nYXApXG4gICAgLy8gUmlnaHQgYXJjczogMCtnYXAgdG8gMTgwwrAtZ2FwICgwK2dhcCB0byBNYXRoLlBJLWdhcClcbiAgICBjb25zdCBhcmNHYXAgPSBNYXRoLlBJICogMC4xMjsgLy8gTGFyZ2VyIGdhcCBmb3IgYmV0dGVyIGxhYmVsIHNwYWNpbmdcbiAgICBjb25zdCBsZWZ0U3RhcnQgPSBNYXRoLlBJICsgYXJjR2FwOyAgICAgIC8vIDE4MMKwICsgZ2FwXG4gICAgY29uc3QgbGVmdEVuZCA9IDIgKiBNYXRoLlBJIC0gYXJjR2FwOyAgICAvLyAzNjDCsCAtIGdhcFxuICAgIGNvbnN0IHJpZ2h0U3RhcnQgPSAwICsgYXJjR2FwOyAgICAgICAgICAgLy8gMMKwICsgZ2FwXG4gICAgY29uc3QgcmlnaHRFbmQgPSBNYXRoLlBJIC0gYXJjR2FwOyAgICAgICAvLyAxODDCsCAtIGdhcFxuICAgIGNvbnN0IGxlZnRBcmNTcGFuID0gbGVmdEVuZCAtIGxlZnRTdGFydDsgICAgIC8vIDE4MMKwIC0gMipnYXBcbiAgICBjb25zdCByaWdodEFyY1NwYW4gPSByaWdodEVuZCAtIHJpZ2h0U3RhcnQ7ICAvLyAxODDCsCAtIDIqZ2FwXG5cbiAgICAvLyBBZGQgbWluaW11bSBzcGFjaW5nIGJldHdlZW4gYXJjcyB0byBwcmV2ZW50IGxhYmVsIG92ZXJsYXBcbiAgICBjb25zdCBtaW5BcmNTcGFjaW5nID0gTWF0aC5QSSAqIDAuMDI7IC8vIE1pbmltdW0gMsKwIGJldHdlZW4gYXJjc1xuXG4gICAgLy8gQXNzaWduIGFyYyBhbmdsZXMgZm9yIGxlZnQgYXJjcyB3aXRoIHByb3BlciBzcGFjaW5nXG4gICAgbGV0IGxlZnRBbmdsZSA9IGxlZnRTdGFydDtcbiAgICBjb25zdCBsZWZ0QXJjcyA9IGxlZnRWYWx1ZXMubWFwKCh2YWx1ZSwgaSkgPT4ge1xuICAgICAgY29uc3QgY291bnQgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT5cbiAgICAgICAgY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYydcbiAgICAgICAgICA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IHZhbHVlXG4gICAgICAgICAgOiAoZCBhcyBhbnkpW2N1cnJlbnRTb3VyY2VdID09PSB2YWx1ZVxuICAgICAgKS5sZW5ndGg7XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBhcmMgc3BhbiB3aXRoIHNwYWNpbmcgY29uc2lkZXJhdGlvblxuICAgICAgY29uc3QgYXZhaWxhYmxlU3BhbiA9IGxlZnRBcmNTcGFuIC0gKG1pbkFyY1NwYWNpbmcgKiAobGVmdFZhbHVlcy5sZW5ndGggLSAxKSk7XG4gICAgICBjb25zdCBhcmNTcGFuID0gY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYydcbiAgICAgICAgPyBhdmFpbGFibGVTcGFuIC8gbGVmdFZhbHVlcy5sZW5ndGhcbiAgICAgICAgOiBNYXRoLm1heChtaW5BcmNTcGFjaW5nLCBhdmFpbGFibGVTcGFuICogKGNvdW50IC8gKGxlZnRUb3RhbFN1bSB8fCAxKSkpO1xuICAgICAgXG4gICAgICBjb25zdCBzdGFydEFuZ2xlID0gbGVmdEFuZ2xlO1xuICAgICAgY29uc3QgZW5kQW5nbGUgPSBsZWZ0QW5nbGUgKyBhcmNTcGFuO1xuICAgICAgbGVmdEFuZ2xlID0gZW5kQW5nbGUgKyBtaW5BcmNTcGFjaW5nOyAvLyBBZGQgc3BhY2luZyBiZXR3ZWVuIGFyY3NcbiAgICAgIFxuICAgICAgY29uc3QgY29sb3IgPSBnZXROb2RlQ29sb3IodmFsdWUsIGN1cnJlbnRTb3VyY2UsIHNldHRpbmdzLmNhdGVnb3J5Q29sb3JzLCBzZXR0aW5ncy5pc0RhcmtNb2RlKTtcbiAgICAgIGNvbnN0IG9wYWNpdHkgPSBjb3VudCA9PT0gMCA/IDAuMTUgOiAwLjg7XG4gICAgICByZXR1cm4geyBuYW1lOiB2YWx1ZSwgdmFsdWU6IGNvdW50LCBzdGFydEFuZ2xlLCBlbmRBbmdsZSwgY29sb3IsIG9wYWNpdHkgfTtcbiAgICB9KTtcblxuICAgIC8vIEFzc2lnbiBhcmMgYW5nbGVzIGZvciByaWdodCBhcmNzIHdpdGggcHJvcGVyIHNwYWNpbmdcbiAgICBsZXQgcmlnaHRBbmdsZSA9IHJpZ2h0U3RhcnQ7XG4gICAgY29uc3QgcmlnaHRBcmNzID0gcmlnaHRWYWx1ZXMubWFwKCh2YWx1ZSwgaSkgPT4ge1xuICAgICAgY29uc3QgY291bnQgPSBmaWx0ZXJlZERhdGEuZmlsdGVyKGQgPT5cbiAgICAgICAgY3VycmVudFRhcmdldCA9PT0gJ3llYXJzX2F0X21lZHRyb25pYydcbiAgICAgICAgICA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IHZhbHVlXG4gICAgICAgICAgOiAoZCBhcyBhbnkpW2N1cnJlbnRUYXJnZXRdID09PSB2YWx1ZVxuICAgICAgKS5sZW5ndGg7XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBhcmMgc3BhbiB3aXRoIHNwYWNpbmcgY29uc2lkZXJhdGlvblxuICAgICAgY29uc3QgYXZhaWxhYmxlU3BhbiA9IHJpZ2h0QXJjU3BhbiAtIChtaW5BcmNTcGFjaW5nICogKHJpZ2h0VmFsdWVzLmxlbmd0aCAtIDEpKTtcbiAgICAgIGNvbnN0IGFyY1NwYW4gPSBjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJ1xuICAgICAgICA/IGF2YWlsYWJsZVNwYW4gLyByaWdodFZhbHVlcy5sZW5ndGhcbiAgICAgICAgOiBNYXRoLm1heChtaW5BcmNTcGFjaW5nLCBhdmFpbGFibGVTcGFuICogKGNvdW50IC8gKHJpZ2h0VG90YWxTdW0gfHwgMSkpKTtcbiAgICAgIFxuICAgICAgY29uc3Qgc3RhcnRBbmdsZSA9IHJpZ2h0QW5nbGU7XG4gICAgICBjb25zdCBlbmRBbmdsZSA9IHJpZ2h0QW5nbGUgKyBhcmNTcGFuO1xuICAgICAgcmlnaHRBbmdsZSA9IGVuZEFuZ2xlICsgbWluQXJjU3BhY2luZzsgLy8gQWRkIHNwYWNpbmcgYmV0d2VlbiBhcmNzXG4gICAgICBcbiAgICAgIGNvbnN0IGNvbG9yID0gZ2V0Tm9kZUNvbG9yKHZhbHVlLCBjdXJyZW50VGFyZ2V0LCBzZXR0aW5ncy5jYXRlZ29yeUNvbG9ycywgc2V0dGluZ3MuaXNEYXJrTW9kZSk7XG4gICAgICBjb25zdCBvcGFjaXR5ID0gY291bnQgPT09IDAgPyAwLjE1IDogMC44O1xuICAgICAgcmV0dXJuIHsgbmFtZTogdmFsdWUsIHZhbHVlOiBjb3VudCwgc3RhcnRBbmdsZSwgZW5kQW5nbGUsIGNvbG9yLCBvcGFjaXR5IH07XG4gICAgfSk7XG5cbiAgICAvLyBEcmF3IGFyY3MgKHVzZSBwZXItYXJjIG9wYWNpdHkpXG4gICAgY29uc3QgaW5uZXJSYWRpdXMgPSBNYXRoLm1heCg2MCwgcmFkaXVzICogMC43NSk7XG4gICAgY29uc3Qgb3V0ZXJSYWRpdXMgPSBNYXRoLm1heCg4MCwgcmFkaXVzICogMC45NSk7XG4gICAgY29uc3QgYXJjR2VuID0gZDMuYXJjKClcbiAgICAgIC5pbm5lclJhZGl1cyhpbm5lclJhZGl1cylcbiAgICAgIC5vdXRlclJhZGl1cyhvdXRlclJhZGl1cylcbiAgICAgIC5jb3JuZXJSYWRpdXMoKGQ6IGFueSkgPT4ge1xuICAgICAgICAvLyBPbmx5IHJvdW5kIHRoZSBvdXRlciBjb3JuZXJzIChvdXRlclJhZGl1cyksIG5vdCB0aGUgaW5uZXJcbiAgICAgICAgLy8gRDMgdjcrIHN1cHBvcnRzIGNvcm5lclJhZGl1cyBhcyBhIGZ1bmN0aW9uXG4gICAgICAgIC8vIFdlJ2xsIHJldHVybiAwIGZvciBpbm5lciwgOCBmb3Igb3V0ZXJcbiAgICAgICAgLy8gQnV0IGQzLmFyYygpIG9ubHkgc3VwcG9ydHMgb25lIHZhbHVlLCBzbyB3ZSBuZWVkIHRvIHVzZSBjdXN0b20gcGF0aCBpZiB3ZSB3YW50IHRydWUgc3F1YXJlZCBpbm5lciBjb3JuZXJzXG4gICAgICAgIC8vIEFzIGEgd29ya2Fyb3VuZCwgc2V0IGNvcm5lclJhZGl1cyB0byAwIGlmIHRoZSBhcmMgaXMgc21hbGwsIGVsc2UgOFxuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH0pO1xuICAgIFxuICAgIC8vIFBvc2l0aW9uIHRoZSBjaGFydCBncm91cCB3aXRoIG1hcmdpbnMgdG8gcHJldmVudCBjcm9wcGluZ1xuICAgIGNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke21hcmdpbi5sZWZ0ICsgZWZmZWN0aXZlQ2hhcnRXaWR0aCAvIDJ9LCAke21hcmdpbi50b3AgKyBlZmZlY3RpdmVDaGFydEhlaWdodCAvIDJ9KWApO1xuXG4gICAgLy8gQWRkIGdyYWRpZW50cyBmb3IgYXJjc1xuICAgIGxlZnRBcmNzLmZvckVhY2goKGFyYywgaSkgPT4ge1xuICAgICAgY29uc3QgYmFzZUNvbG9yID0gYXJjLmNvbG9yO1xuICAgICAgY29uc3QgbGlnaHRlckNvbG9yID0gZDMuY29sb3IoYmFzZUNvbG9yKT8uYnJpZ2h0ZXIoMC4zKS50b1N0cmluZygpIHx8IGJhc2VDb2xvcjtcbiAgICAgIGRlZnMuYXBwZW5kKCdsaW5lYXJHcmFkaWVudCcpXG4gICAgICAgIC5hdHRyKCdpZCcsIGBsZWZ0LWFyYy1ncmFkaWVudC0ke2l9YClcbiAgICAgICAgLmF0dHIoJ2dyYWRpZW50VW5pdHMnLCAndXNlclNwYWNlT25Vc2UnKVxuICAgICAgICAuYXR0cigneDEnLCAwKVxuICAgICAgICAuYXR0cigneTEnLCAwKVxuICAgICAgICAuYXR0cigneDInLCAwKVxuICAgICAgICAuYXR0cigneTInLCAxKVxuICAgICAgICAuc2VsZWN0QWxsKCdzdG9wJylcbiAgICAgICAgLmRhdGEoW1xuICAgICAgICAgIHsgb2Zmc2V0OiAnMCUnLCBjb2xvcjogYmFzZUNvbG9yIH0sXG4gICAgICAgICAgeyBvZmZzZXQ6ICcxMDAlJywgY29sb3I6IGxpZ2h0ZXJDb2xvciB9XG4gICAgICAgIF0pXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ3N0b3AnKVxuICAgICAgICAuYXR0cignb2Zmc2V0JywgZCA9PiBkLm9mZnNldClcbiAgICAgICAgLmF0dHIoJ3N0b3AtY29sb3InLCBkID0+IGQuY29sb3IpO1xuICAgIH0pO1xuICAgIHJpZ2h0QXJjcy5mb3JFYWNoKChhcmMsIGkpID0+IHtcbiAgICAgIGNvbnN0IGJhc2VDb2xvciA9IGFyYy5jb2xvcjtcbiAgICAgIGNvbnN0IGxpZ2h0ZXJDb2xvciA9IGQzLmNvbG9yKGJhc2VDb2xvcik/LmJyaWdodGVyKDAuMykudG9TdHJpbmcoKSB8fCBiYXNlQ29sb3I7XG4gICAgICBkZWZzLmFwcGVuZCgnbGluZWFyR3JhZGllbnQnKVxuICAgICAgICAuYXR0cignaWQnLCBgcmlnaHQtYXJjLWdyYWRpZW50LSR7aX1gKVxuICAgICAgICAuYXR0cignZ3JhZGllbnRVbml0cycsICd1c2VyU3BhY2VPblVzZScpXG4gICAgICAgIC5hdHRyKCd4MScsIDApXG4gICAgICAgIC5hdHRyKCd5MScsIDApXG4gICAgICAgIC5hdHRyKCd4MicsIDApXG4gICAgICAgIC5hdHRyKCd5MicsIDEpXG4gICAgICAgIC5zZWxlY3RBbGwoJ3N0b3AnKVxuICAgICAgICAuZGF0YShbXG4gICAgICAgICAgeyBvZmZzZXQ6ICcwJScsIGNvbG9yOiBiYXNlQ29sb3IgfSxcbiAgICAgICAgICB7IG9mZnNldDogJzEwMCUnLCBjb2xvcjogbGlnaHRlckNvbG9yIH1cbiAgICAgICAgXSlcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZCgnc3RvcCcpXG4gICAgICAgIC5hdHRyKCdvZmZzZXQnLCBkID0+IGQub2Zmc2V0KVxuICAgICAgICAuYXR0cignc3RvcC1jb2xvcicsIGQgPT4gZC5jb2xvcik7XG4gICAgfSk7XG4gICAgLy8gQ3JlYXRlIGxlZnQgYXJjcyB3aXRoIGV2ZW50IGhhbmRsZXJzIGZpcnN0XG4gICAgY29uc3QgbGVmdEFyY1NlbGVjdGlvbiA9IGcuc2VsZWN0QWxsKCdwYXRoLmxlZnQtYXJjJylcbiAgICAgIC5kYXRhKGxlZnRBcmNzKVxuICAgICAgLmVudGVyKClcbiAgICAgIC5hcHBlbmQoJ3BhdGgnKVxuICAgICAgLmF0dHIoJ2NsYXNzJywgJ2xlZnQtYXJjJylcbiAgICAgIC5hdHRyKCdkJywgZCA9PiBhcmNHZW4oeyBzdGFydEFuZ2xlOiBkLnN0YXJ0QW5nbGUsIGVuZEFuZ2xlOiBkLmVuZEFuZ2xlIH0gYXMgYW55KSlcbiAgICAgIC5hdHRyKCdmaWxsJywgKGQsIGkpID0+IGB1cmwoI2xlZnQtYXJjLWdyYWRpZW50LSR7aX0pYClcbiAgICAgIC5hdHRyKCdvcGFjaXR5JywgMClcbiAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKGV2ZW50LCBkOiBhbnkpIHtcbiAgICAgICAgcGF1c2VBbmltYXRpb24oJ2xlZnQgYXJjIGhvdmVyJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBUcmlnZ2VyIHRoZSBzYW1lIGhpZ2hsaWdodGluZyBhcyBhdXRvLWN5Y2xlIGFuaW1hdGlvblxuICAgICAgICBjb25zdCBhcmNJbmRleCA9IGxlZnRBcmNzLmZpbmRJbmRleChhcmMgPT4gYXJjLm5hbWUgPT09IGQubmFtZSk7XG4gICAgICAgIFxuICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnaGlnaGxpZ2h0aW5nJyk7XG4gICAgICAgIHNldEhpZ2hsaWdodGVkQXJjSW5kZXgoYXJjSW5kZXgpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZFNpZGUoJ2xlZnQnKTtcbiAgICAgICAgXG4gICAgICAgIHNldFRvb2x0aXAoe1xuICAgICAgICAgIHg6IGV2ZW50LnBhZ2VYLFxuICAgICAgICAgIHk6IGV2ZW50LnBhZ2VZLFxuICAgICAgICAgIGNvbnRlbnQ6IChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnLCBtYXJnaW5Cb3R0b206IDQgfX0+eyhkLm5hbWUgfHwgJ1Vua25vd24nKS50b1N0cmluZygpLnJlcGxhY2UoL18vZywgJyAnKX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj5Db3VudDoge2QudmFsdWV9PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VsZWF2ZScsICgpID0+IHtcbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdsZWZ0IGFyYyBob3ZlciBlbmQnKTtcbiAgICAgICAgc2V0VG9vbHRpcChudWxsKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlc2V0IGhpZ2hsaWdodGluZyB3aGVuIGFuaW1hdGlvbiByZXN1bWVzXG4gICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdmdWxsJyk7XG4gICAgICAgIHNldEhpZ2hsaWdodGVkQXJjSW5kZXgobnVsbCk7XG4gICAgICAgIHNldEhpZ2hsaWdodGVkU2lkZShudWxsKTtcbiAgICAgIH0pO1xuICAgIFxuICAgIC8vIEFwcGx5IHRyYW5zaXRpb24gYW5pbWF0aW9ucyBzZXBhcmF0ZWx5XG4gICAgbGVmdEFyY1NlbGVjdGlvblxuICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgIC5hdHRyKCdvcGFjaXR5JywgKGQsIGkpID0+IHtcbiAgICAgICAgLy8gQXBwbHkgZnVsbCByZWxhdGlvbnNoaXAgY2hhaW4gaGlnaGxpZ2h0aW5nXG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAnbGVmdCcpIHtcbiAgICAgICAgICAgIC8vIEhpZ2hsaWdodCB0aGUgc291cmNlIGFyY1xuICAgICAgICAgICAgaWYgKGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDEuMDsgLy8gU291cmNlIGFyYyBpcyBmdWxseSBoaWdobGlnaHRlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBhcmMgaXMgY29ubmVjdGVkIHRvIHRoZSBoaWdobGlnaHRlZCByaWdodCBhcmNcbiAgICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdsZWZ0JyAmJiBoaWdobGlnaHRlZEFyY0luZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgIHJldHVybiAwLjQ7IC8vIERpbSBvdGhlciBsZWZ0IGFyY3NcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ3JpZ2h0JyAmJiBoaWdobGlnaHRlZEFyY0luZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAvLyBXaGVuIHJpZ2h0IGFyYyBpcyBoaWdobGlnaHRlZCwgaGlnaGxpZ2h0IGxlZnQgYXJjcyBjb25uZWN0ZWQgdG8gaXRcbiAgICAgICAgICAgIGNvbnN0IG1hdHJpeFZhbHVlID0gY29ubmVjdGlvbk1hdHJpeFtpXSAmJiBjb25uZWN0aW9uTWF0cml4W2ldW2hpZ2hsaWdodGVkQXJjSW5kZXhdO1xuICAgICAgICAgICAgY29uc3QgaXNDb25uZWN0ZWRUb0hpZ2hsaWdodGVkUmlnaHQgPSBtYXRyaXhWYWx1ZSA+IDA7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg8J+UlyBMZWZ0IGFyYyAke2l9ICgke2xlZnRBcmNzW2ldPy5uYW1lfSkgY29ubmVjdGVkIHRvIHJpZ2h0IGFyYyAke2hpZ2hsaWdodGVkQXJjSW5kZXh9ICgke3JpZ2h0QXJjc1toaWdobGlnaHRlZEFyY0luZGV4XT8ubmFtZX0pP2AsIFxuICAgICAgICAgICAgICBpc0Nvbm5lY3RlZFRvSGlnaGxpZ2h0ZWRSaWdodCwgJ01hdHJpeCB2YWx1ZTonLCBtYXRyaXhWYWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gaXNDb25uZWN0ZWRUb0hpZ2hsaWdodGVkUmlnaHQgPyAwLjk1IDogMC4zOyAvLyBIaWdoZXIgY29udHJhc3RcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gVXNlIHN0YWJsZSBiYXNlIG9wYWNpdHkgd2l0aG91dCBwdWxzaW5nIHRvIHByZXZlbnQgZmxpY2tlcmluZ1xuICAgICAgICByZXR1cm4gTWF0aC5tYXgoMC44LCBkLm9wYWNpdHkpO1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCAoZCwgaSkgPT4ge1xuICAgICAgICAvLyBFbmhhbmNlZCBzdHJva2UgZm9yIHJlbGF0aW9uc2hpcCBjaGFpblxuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAzOyAvLyBUaGlja2VzdCBzdHJva2UgZm9yIHNvdXJjZSBhcmNcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gU3Ryb2tlIGZvciBjb25uZWN0ZWQgYXJjcyB3aGVuIHJpZ2h0IHNpZGUgaXMgaGlnaGxpZ2h0ZWRcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IG1hdHJpeFZhbHVlID0gY29ubmVjdGlvbk1hdHJpeFtpXSAmJiBjb25uZWN0aW9uTWF0cml4W2ldW2hpZ2hsaWdodGVkQXJjSW5kZXhdO1xuICAgICAgICAgICAgaWYgKG1hdHJpeFZhbHVlID4gMCkge1xuICAgICAgICAgICAgICByZXR1cm4gMjsgLy8gTWVkaXVtIHN0cm9rZSBmb3IgY29ubmVjdGVkIGFyY3NcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDE7XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3N0cm9rZScsIChkLCBpKSA9PiB7XG4gICAgICAgIC8vIEVuaGFuY2VkIHN0cm9rZSBjb2xvciBmb3IgcmVsYXRpb25zaGlwIGNoYWluXG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAnbGVmdCcgJiYgaSA9PT0gaGlnaGxpZ2h0ZWRBcmNJbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzLmlzRGFya01vZGUgPyAncmdiYSgyNTUsMjU1LDI1NSwwLjQpJyA6ICdyZ2JhKDAsMCwwLDAuMyknO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBTdHJva2UgZm9yIGNvbm5lY3RlZCBhcmNzIHdoZW4gcmlnaHQgc2lkZSBpcyBoaWdobGlnaHRlZFxuICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdyaWdodCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgbWF0cml4VmFsdWUgPSBjb25uZWN0aW9uTWF0cml4W2ldICYmIGNvbm5lY3Rpb25NYXRyaXhbaV1baGlnaGxpZ2h0ZWRBcmNJbmRleF07XG4gICAgICAgICAgICBpZiAobWF0cml4VmFsdWUgPiAwKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJ3JnYmEoMjU1LDI1NSwyNTUsMC4zKScgOiAncmdiYSgwLDAsMCwwLjIpJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgIH0pO1xuICAgIC8vIENyZWF0ZSByaWdodCBhcmNzIHdpdGggZXZlbnQgaGFuZGxlcnMgZmlyc3RcbiAgICBjb25zdCByaWdodEFyY1NlbGVjdGlvbiA9IGcuc2VsZWN0QWxsKCdwYXRoLnJpZ2h0LWFyYycpXG4gICAgICAuZGF0YShyaWdodEFyY3MpXG4gICAgICAuZW50ZXIoKVxuICAgICAgLmFwcGVuZCgncGF0aCcpXG4gICAgICAuYXR0cignY2xhc3MnLCAncmlnaHQtYXJjJylcbiAgICAgIC5hdHRyKCdkJywgZCA9PiBhcmNHZW4oeyBzdGFydEFuZ2xlOiBkLnN0YXJ0QW5nbGUsIGVuZEFuZ2xlOiBkLmVuZEFuZ2xlIH0gYXMgYW55KSlcbiAgICAgIC5hdHRyKCdmaWxsJywgKGQsIGkpID0+IGB1cmwoI3JpZ2h0LWFyYy1ncmFkaWVudC0ke2l9KWApXG4gICAgICAuYXR0cignb3BhY2l0eScsIDApXG4gICAgICAub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudCwgZDogYW55KSB7XG4gICAgICAgIHBhdXNlQW5pbWF0aW9uKCdhcmMgaG92ZXInKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRyaWdnZXIgdGhlIHNhbWUgaGlnaGxpZ2h0aW5nIGFzIGF1dG8tY3ljbGUgYW5pbWF0aW9uXG4gICAgICAgIGNvbnN0IGFyY0luZGV4ID0gcmlnaHRBcmNzLmZpbmRJbmRleChhcmMgPT4gYXJjLm5hbWUgPT09IGQubmFtZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn46vIEhvdmVyIHRyaWdnZXJpbmcgcmlnaHQgYXJjIGhpZ2hsaWdodGluZzonLCB7XG4gICAgICAgICAgYXJjTmFtZTogZC5uYW1lLFxuICAgICAgICAgIGFyY0luZGV4OiBhcmNJbmRleFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdoaWdobGlnaHRpbmcnKTtcbiAgICAgICAgc2V0SGlnaGxpZ2h0ZWRBcmNJbmRleChhcmNJbmRleCk7XG4gICAgICAgIHNldEhpZ2hsaWdodGVkU2lkZSgncmlnaHQnKTtcbiAgICAgICAgXG4gICAgICAgIHNldFRvb2x0aXAoe1xuICAgICAgICAgIHg6IGV2ZW50LnBhZ2VYLFxuICAgICAgICAgIHk6IGV2ZW50LnBhZ2VZLFxuICAgICAgICAgIGNvbnRlbnQ6IChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnLCBtYXJnaW5Cb3R0b206IDQgfX0+eyhkLm5hbWUgfHwgJ1Vua25vd24nKS50b1N0cmluZygpLnJlcGxhY2UoL18vZywgJyAnKX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj5Db3VudDoge2QudmFsdWV9PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5vbignbW91c2VsZWF2ZScsICgpID0+IHtcbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdhcmMgaG92ZXIgZW5kJyk7XG4gICAgICAgIHNldFRvb2x0aXAobnVsbCk7XG4gICAgICAgIFxuICAgICAgICAvLyBSZXNldCBoaWdobGlnaHRpbmcgd2hlbiBhbmltYXRpb24gcmVzdW1lc1xuICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZEFyY0luZGV4KG51bGwpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZFNpZGUobnVsbCk7XG4gICAgICB9KTtcbiAgICBcbiAgICAvLyBBcHBseSB0cmFuc2l0aW9uIGFuaW1hdGlvbnMgc2VwYXJhdGVseVxuICAgIHJpZ2h0QXJjU2VsZWN0aW9uXG4gICAgICAudHJhbnNpdGlvbih0cmFuc2l0aW9uKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLCAoZCwgaSkgPT4ge1xuICAgICAgICAvLyBBcHBseSBmdWxsIHJlbGF0aW9uc2hpcCBjaGFpbiBoaWdobGlnaHRpbmdcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdyaWdodCcpIHtcbiAgICAgICAgICAgIC8vIEhpZ2hsaWdodCB0aGUgc291cmNlIGFyY1xuICAgICAgICAgICAgaWYgKGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDEuMDsgLy8gU291cmNlIGFyYyBpcyBmdWxseSBoaWdobGlnaHRlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIDAuNDsgLy8gRGltIG90aGVyIHJpZ2h0IGFyY3NcbiAgICAgICAgICB9IGVsc2UgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFdoZW4gbGVmdCBhcmMgaXMgaGlnaGxpZ2h0ZWQsIGhpZ2hsaWdodCByaWdodCBhcmNzIGNvbm5lY3RlZCB0byBpdFxuICAgICAgICAgICAgY29uc3QgbWF0cml4VmFsdWUgPSBjb25uZWN0aW9uTWF0cml4W2hpZ2hsaWdodGVkQXJjSW5kZXhdICYmIGNvbm5lY3Rpb25NYXRyaXhbaGlnaGxpZ2h0ZWRBcmNJbmRleF1baV07XG4gICAgICAgICAgICBjb25zdCBpc0Nvbm5lY3RlZFRvSGlnaGxpZ2h0ZWRMZWZ0ID0gbWF0cml4VmFsdWUgPiAwO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYPCflJcgUmlnaHQgYXJjICR7aX0gKCR7cmlnaHRBcmNzW2ldPy5uYW1lfSkgY29ubmVjdGVkIHRvIGxlZnQgYXJjICR7aGlnaGxpZ2h0ZWRBcmNJbmRleH0gKCR7bGVmdEFyY3NbaGlnaGxpZ2h0ZWRBcmNJbmRleF0/Lm5hbWV9KT9gLCBcbiAgICAgICAgICAgICAgaXNDb25uZWN0ZWRUb0hpZ2hsaWdodGVkTGVmdCwgJ01hdHJpeCB2YWx1ZTonLCBtYXRyaXhWYWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gaXNDb25uZWN0ZWRUb0hpZ2hsaWdodGVkTGVmdCA/IDAuOTUgOiAwLjM7IC8vIEhpZ2hlciBjb250cmFzdFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBVc2Ugc3RhYmxlIGJhc2Ugb3BhY2l0eSB3aXRob3V0IHB1bHNpbmcgdG8gcHJldmVudCBmbGlja2VyaW5nXG4gICAgICAgIHJldHVybiBNYXRoLm1heCgwLjgsIGQub3BhY2l0eSk7XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIChkLCBpKSA9PiB7XG4gICAgICAgIC8vIEVuaGFuY2VkIHN0cm9rZSBmb3IgcmVsYXRpb25zaGlwIGNoYWluXG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGkgPT09IGhpZ2hsaWdodGVkQXJjSW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiAzOyAvLyBUaGlja2VzdCBzdHJva2UgZm9yIHNvdXJjZSBhcmNcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gU3Ryb2tlIGZvciBjb25uZWN0ZWQgYXJjcyB3aGVuIGxlZnQgc2lkZSBpcyBoaWdobGlnaHRlZFxuICAgICAgICAgIGlmIChoaWdobGlnaHRlZFNpZGUgPT09ICdsZWZ0JyAmJiBoaWdobGlnaHRlZEFyY0luZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBtYXRyaXhWYWx1ZSA9IGNvbm5lY3Rpb25NYXRyaXhbaGlnaGxpZ2h0ZWRBcmNJbmRleF0gJiYgY29ubmVjdGlvbk1hdHJpeFtoaWdobGlnaHRlZEFyY0luZGV4XVtpXTtcbiAgICAgICAgICAgIGlmIChtYXRyaXhWYWx1ZSA+IDApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIDI7IC8vIE1lZGl1bSBzdHJva2UgZm9yIGNvbm5lY3RlZCBhcmNzXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdzdHJva2UnLCAoZCwgaSkgPT4ge1xuICAgICAgICAvLyBFbmhhbmNlZCBzdHJva2UgY29sb3IgZm9yIHJlbGF0aW9uc2hpcCBjaGFpblxuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ3JpZ2h0JyAmJiBpID09PSBoaWdobGlnaHRlZEFyY0luZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICdyZ2JhKDI1NSwyNTUsMjU1LDAuNCknIDogJ3JnYmEoMCwwLDAsMC4zKSc7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIFN0cm9rZSBmb3IgY29ubmVjdGVkIGFyY3Mgd2hlbiBsZWZ0IHNpZGUgaXMgaGlnaGxpZ2h0ZWRcbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAnbGVmdCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgbWF0cml4VmFsdWUgPSBjb25uZWN0aW9uTWF0cml4W2hpZ2hsaWdodGVkQXJjSW5kZXhdICYmIGNvbm5lY3Rpb25NYXRyaXhbaGlnaGxpZ2h0ZWRBcmNJbmRleF1baV07XG4gICAgICAgICAgICBpZiAobWF0cml4VmFsdWUgPiAwKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJ3JnYmEoMjU1LDI1NSwyNTUsMC4zKScgOiAncmdiYSgwLDAsMCwwLjIpJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgIH0pO1xuXG4gICAgLy8gRHJhdyByaWJib25zIGZvciBjb25uZWN0aW9ucyAoZGlzdHJpYnV0ZWQgYWxvbmcgYXJjLCBwcm9wb3J0aW9uYWwgdGhpY2tuZXNzKVxuICAgIC8vIFVzZSBkMy5yaWJib24oKSBmb3IgZWFjaCBjb25uZWN0aW9uLCBidXQgc2V0IHRoZSB3aWR0aCBieSB1c2luZyB0aGUgZnVsbCBzZWdtZW50IGZvciBlYWNoIGNvbm5lY3Rpb25cbiAgICBjb25zdCByaWJib25SYWRpdXMgPSBNYXRoLm1heCg2MCwgcmFkaXVzICogMC43NSk7IC8vIEVuc3VyZSBtaW5pbXVtIHJhZGl1cyBmb3IgcmliYm9uc1xuICAgIGNvbnN0IHJpYmJvbkdlbiA9IGQzLnJpYmJvbigpLnJhZGl1cyhyaWJib25SYWRpdXMpO1xuICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzb3VyY2VBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0YXJnZXRBcnJheS5sZW5ndGg7IGorKykge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGNvbm5lY3Rpb25NYXRyaXhbaV1bal07XG4gICAgICAgIGlmICh2YWx1ZSA+IDApIHtcbiAgICAgICAgICAvLyBGaW5kIHRoZSBzZWdtZW50IGZvciB0aGlzIGNvbm5lY3Rpb24gb24gYm90aCBhcmNzXG4gICAgICAgICAgY29uc3QgbGVmdFNlZyA9IGxlZnRBcmNzW2ldO1xuICAgICAgICAgIGNvbnN0IHJpZ2h0U2VnID0gcmlnaHRBcmNzW2pdO1xuICAgICAgICAgIC8vIENvbXB1dGUgYXJjIG1pZHBvaW50cyBmb3IgZ3JhZGllbnQgZGlyZWN0aW9uXG4gICAgICAgICAgY29uc3QgbGVmdE1pZEFuZ2xlID0gKGxlZnRTZWcuc3RhcnRBbmdsZSArIGxlZnRTZWcuZW5kQW5nbGUpIC8gMiAtIE1hdGguUEkgLyAyO1xuICAgICAgICAgIGNvbnN0IHJpZ2h0TWlkQW5nbGUgPSAocmlnaHRTZWcuc3RhcnRBbmdsZSArIHJpZ2h0U2VnLmVuZEFuZ2xlKSAvIDIgLSBNYXRoLlBJIC8gMjtcbiAgICAgICAgICBjb25zdCBsZWZ0WCA9IE1hdGguY29zKGxlZnRNaWRBbmdsZSkgKiByaWJib25SYWRpdXM7XG4gICAgICAgICAgY29uc3QgbGVmdFkgPSBNYXRoLnNpbihsZWZ0TWlkQW5nbGUpICogcmliYm9uUmFkaXVzO1xuICAgICAgICAgIGNvbnN0IHJpZ2h0WCA9IE1hdGguY29zKHJpZ2h0TWlkQW5nbGUpICogcmliYm9uUmFkaXVzO1xuICAgICAgICAgIGNvbnN0IHJpZ2h0WSA9IE1hdGguc2luKHJpZ2h0TWlkQW5nbGUpICogcmliYm9uUmFkaXVzO1xuICAgICAgICAgIC8vIEFkZCBncmFkaWVudCBmb3IgdGhpcyByaWJib25cbiAgICAgICAgICBjb25zdCBsZWZ0Q29sb3IgPSBsZWZ0QXJjc1tpXS5jb2xvciB8fCBkMy5zY2hlbWVDYXRlZ29yeTEwW2kgJSAxMF07XG4gICAgICAgICAgY29uc3QgcmlnaHRDb2xvciA9IHJpZ2h0QXJjc1tqXS5jb2xvciB8fCBkMy5zY2hlbWVDYXRlZ29yeTEwWyhqICsgNSkgJSAxMF07XG4gICAgICAgICAgZGVmcy5hcHBlbmQoJ2xpbmVhckdyYWRpZW50JylcbiAgICAgICAgICAgIC5hdHRyKCdpZCcsIGByaWJib24tZ3JhZGllbnQtJHtpfS0ke2p9YClcbiAgICAgICAgICAgIC5hdHRyKCdncmFkaWVudFVuaXRzJywgJ3VzZXJTcGFjZU9uVXNlJylcbiAgICAgICAgICAgIC5hdHRyKCd4MScsIGxlZnRYKVxuICAgICAgICAgICAgLmF0dHIoJ3kxJywgbGVmdFkpXG4gICAgICAgICAgICAuYXR0cigneDInLCByaWdodFgpXG4gICAgICAgICAgICAuYXR0cigneTInLCByaWdodFkpXG4gICAgICAgICAgICAuc2VsZWN0QWxsKCdzdG9wJylcbiAgICAgICAgICAgIC5kYXRhKFtcbiAgICAgICAgICAgICAgeyBvZmZzZXQ6ICcwJScsIGNvbG9yOiBsZWZ0Q29sb3IgfSxcbiAgICAgICAgICAgICAgeyBvZmZzZXQ6ICcxMDAlJywgY29sb3I6IHJpZ2h0Q29sb3IgfVxuICAgICAgICAgICAgXSlcbiAgICAgICAgICAgIC5lbnRlcigpXG4gICAgICAgICAgICAuYXBwZW5kKCdzdG9wJylcbiAgICAgICAgICAgIC5hdHRyKCdvZmZzZXQnLCBkID0+IGQub2Zmc2V0KVxuICAgICAgICAgICAgLmF0dHIoJ3N0b3AtY29sb3InLCBkID0+IGQuY29sb3IpO1xuICAgICAgICAgIGNvbm5lY3Rpb25zLnB1c2goe1xuICAgICAgICAgICAgc291cmNlOiB7XG4gICAgICAgICAgICAgIHN0YXJ0QW5nbGU6IGxlZnRTZWcuc3RhcnRBbmdsZSxcbiAgICAgICAgICAgICAgZW5kQW5nbGU6IGxlZnRTZWcuZW5kQW5nbGUsXG4gICAgICAgICAgICAgIGluZGV4OiBpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGFyZ2V0OiB7XG4gICAgICAgICAgICAgIHN0YXJ0QW5nbGU6IHJpZ2h0U2VnLnN0YXJ0QW5nbGUsXG4gICAgICAgICAgICAgIGVuZEFuZ2xlOiByaWdodFNlZy5lbmRBbmdsZSxcbiAgICAgICAgICAgICAgaW5kZXg6IGpcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGxlZnQ6IGxlZnRBcmNzW2ldLFxuICAgICAgICAgICAgcmlnaHQ6IHJpZ2h0QXJjc1tqXSxcbiAgICAgICAgICAgIGdyYWRpZW50SWQ6IGByaWJib24tZ3JhZGllbnQtJHtpfS0ke2p9YFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIC8vIENyZWF0ZSByaWJib25zIHdpdGggZXZlbnQgaGFuZGxlcnMgZmlyc3RcbiAgICBjb25zdCByaWJib25TZWxlY3Rpb24gPSBnLnNlbGVjdEFsbCgncGF0aC5yaWJib24nKVxuICAgICAgLmRhdGEoY29ubmVjdGlvbnMpXG4gICAgICAuZW50ZXIoKVxuICAgICAgLmFwcGVuZCgncGF0aCcpXG4gICAgICAuYXR0cignY2xhc3MnLCAncmliYm9uJylcbiAgICAgIC5hdHRyKCdkJywgZnVuY3Rpb24oZCkgeyBjb25zdCBwYXRoID0gcmliYm9uR2VuKHsgc291cmNlOiBkLnNvdXJjZSwgdGFyZ2V0OiBkLnRhcmdldCB9IGFzIGFueSk7IHJldHVybiB0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycgPyBwYXRoIDogJyc7IH0pXG4gICAgICAuYXR0cignZmlsbCcsIGQgPT4gYHVybCgjJHtkLmdyYWRpZW50SWR9KWApXG4gICAgICAuYXR0cignb3BhY2l0eScsIDApXG4gICAgICAub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudDogYW55LCBkOiBhbnkpIHtcbiAgICAgICAgcGF1c2VBbmltYXRpb24oJ3JpYmJvbiBob3ZlcicpO1xuICAgICAgICBcbiAgICAgICAgLy8gVHJpZ2dlciBoaWdobGlnaHRpbmcgZm9yIHRoZSBzb3VyY2Ugc2lkZSBvZiB0aGlzIHJpYmJvbiAoc2FtZSBhcyBhdXRvLWN5Y2xlKVxuICAgICAgICBjb25zb2xlLmxvZygn8J+OryBIb3ZlciB0cmlnZ2VyaW5nIHJpYmJvbiBoaWdobGlnaHRpbmc6Jywge1xuICAgICAgICAgIGxlZnRBcmNOYW1lOiBkLmxlZnQubmFtZSxcbiAgICAgICAgICByaWdodEFyY05hbWU6IGQucmlnaHQubmFtZSxcbiAgICAgICAgICBzb3VyY2VJbmRleDogZC5zb3VyY2UuaW5kZXgsXG4gICAgICAgICAgdGFyZ2V0SW5kZXg6IGQudGFyZ2V0LmluZGV4XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2hpZ2hsaWdodGluZycpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZEFyY0luZGV4KGQuc291cmNlLmluZGV4KTtcbiAgICAgICAgc2V0SGlnaGxpZ2h0ZWRTaWRlKCdsZWZ0Jyk7XG4gICAgICAgIFxuICAgICAgICBzZXRUb29sdGlwKHtcbiAgICAgICAgICB4OiBldmVudC5wYWdlWCxcbiAgICAgICAgICB5OiBldmVudC5wYWdlWSxcbiAgICAgICAgICBjb250ZW50OiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRXZWlnaHQ6ICdib2xkJywgbWFyZ2luQm90dG9tOiA0IH19PlxuICAgICAgICAgICAgICAgIHsoZC5sZWZ0Lm5hbWUgfHwgJ1Vua25vd24nKS50b1N0cmluZygpLnJlcGxhY2UoL18vZywgJyAnKX0g4oaUIHsoZC5yaWdodC5uYW1lIHx8ICdVbmtub3duJykudG9TdHJpbmcoKS5yZXBsYWNlKC9fL2csICcgJyl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PkNvbm5lY3Rpb25zOiB7ZC52YWx1ZX08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIClcbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oZXZlbnQsIGQpIHtcbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdyaWJib24gaG92ZXIgZW5kJyk7XG4gICAgICAgIHNldFRvb2x0aXAobnVsbCk7XG4gICAgICAgIFxuICAgICAgICAvLyBSZXNldCBoaWdobGlnaHRpbmcgd2hlbiBhbmltYXRpb24gcmVzdW1lc1xuICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZEFyY0luZGV4KG51bGwpO1xuICAgICAgICBzZXRIaWdobGlnaHRlZFNpZGUobnVsbCk7XG4gICAgICB9KTtcbiAgICBcbiAgICAvLyBBcHBseSB0cmFuc2l0aW9uIGFuaW1hdGlvbnMgc2VwYXJhdGVseVxuICAgIHJpYmJvblNlbGVjdGlvblxuICAgICAgLnRyYW5zaXRpb24odHJhbnNpdGlvbilcbiAgICAgIC5hdHRyKCdvcGFjaXR5JywgZCA9PiB7XG4gICAgICAgIC8vIEhpZ2hsaWdodCByaWJib25zIGNvbm5lY3RlZCB0byBoaWdobGlnaHRlZCBhcmNzIHdpdGggZW5oYW5jZWQgdmlzaWJpbGl0eVxuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ2xlZnQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQuc291cmNlLmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gMC45NTsgLy8gTWFrZSBjb25uZWN0ZWQgcmliYm9ucyB2ZXJ5IHByb21pbmVudFxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaGlnaGxpZ2h0ZWRTaWRlID09PSAncmlnaHQnICYmIGhpZ2hsaWdodGVkQXJjSW5kZXggPT09IGQudGFyZ2V0LmluZGV4KSB7XG4gICAgICAgICAgICByZXR1cm4gMC45NTsgLy8gTWFrZSBjb25uZWN0ZWQgcmliYm9ucyB2ZXJ5IHByb21pbmVudFxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gMC4yOyAvLyBEaW0gbm9uLWNvbm5lY3RlZCByaWJib25zIG1vcmUgZm9yIGJldHRlciBjb250cmFzdFxuICAgICAgICB9XG4gICAgICAgIC8vIFVzZSBzdGFibGUgYmFzZSBvcGFjaXR5IHdpdGhvdXQgcHVsc2luZ1xuICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuNyA6IDAuNjtcbiAgICAgIH0pXG4gICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgZCA9PiB7XG4gICAgICAgIC8vIEVuaGFuY2VkIHN0cm9rZSBmb3IgaGlnaGxpZ2h0ZWQgcmliYm9ucyB0byBzaG93IGNvbm5lY3Rpb25zIGNsZWFybHlcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGlmICgoaGlnaGxpZ2h0ZWRTaWRlID09PSAnbGVmdCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC5zb3VyY2UuaW5kZXgpIHx8XG4gICAgICAgICAgICAgIChoaWdobGlnaHRlZFNpZGUgPT09ICdyaWdodCcgJiYgaGlnaGxpZ2h0ZWRBcmNJbmRleCA9PT0gZC50YXJnZXQuaW5kZXgpKSB7XG4gICAgICAgICAgICByZXR1cm4gMi41OyAvLyBTbGlnaHRseSB0aGlja2VyIGZvciBiZXR0ZXIgdmlzaWJpbGl0eVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMC41O1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdzdHJva2UnLCBkID0+IHtcbiAgICAgICAgLy8gRW5oYW5jZWQgc3Ryb2tlIGNvbG9yIGZvciBoaWdobGlnaHRlZCBjb25uZWN0aW9uc1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgaWYgKChoaWdobGlnaHRlZFNpZGUgPT09ICdsZWZ0JyAmJiBoaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnNvdXJjZS5pbmRleCkgfHxcbiAgICAgICAgICAgICAgKGhpZ2hsaWdodGVkU2lkZSA9PT0gJ3JpZ2h0JyAmJiBoaWdobGlnaHRlZEFyY0luZGV4ID09PSBkLnRhcmdldC5pbmRleCkpIHtcbiAgICAgICAgICAgIHJldHVybiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJ3JnYmEoMjU1LDI1NSwyNTUsMC40KScgOiAncmdiYSgwLDAsMCwwLjMpJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICdub25lJztcbiAgICAgIH0pO1xuXG4gICAgLy8gLS0tIExhYmVsIHBsYWNlbWVudDogcHJvcGVybHkgc3BhY2VkIGFyb3VuZCBjaXJjbGUgLS0tXG4gICAgY29uc3QgbGFiZWxSYWRpdXMgPSBNYXRoLm1heCgxMjAsIHJhZGl1cyAqIDEuNDUpOyAvLyBFdmVuIG1vcmUgc3BhY2UgZm9yIGZ1bGwgdGV4dCBsYWJlbHNcbiAgICBjb25zdCBsYWJlbEdyb3VwID0gc3ZnLmFwcGVuZCgnZycpLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHttYXJnaW4ubGVmdCArIGVmZmVjdGl2ZUNoYXJ0V2lkdGggLyAyfSwgJHttYXJnaW4udG9wICsgZWZmZWN0aXZlQ2hhcnRIZWlnaHQgLyAyfSlgKTtcbiAgICBcbiAgICAvLyBDb21iaW5lIGFsbCBhcmNzIGZvciB1bmlmaWVkIGxhYmVsIHBsYWNlbWVudFxuICAgIGNvbnN0IGFsbEFyY3MgPSBbLi4ubGVmdEFyY3MubWFwKGFyYyA9PiAoey4uLmFyYywgc2lkZTogJ2xlZnQnfSkpLCAuLi5yaWdodEFyY3MubWFwKGFyYyA9PiAoey4uLmFyYywgc2lkZTogJ3JpZ2h0J30pKV07XG4gICAgXG4gICAgLy8gQWRkIGxhYmVscyB3aXRoIHNtYXJ0IHBvc2l0aW9uaW5nIHRvIGF2b2lkIG92ZXJsYXBcbiAgICBsYWJlbEdyb3VwLnNlbGVjdEFsbCgndGV4dC5hcmMtbGFiZWwnKVxuICAgICAgLmRhdGEoYWxsQXJjcylcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAgIC5hdHRyKCdjbGFzcycsICdhcmMtbGFiZWwnKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGQgPT4ge1xuICAgICAgICBjb25zdCBhbmdsZSA9IChkLnN0YXJ0QW5nbGUgKyBkLmVuZEFuZ2xlKSAvIDIgLSBNYXRoLlBJIC8gMjtcbiAgICAgICAgY29uc3QgeCA9IGxhYmVsUmFkaXVzICogTWF0aC5jb3MoYW5nbGUpO1xuICAgICAgICBjb25zdCB5ID0gbGFiZWxSYWRpdXMgKiBNYXRoLnNpbihhbmdsZSk7XG4gICAgICAgIGNvbnN0IHJvdGF0aW9uID0gYW5nbGUgKiAxODAgLyBNYXRoLlBJO1xuICAgICAgICBcbiAgICAgICAgLy8gUm90YXRlIHRleHQgZm9yIGJldHRlciByZWFkYWJpbGl0eVxuICAgICAgICBpZiAoYW5nbGUgPiBNYXRoLlBJIC8gMiB8fCBhbmdsZSA8IC1NYXRoLlBJIC8gMikge1xuICAgICAgICAgIHJldHVybiBgdHJhbnNsYXRlKCR7eH0sICR7eX0pIHJvdGF0ZSgke3JvdGF0aW9uICsgMTgwfSlgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBgdHJhbnNsYXRlKCR7eH0sICR7eX0pIHJvdGF0ZSgke3JvdGF0aW9ufSlgO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgZCA9PiB7XG4gICAgICAgIGNvbnN0IGFuZ2xlID0gKGQuc3RhcnRBbmdsZSArIGQuZW5kQW5nbGUpIC8gMiAtIE1hdGguUEkgLyAyO1xuICAgICAgICBpZiAoYW5nbGUgPiBNYXRoLlBJIC8gMiB8fCBhbmdsZSA8IC1NYXRoLlBJIC8gMikge1xuICAgICAgICAgIHJldHVybiAnZW5kJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJ3N0YXJ0JztcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5hdHRyKCdhbGlnbm1lbnQtYmFzZWxpbmUnLCAnbWlkZGxlJylcbiAgICAgIC5zdHlsZSgnZm9udC1mYW1pbHknLCBsYWJlbEZvbnRGYW1pbHkpXG4gICAgICAuc3R5bGUoJ2ZvbnQtd2VpZ2h0JywgbGFiZWxGb250V2VpZ2h0KVxuICAgICAgICAgICAgIC5zdHlsZSgnZm9udC1zaXplJywgZCA9PiB7XG4gICAgICAgICAvLyBEeW5hbWljIGZvbnQgc2l6ZSBiYXNlZCBvbiBudW1iZXIgb2YgbGFiZWxzIC0gbGFyZ2VyIHNpbmNlIHdlJ3JlIHNob3dpbmcgZnVsbCB0ZXh0XG4gICAgICAgICBjb25zdCB0b3RhbExhYmVscyA9IGFsbEFyY3MubGVuZ3RoO1xuICAgICAgICAgaWYgKHRvdGFsTGFiZWxzID4gMTIpIHJldHVybiAnMTNweCc7XG4gICAgICAgICBpZiAodG90YWxMYWJlbHMgPiAxMCkgcmV0dXJuICcxNHB4JztcbiAgICAgICAgIGlmICh0b3RhbExhYmVscyA+IDgpIHJldHVybiAnMTVweCc7XG4gICAgICAgICByZXR1cm4gYCR7TWF0aC5tYXgoMTYsIGxhYmVsRm9udFNpemUpfXB4YDtcbiAgICAgICB9KVxuICAgICAgIC5zdHlsZSgnZmlsbCcsIGxhYmVsQ29sb3IpXG4gICAgICAgLnN0eWxlKCd0ZXh0LXRyYW5zZm9ybScsICd1cHBlcmNhc2UnKVxuICAgICAgIC50ZXh0KGQgPT4ge1xuICAgICAgICAgY29uc3QgdGV4dCA9IChkLm5hbWUgfHwgJ1Vua25vd24nKS50b1N0cmluZygpLnJlcGxhY2UoL18vZywgJyAnKTtcbiAgICAgICAgIC8vIFNob3cgZnVsbCB0ZXh0IC0gbm8gdHJ1bmNhdGlvblxuICAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgICAgfSlcbiAgICAgICAub24oJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudCwgZCkge1xuICAgICAgICAgcGF1c2VBbmltYXRpb24oJ2xhYmVsIGhvdmVyJyk7XG4gICAgICAgICBjb25zdCBmdWxsVGV4dCA9IChkLm5hbWUgfHwgJ1Vua25vd24nKS50b1N0cmluZygpLnJlcGxhY2UoL18vZywgJyAnKTtcbiAgICAgICAgIHNldFRvb2x0aXAoe1xuICAgICAgICAgICB4OiBldmVudC5wYWdlWCxcbiAgICAgICAgICAgeTogZXZlbnQucGFnZVksXG4gICAgICAgICAgIGNvbnRlbnQ6IChcbiAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcsIG1hcmdpbkJvdHRvbTogNCB9fT57ZnVsbFRleHR9PC9kaXY+XG4gICAgICAgICAgICAgICA8ZGl2PkNvdW50OiB7ZC52YWx1ZX08L2Rpdj5cbiAgICAgICAgICAgICAgIDxkaXY+U2lkZToge2Quc2lkZX08L2Rpdj5cbiAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgKVxuICAgICAgICAgfSk7XG4gICAgICAgfSlcbiAgICAgICAub24oJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICAgICByZXN1bWVBbmltYXRpb24oJ2xhYmVsIGhvdmVyIGVuZCcpO1xuICAgICAgICAgc2V0VG9vbHRpcChudWxsKTtcbiAgICAgICB9KTtcblxuICAgIC8vIFVwZGF0ZSBpbnNpZ2h0c1xuICAgIGNvbnN0IHRvdGFsQ29ubmVjdGlvbnMgPSBjb25uZWN0aW9ucy5yZWR1Y2UoKHN1bSwgZCkgPT4gc3VtICsgZC52YWx1ZSwgMCk7XG4gICAgY29uc3Qgc3Ryb25nZXN0Q29ubmVjdGlvbiA9IGNvbm5lY3Rpb25zLmxlbmd0aCA+IDAgXG4gICAgICA/IGNvbm5lY3Rpb25zLnJlZHVjZSgobWF4LCBkKSA9PiBkLnZhbHVlID4gbWF4LnZhbHVlID8gZCA6IG1heCwgY29ubmVjdGlvbnNbMF0pXG4gICAgICA6IG51bGw7XG4gICAgc2V0SW5zaWdodHMoW1xuICAgICAgeyB0aXRsZTogJ1RvdGFsIFJlc3BvbnNlcycsIHZhbHVlOiBmaWx0ZXJlZERhdGEubGVuZ3RoLnRvU3RyaW5nKCkgfSxcbiAgICAgIHsgdGl0bGU6ICdDdXJyZW50IFZpZXcnLCB2YWx1ZTogYCR7Y3VycmVudFNvdXJjZX0g4oaUICR7Y3VycmVudFRhcmdldH1gIH0sXG4gICAgICBzdHJvbmdlc3RDb25uZWN0aW9uXG4gICAgICAgID8geyBcbiAgICAgICAgICAgIHRpdGxlOiAnU3Ryb25nZXN0IENvbm5lY3Rpb24nLCBcbiAgICAgICAgICAgIHZhbHVlOiBgJHtzdHJvbmdlc3RDb25uZWN0aW9uLmxlZnQubmFtZSB8fCAnVW5rbm93bid9IOKGlCAke3N0cm9uZ2VzdENvbm5lY3Rpb24ucmlnaHQubmFtZSB8fCAnVW5rbm93bid9YCwgXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogYCR7c3Ryb25nZXN0Q29ubmVjdGlvbi52YWx1ZX0gY29ubmVjdGlvbnNgIFxuICAgICAgICAgIH1cbiAgICAgICAgOiB7IHRpdGxlOiAnU3Ryb25nZXN0IENvbm5lY3Rpb24nLCB2YWx1ZTogJ05vIGNvbm5lY3Rpb25zIGZvdW5kJywgZGVzY3JpcHRpb246ICcnIH0sXG4gICAgICB7IHRpdGxlOiAnVG90YWwgQ29ubmVjdGlvbnMnLCB2YWx1ZTogdG90YWxDb25uZWN0aW9ucy50b1N0cmluZygpIH0sXG4gICAgXSk7XG5cbiAgfSwgW2RhdGEsIGN1cnJlbnRTb3VyY2UsIGN1cnJlbnRUYXJnZXQsIHNldHRpbmdzLnVzZVRlc3REYXRhLCBzZXR0aW5ncy5jYXRlZ29yeUNvbG9ycywgaXNMb2FkaW5nLCBsYXN0Q2F0ZWdvcnlDaGFuZ2UsIGlzQ29udGFpbmVyVG9vU21hbGwsIGNoYXJ0V2lkdGgsIGNoYXJ0SGVpZ2h0LCBzaG93U2Vjb25kYXJ5Q2hvcmQsIHNldHRpbmdzLmlzRGFya01vZGVdKTtcblxuICAvLyBSZW5kZXIgc2Vjb25kYXJ5IGNob3JkIHdoZW4gcGVhayBwZXJmb3JtYW5jZSBpcyBpbnZvbHZlZFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzaG93U2Vjb25kYXJ5Q2hvcmQpIHtcbiAgICAgIHJlbmRlclNlY29uZGFyeUNob3JkKCk7XG4gICAgfVxuICB9LCBbc2hvd1NlY29uZGFyeUNob3JkLCBkYXRhLCBzZXR0aW5ncy51c2VUZXN0RGF0YSwgc2V0dGluZ3MuaXNEYXJrTW9kZSwgbGFiZWxDb2xvcl0pO1xuXG4gIC8vIFRvb2x0aXAgcmVuZGVyaW5nXG4gIGNvbnN0IHRvb2x0aXBFbCA9IHRvb2x0aXAgPyAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIGxlZnQ6IHRvb2x0aXAueCArIDE2LFxuICAgICAgICB0b3A6IHRvb2x0aXAueSArIDE2LFxuICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgyMCwyMCwzMCwwLjk4KScsXG4gICAgICAgIGNvbG9yOiAnI2ZmZicsXG4gICAgICAgIHBhZGRpbmc6ICcxMHB4IDE2cHgnLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDgsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgekluZGV4OiAxMDAsXG4gICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgc2Fucy1zZXJpZicsXG4gICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICBib3hTaGFkb3c6ICcwIDRweCAyNHB4IDAgcmdiYSgxNiwgMTYsIDIzNSwgMC4xMiknLFxuICAgICAgICBtYXhXaWR0aDogMzIwLFxuICAgICAgfX1cbiAgICAgIHJvbGU9XCJ0b29sdGlwXCJcbiAgICAgIGFyaWEtbGl2ZT1cInBvbGl0ZVwiXG4gICAgPlxuICAgICAge3Rvb2x0aXAuY29udGVudH1cbiAgICA8L2Rpdj5cbiAgKSA6IG51bGw7XG5cbiAgLy8gQXBwbHkgdGhlbWUgYmFzZWQgb24gZ2xvYmFsIHNldHRpbmdzXG4gIGNvbnN0IHRoZW1lQ2xhc3MgPSBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJ2RhcmsnIDogJyc7XG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAnIzFhMWExYScgOiAnI2ZmZmZmZic7XG4gIGNvbnN0IHRleHRDb2xvciA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAnI2ZmZmZmZicgOiAnIzBBMEEwRic7XG5cbiAgLy8gSGFuZGxlIGNhc2Ugd2hlcmUgY29udGFpbmVyIGlzIHRvbyBzbWFsbFxuICBpZiAoaXNDb250YWluZXJUb29TbWFsbCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHctZnVsbCBoLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgJHt0aGVtZUNsYXNzfWB9IHN0eWxlPXt7IGJhY2tncm91bmRDb2xvciB9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiIHN0eWxlPXt7IGNvbG9yOiB0ZXh0Q29sb3IgfX0+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1sZyBtYi0yXCI+Q29udGFpbmVyIHRvbyBzbWFsbDwvcD5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIG9wYWNpdHktNzBcIj5NaW5pbXVtIHNpemU6IDEwMHgxMDBweDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YHctZnVsbCBoLWZ1bGwgZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgJHt0aGVtZUNsYXNzfWB9IHN0eWxlPXt7IGJhY2tncm91bmRDb2xvciB9fT5cbiAgICAgIDxHbG9iYWxDb250cm9sc05hdiAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LWZ1bGwgaC1mdWxsIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIG1iLTRcIj5cbiAgICAgICAgICA8UXVlc3Rpb25TZWxlY3RvclxuICAgICAgICAgICAgYXZhaWxhYmxlRmllbGRzPXthdmFpbGFibGVGaWVsZHN9XG4gICAgICAgICAgICBjdXJyZW50U291cmNlPXtjdXJyZW50U291cmNlfVxuICAgICAgICAgICAgY3VycmVudFRhcmdldD17Y3VycmVudFRhcmdldH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoc291cmNlLCB0YXJnZXQpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgY29ycmVjdGVkID0gZW5zdXJlRGlmZmVyZW50Q2F0ZWdvcmllcyhzb3VyY2UsIHRhcmdldCk7XG4gICAgICAgICAgICAgIHNldEN1cnJlbnRTb3VyY2UoY29ycmVjdGVkLnNvdXJjZSk7XG4gICAgICAgICAgICAgIHNldEN1cnJlbnRUYXJnZXQoY29ycmVjdGVkLnRhcmdldCk7XG4gICAgICAgICAgICAgIHNldExhc3RDYXRlZ29yeUNoYW5nZShjb3JyZWN0ZWQpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBcbiAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgcmVsYXRpdmVcIlxuICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogaGVpZ2h0ICogMC44NSB9fSAvLyBVc2UgODUlIG9mIGF2YWlsYWJsZSBoZWlnaHQgZm9yIHRoZSBjaGFydCB0byBhY2NvdW50IGZvciBsYWJlbHNcbiAgICAgICAgPlxuICAgICAgICAgIHtzaG93U2Vjb25kYXJ5Q2hvcmQgPyAoXG4gICAgICAgICAgICAvLyBUd28tY2hvcmQgbGF5b3V0IHdoZW4gcGVhayBwZXJmb3JtYW5jZSBpcyBpbnZvbHZlZFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LWZ1bGwgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgZ2FwLTE2XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LWJvbGQgbWItNFwiIHN0eWxlPXt7IGNvbG9yOiB0ZXh0Q29sb3IgfX0+XG4gICAgICAgICAgICAgICAgICBNYWluIFJlbGF0aW9uc2hpcHNcbiAgICAgICAgICAgICAgICA8L2gzPlxuICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgIHJlZj17c3ZnUmVmfVxuICAgICAgICAgICAgICAgICAgd2lkdGg9e3dpZHRoICogMC40NX1cbiAgICAgICAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0ICogMC44fVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgZGlzcGxheTogJ2Jsb2NrJywgYmFja2dyb3VuZDogJ3RyYW5zcGFyZW50JywgY29sb3I6IHRleHRDb2xvciB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1ib2xkIG1iLTRcIiBzdHlsZT17eyBjb2xvcjogdGV4dENvbG9yIH19PlxuICAgICAgICAgICAgICAgICAgWWVhcnMgw5cgUGVyZm9ybWFuY2UgVHlwZXNcbiAgICAgICAgICAgICAgICA8L2gzPlxuICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgIHJlZj17c2Vjb25kYXJ5U3ZnUmVmfVxuICAgICAgICAgICAgICAgICAgd2lkdGg9e3dpZHRoICogMC40NX1cbiAgICAgICAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0ICogMC44fVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgZGlzcGxheTogJ2Jsb2NrJywgYmFja2dyb3VuZDogJ3RyYW5zcGFyZW50JywgY29sb3I6IHRleHRDb2xvciB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIC8vIFNpbmdsZSBjaG9yZCBsYXlvdXQgd2hlbiBwZWFrIHBlcmZvcm1hbmNlIGlzIG5vdCBpbnZvbHZlZFxuICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICByZWY9e3N2Z1JlZn1cbiAgICAgICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgICAgICBoZWlnaHQ9e2hlaWdodCAqIDAuODV9XG4gICAgICAgICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6ICdibG9jaycsIG1hcmdpbjogJzAgYXV0bycsIGJhY2tncm91bmQ6ICd0cmFuc3BhcmVudCcsIGNvbG9yOiB0ZXh0Q29sb3IgfX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7dG9vbHRpcEVsfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImQzIiwidXNlVmlzdWFsaXphdGlvbkRhdGEiLCJRdWVzdGlvblNlbGVjdG9yIiwicHJvY2Vzc0Nob3JkRGF0YSIsImN5Y2xpbmdNb2RlcyIsInVzZUFwcENvbnRleHQiLCJHbG9iYWxDb250cm9sc05hdiIsImdldFllYXJzQ2F0ZWdvcnkiLCJnZXROb2RlQ29sb3IiLCJub2RlTmFtZSIsImNhdGVnb3J5IiwiZ2xvYmFsQ29sb3JzIiwiaXNEYXJrTW9kZSIsInRoZW1lQ29sb3JzIiwiZGFyayIsImxpZ2h0IiwieWVhcnNfYXRfbWVkdHJvbmljIiwibGVhcm5pbmdfc3R5bGUiLCJwZWFrX3BlcmZvcm1hbmNlIiwibW90aXZhdGlvbiIsInNoYXBlZF9ieSIsIkNob3JkRGlhZ3JhbSIsIndpZHRoIiwiaGVpZ2h0IiwiYXV0b1BsYXkiLCJvblJlbGF0aW9uc2hpcENoYW5nZSIsImVuYWJsZVJvdGF0aW9uIiwic2hvd0FsbENvbm5lY3Rpb25zIiwic3ZnUmVmIiwic2Vjb25kYXJ5U3ZnUmVmIiwiZGF0YSIsImlzTG9hZGluZyIsImVycm9yIiwiY3VycmVudFNvdXJjZSIsInNldEN1cnJlbnRTb3VyY2UiLCJzb3VyY2UiLCJjdXJyZW50VGFyZ2V0Iiwic2V0Q3VycmVudFRhcmdldCIsInRhcmdldCIsImluc2lnaHRzIiwic2V0SW5zaWdodHMiLCJ0b29sdGlwIiwic2V0VG9vbHRpcCIsInNldHRpbmdzIiwibGFzdENhdGVnb3J5Q2hhbmdlIiwic2V0TGFzdENhdGVnb3J5Q2hhbmdlIiwic2hvd1NlY29uZGFyeUNob3JkIiwic2V0U2hvd1NlY29uZGFyeUNob3JkIiwiYW5pbWF0aW9uUGhhc2UiLCJzZXRBbmltYXRpb25QaGFzZSIsImhpZ2hsaWdodGVkQXJjSW5kZXgiLCJzZXRIaWdobGlnaHRlZEFyY0luZGV4IiwiaGlnaGxpZ2h0ZWRTaWRlIiwic2V0SGlnaGxpZ2h0ZWRTaWRlIiwiaXNBbmltYXRpbmciLCJzZXRJc0FuaW1hdGluZyIsInNlY29uZGFyeUFuaW1hdGlvblBoYXNlIiwic2V0U2Vjb25kYXJ5QW5pbWF0aW9uUGhhc2UiLCJzZWNvbmRhcnlIaWdobGlnaHRlZEFyY0luZGV4Iiwic2V0U2Vjb25kYXJ5SGlnaGxpZ2h0ZWRBcmNJbmRleCIsInNlY29uZGFyeUhpZ2hsaWdodGVkU2lkZSIsInNldFNlY29uZGFyeUhpZ2hsaWdodGVkU2lkZSIsImFuaW1hdGlvblJlZiIsInRpbWVyIiwicnVubmluZyIsImN1cnJlbnRJbmRleCIsImN1cnJlbnRTaWRlIiwiaXNQYXVzZWQiLCJjeWNsZUNvdW50Iiwic2Vjb25kYXJ5QW5pbWF0aW9uUmVmIiwiYXZhaWxhYmxlRmllbGRzIiwidmFsdWUiLCJsYWJlbCIsImxhYmVsRm9udFNpemUiLCJsYWJlbEZvbnRXZWlnaHQiLCJsYWJlbENvbG9yIiwibGFiZWxGb250RmFtaWx5IiwiaXNQZWFrUGVyZm9ybWFuY2VJbnZvbHZlZCIsInJlbmRlclNlY29uZGFyeUNob3JkIiwiY3VycmVudCIsImxlbmd0aCIsInN2ZyIsInNlbGVjdCIsInNlbGVjdEFsbCIsInJlbW92ZSIsImZpbHRlcmVkRGF0YSIsInVzZVRlc3REYXRhIiwiZmlsdGVyIiwiaXRlbSIsInRlc3RfZGF0YSIsInNlY29uZGFyeURhdGEiLCJkIiwic2Vjb25kYXJ5V2lkdGgiLCJzZWNvbmRhcnlIZWlnaHQiLCJzZWNvbmRhcnlNYXJnaW4iLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJzZWNvbmRhcnlDaGFydFdpZHRoIiwic2Vjb25kYXJ5Q2hhcnRIZWlnaHQiLCJzZWNvbmRhcnlSYWRpdXMiLCJNYXRoIiwibWF4IiwibWluIiwieWVhcnNDYXRlZ29yaWVzIiwicGVha1BlcmZDYXRlZ29yaWVzIiwiQXJyYXkiLCJmcm9tIiwiU2V0IiwibWFwIiwiQm9vbGVhbiIsInNvcnQiLCJhbGxDYXRlZ29yaWVzIiwibWF0cml4Iiwic291cmNlQ2F0ZWdvcnkiLCJzb3VyY2VJbmRleCIsInRhcmdldENhdGVnb3J5IiwidGFyZ2V0SW5kZXgiLCJzb3VyY2VJc1llYXJzIiwidGFyZ2V0SXNZZWFycyIsInllYXJzQ2F0IiwicGVyZkNhdCIsInllYXJzIiwicGVyZiIsImNob3JkTGF5b3V0IiwiY2hvcmQiLCJwYWRBbmdsZSIsImNob3JkRGF0YSIsImciLCJhcHBlbmQiLCJhdHRyIiwiYXJjIiwiaW5uZXJSYWRpdXMiLCJvdXRlclJhZGl1cyIsInJpYmJvbiIsInJhZGl1cyIsInllYXJzQ29sb3JzIiwicGVyZkNvbG9ycyIsImNvbG9ycyIsInNsaWNlIiwiZ3JvdXBTZWxlY3Rpb24iLCJncm91cHMiLCJlbnRlciIsInN0eWxlIiwiaSIsIm9uIiwiZXZlbnQiLCJwYXVzZUFuaW1hdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJncm91cEluZGV4IiwiaW5kZXgiLCJ4IiwicGFnZVgiLCJ5IiwicGFnZVkiLCJjb250ZW50IiwiZGl2IiwiZm9udFdlaWdodCIsIm1hcmdpbkJvdHRvbSIsInRvU3RyaW5nIiwicmVwbGFjZSIsInJlc3VtZUFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJkdXJhdGlvbiIsImlzQ29ubmVjdGVkIiwic29tZSIsImNob3JkU2VsZWN0aW9uIiwic2Vjb25kYXJ5TGFiZWxSYWRpdXMiLCJhbmdsZSIsInN0YXJ0QW5nbGUiLCJlbmRBbmdsZSIsIlBJIiwiY29zIiwic2luIiwicm90YXRpb24iLCJ0b3RhbExhYmVscyIsInRleHQiLCJmdWxsVGV4dCIsImVuc3VyZURpZmZlcmVudENhdGVnb3JpZXMiLCJkaWZmZXJlbnRPcHRpb24iLCJmaW5kIiwiZmllbGQiLCJjb3JyZWN0ZWQiLCJjdXJyZW50TW9kZUluZGV4Iiwic2V0Q3VycmVudE1vZGVJbmRleCIsIm1vZGVJbmRleCIsImZpbmRJbmRleCIsIm1vZGUiLCJpc0F1dG9QbGF5RW5hYmxlZCIsImRhdGFMZW5ndGgiLCJjbGVhclRpbWVvdXQiLCJhbmltYXRlIiwibGVmdFZhbHVlcyIsInJpZ2h0VmFsdWVzIiwiY3VycmVudFNpZGVMZW5ndGgiLCJoaWdobGlnaHRlZENhdGVnb3J5IiwiaGFzRGF0YSIsInNvdXJjZVNpZGUiLCJ0b3RhbENhdGVnb3JpZXMiLCJzdGVwRHVyYXRpb24iLCJhdXRvUGxheVNwZWVkIiwicGF1c2VEdXJhdGlvbiIsInNldFRpbWVvdXQiLCJuZXh0TW9kZUluZGV4IiwiYW5pbWF0ZVNlY29uZGFyeSIsInNpZGUiLCJhY3R1YWxBcmNJbmRleCIsInJlYXNvbiIsIm1hcmdpbiIsImNoYXJ0V2lkdGgiLCJjaGFydEhlaWdodCIsImlzQ29udGFpbmVyVG9vU21hbGwiLCJlZmZlY3RpdmVXaWR0aCIsImVmZmVjdGl2ZUhlaWdodCIsImVmZmVjdGl2ZUNoYXJ0V2lkdGgiLCJlZmZlY3RpdmVDaGFydEhlaWdodCIsImRlZnMiLCJZRUFSU19HUk9VUFMiLCJzb3VyY2VDYXRlZ29yaWVzIiwidGFyZ2V0Q2F0ZWdvcmllcyIsImZvckVhY2giLCJhZGQiLCJzb3VyY2VBcnJheSIsInRhcmdldEFycmF5IiwibGVmdFRvdGFscyIsImNhdCIsInJpZ2h0VG90YWxzIiwibGVmdFRvdGFsU3VtIiwicmVkdWNlIiwic3VtIiwidmFsIiwicmlnaHRUb3RhbFN1bSIsImNvbm5lY3Rpb25NYXRyaXgiLCJzb3VyY2VDYXQiLCJ0YXJnZXRDYXQiLCJpc0NhdGVnb3J5Q2hhbmdlIiwiZWFzZSIsImVhc2VDdWJpY0luT3V0IiwiYXJjR2FwIiwibGVmdFN0YXJ0IiwibGVmdEVuZCIsInJpZ2h0U3RhcnQiLCJyaWdodEVuZCIsImxlZnRBcmNTcGFuIiwicmlnaHRBcmNTcGFuIiwibWluQXJjU3BhY2luZyIsImxlZnRBbmdsZSIsImxlZnRBcmNzIiwiY291bnQiLCJhdmFpbGFibGVTcGFuIiwiYXJjU3BhbiIsImNvbG9yIiwiY2F0ZWdvcnlDb2xvcnMiLCJvcGFjaXR5IiwibmFtZSIsInJpZ2h0QW5nbGUiLCJyaWdodEFyY3MiLCJhcmNHZW4iLCJjb3JuZXJSYWRpdXMiLCJiYXNlQ29sb3IiLCJsaWdodGVyQ29sb3IiLCJicmlnaHRlciIsIm9mZnNldCIsImxlZnRBcmNTZWxlY3Rpb24iLCJhcmNJbmRleCIsIm1hdHJpeFZhbHVlIiwiaXNDb25uZWN0ZWRUb0hpZ2hsaWdodGVkUmlnaHQiLCJyaWdodEFyY1NlbGVjdGlvbiIsImFyY05hbWUiLCJpc0Nvbm5lY3RlZFRvSGlnaGxpZ2h0ZWRMZWZ0IiwicmliYm9uUmFkaXVzIiwicmliYm9uR2VuIiwiY29ubmVjdGlvbnMiLCJqIiwibGVmdFNlZyIsInJpZ2h0U2VnIiwibGVmdE1pZEFuZ2xlIiwicmlnaHRNaWRBbmdsZSIsImxlZnRYIiwibGVmdFkiLCJyaWdodFgiLCJyaWdodFkiLCJsZWZ0Q29sb3IiLCJzY2hlbWVDYXRlZ29yeTEwIiwicmlnaHRDb2xvciIsInB1c2giLCJncmFkaWVudElkIiwicmliYm9uU2VsZWN0aW9uIiwicGF0aCIsImxlZnRBcmNOYW1lIiwicmlnaHRBcmNOYW1lIiwibGFiZWxSYWRpdXMiLCJsYWJlbEdyb3VwIiwiYWxsQXJjcyIsInRvdGFsQ29ubmVjdGlvbnMiLCJzdHJvbmdlc3RDb25uZWN0aW9uIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInRvb2x0aXBFbCIsInBvc2l0aW9uIiwiYmFja2dyb3VuZCIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJwb2ludGVyRXZlbnRzIiwiekluZGV4IiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiYm94U2hhZG93IiwibWF4V2lkdGgiLCJyb2xlIiwiYXJpYS1saXZlIiwidGhlbWVDbGFzcyIsImJhY2tncm91bmRDb2xvciIsInRleHRDb2xvciIsImNsYXNzTmFtZSIsInAiLCJvbkNoYW5nZSIsImgzIiwicmVmIiwiZGlzcGxheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/ChordDiagram.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/index.tsx":
/*!****************************************************!*\
  !*** ./src/components/DataVisualization/index.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataVisualization: () => (/* binding */ DataVisualization)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlluvialDiagram__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AlluvialDiagram */ \"(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx\");\n/* harmony import */ var _ChordDiagram__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChordDiagram */ \"(ssr)/./src/components/DataVisualization/ChordDiagram.tsx\");\n/* harmony import */ var _shared_EnhancedVisualizationHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/EnhancedVisualizationHeader */ \"(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ DataVisualization auto */ \n\n\n\n\n\nfunction DataVisualization() {\n    const { settings, toggleAutoPlay } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_5__.useAppContext)();\n    const [visualizationType, setVisualizationType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"alluvial\");\n    const [containerSize, setContainerSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 1920,\n        height: 1080\n    });\n    // Only log when settings change\n    const prevAutoPlay = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(settings.isAutoPlayEnabled);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (prevAutoPlay.current !== settings.isAutoPlayEnabled) {\n            console.log(\"\\uD83C\\uDFA8 Animation setting changed:\", {\n                isAutoPlayEnabled: settings.isAutoPlayEnabled,\n                autoPlaySpeed: settings.autoPlaySpeed,\n                visualizationType\n            });\n            prevAutoPlay.current = settings.isAutoPlayEnabled;\n        }\n    }, [\n        settings.isAutoPlayEnabled,\n        settings.autoPlaySpeed,\n        visualizationType\n    ]);\n    // Calculate container size based on viewport\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateSize = ()=>{\n            const viewportWidth = window.innerWidth;\n            const viewportHeight = window.innerHeight;\n            // Calculate 16:9 aspect ratio\n            const aspectRatio = 16 / 9;\n            let width, height;\n            if (viewportWidth / viewportHeight > aspectRatio) {\n                // Viewport is wider than 16:9, fit to height\n                height = viewportHeight;\n                width = height * aspectRatio;\n            } else {\n                // Viewport is taller than 16:9, fit to width\n                width = viewportWidth;\n                height = width / aspectRatio;\n            }\n            setContainerSize({\n                width,\n                height\n            });\n        };\n        updateSize();\n        window.addEventListener(\"resize\", updateSize);\n        return ()=>window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    // Calculate visualization size (subtract header height and add bottom padding)\n    const headerHeight = 80; // further reduced header height\n    const bottomPadding = 24; // reduced bottom padding\n    const visualizationHeight = (containerSize.height - headerHeight - bottomPadding) * 0.8; // Scale down to 80%\n    const visualizationWidth = containerSize.width * 0.9; // Scale down to 90%\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute top-0 left-0 w-screen h-screen flex flex-col bg-white overflow-hidden\",\n        style: {\n            aspectRatio: \"16/9\",\n            background: settings.isDarkMode ? \"#0A0A0F\" : \"white\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_EnhancedVisualizationHeader__WEBPACK_IMPORTED_MODULE_4__.EnhancedVisualizationHeader, {\n                visualizationType: visualizationType,\n                onVisualizationTypeChange: setVisualizationType,\n                isAutoPlay: settings.isAutoPlayEnabled,\n                onAutoPlayToggle: toggleAutoPlay\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                lineNumber: 72,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 w-full h-full flex flex-col pb-4\",\n                style: {\n                    minHeight: 0\n                },\n                children: [\n                    visualizationType === \"alluvial\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlluvialDiagram__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        width: visualizationWidth,\n                        height: visualizationHeight,\n                        autoPlay: settings.isAutoPlayEnabled\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                        lineNumber: 85,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChordDiagram__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        width: visualizationWidth,\n                        height: visualizationHeight,\n                        autoPlay: settings.isAutoPlayEnabled,\n                        enableRotation: true\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                        lineNumber: 91,\n                        columnNumber: 11\n                    }, this),\n                     false && /*#__PURE__*/ 0\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                lineNumber: 80,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n        lineNumber: 64,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/index.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx":
/*!*********************************************************************************!*\
  !*** ./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedVisualizationHeader: () => (/* binding */ EnhancedVisualizationHeader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Pause,Play!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/pause.js\");\n/* harmony import */ var _barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Pause,Play!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/play.js\");\n/* harmony import */ var _useApprovedQuotes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useApprovedQuotes */ \"(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts\");\n/* __next_internal_client_entry_do_not_use__ EnhancedVisualizationHeader auto */ \n\n\n\nfunction EnhancedVisualizationHeader({ visualizationType, onVisualizationTypeChange, isAutoPlay, onAutoPlayToggle }) {\n    const { currentQuote, isLoading, hasQuotes } = (0,_useApprovedQuotes__WEBPACK_IMPORTED_MODULE_2__.useApprovedQuotes)();\n    // Font size logic - simplified to prevent strobing\n    const quoteTextRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Helper to get author name or 'Anonymous'\n    const getAuthor = (author)=>{\n        if (!author || author.trim().toLowerCase() === \"anonymous\") return \"Anonymous\";\n        return author;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        className: \"w-full flex flex-row items-center justify-between py-6 px-8\",\n        style: {\n            minHeight: 120,\n            background: \"#170F5F\",\n            alignItems: \"center\",\n            display: \"flex\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 flex flex-row items-center justify-start\",\n                style: {\n                    minWidth: 220\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: \"/branding/art-logo-all/art-logo-w/art-logo-en-rgb-w.png\",\n                        alt: \"Medtronic Logo\",\n                        style: {\n                            height: 90,\n                            width: \"auto\",\n                            marginRight: 16\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-white font-bold whitespace-nowrap\",\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"1.35rem\",\n                            letterSpacing: 0.5,\n                            textAlign: \"left\",\n                            lineHeight: 1.1,\n                            marginTop: 0\n                        },\n                        children: \"WE Summit Insights\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-center justify-center text-center px-4\",\n                children: isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-lg\",\n                    children: \"Loading quotes...\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 11\n                }, this) : hasQuotes && currentQuote ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-2 w-full flex flex-col items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white font-bold italic px-6 rounded-lg border border-white/30 bg-white/5 backdrop-blur-sm shadow-lg mx-auto\",\n                            style: {\n                                fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                                fontSize: \"clamp(0.7rem, 1.8vw, 1.2rem)\",\n                                lineHeight: \"1.3\",\n                                wordBreak: \"break-word\",\n                                whiteSpace: \"pre-line\",\n                                minHeight: 0,\n                                height: 80,\n                                maxHeight: 80,\n                                maxWidth: 700,\n                                width: \"100%\",\n                                boxSizing: \"border-box\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexWrap: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        fontSize: \"1.4rem\",\n                                        fontWeight: 900,\n                                        marginRight: 6,\n                                        verticalAlign: \"top\"\n                                    },\n                                    children: \"“\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 91,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    ref: quoteTextRef,\n                                    style: {\n                                        flex: 1,\n                                        overflow: \"hidden\",\n                                        textOverflow: \"ellipsis\",\n                                        display: \"-webkit-box\",\n                                        WebkitLineClamp: 4,\n                                        WebkitBoxOrient: \"vertical\",\n                                        lineClamp: 4,\n                                        maxHeight: \"100%\"\n                                    },\n                                    children: currentQuote.text\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 92,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        fontSize: \"1.4rem\",\n                                        fontWeight: 900,\n                                        marginLeft: 6,\n                                        verticalAlign: \"bottom\"\n                                    },\n                                    children: \"”\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 107,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white text-sm font-medium\",\n                            style: {\n                                fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                                opacity: 0.9,\n                                marginTop: \"4px\"\n                            },\n                            children: [\n                                \"— \",\n                                getAuthor(currentQuote.author)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 110,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 68,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-lg opacity-80 px-6 py-4 rounded-lg border border-white/20 bg-white/5\",\n                    style: {\n                        fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif'\n                    },\n                    children: '\"Share your unique qualities and they may appear here\"'\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 122,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 flex flex-col items-center justify-center\",\n                style: {\n                    minWidth: 90,\n                    height: 100,\n                    justifyContent: \"center\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>onVisualizationTypeChange(\"alluvial\"),\n                        className: `w-20 h-10 mb-2 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white ${visualizationType === \"alluvial\" ? \"ring-2 ring-blue-400\" : \"\"}`,\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        children: \"Alluvial\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 135,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>onVisualizationTypeChange(\"chord\"),\n                        className: `w-20 h-10 mb-2 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white ${visualizationType === \"chord\" ? \"ring-2 ring-blue-400\" : \"\"}`,\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        children: \"Chord\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 146,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: onAutoPlayToggle,\n                        className: \"w-20 h-10 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white\",\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        title: isAutoPlay ? \"Switch to interactive mode\" : \"Switch to auto-play mode\",\n                        children: isAutoPlay ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"flex items-center justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    className: \"h-4 w-4 mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 168,\n                                    columnNumber: 64\n                                }, this),\n                                \"Pause\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 168,\n                            columnNumber: 13\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"flex items-center justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"h-4 w-4 mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 170,\n                                    columnNumber: 64\n                                }, this),\n                                \"Play\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 170,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 157,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 134,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n        lineNumber: 32,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/DataVisualization/shared/QuestionSelector.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuestionSelector: () => (/* binding */ QuestionSelector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n\n\n\nconst getSelectStyle = (isDarkMode)=>({\n        minWidth: 320,\n        fontSize: \"1.5rem\",\n        lineHeight: 1.1,\n        appearance: \"none\",\n        WebkitAppearance: \"none\",\n        MozAppearance: \"none\",\n        background: \"none\",\n        color: isDarkMode ? \"#FFFFFF\" : \"#170F5F\",\n        border: 0,\n        borderBottom: `4px solid ${isDarkMode ? \"#FFFFFF\" : \"#170F5F\"}`,\n        fontWeight: 700,\n        paddingRight: 48,\n        paddingLeft: 0,\n        paddingTop: 8,\n        paddingBottom: 8,\n        outline: \"none\",\n        transition: \"border-color 0.2s, color 0.2s\"\n    });\nfunction QuestionSelector({ availableFields, currentSource, currentTarget, onChange }) {\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_2__.useAppContext)();\n    const selectStyle = getSelectStyle(settings.isDarkMode);\n    const chevronColor = settings.isDarkMode ? \"#FFFFFF\" : \"#170F5F\";\n    const focusColor = settings.isDarkMode ? \"#60A5FA\" : \"#1010EB\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full flex flex-row justify-between items-end gap-8\",\n        style: {\n            maxWidth: \"1600px\",\n            margin: \"0 auto\",\n            padding: \"0 48px\",\n            position: \"relative\",\n            zIndex: 1000,\n            marginBottom: \"32px\" // Add explicit bottom margin\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-start\",\n                style: {\n                    marginLeft: 48\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                    className: \"w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-fit\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                style: selectStyle,\n                                className: \"custom-select\",\n                                value: currentSource,\n                                onChange: (e)=>onChange(e.target.value, currentTarget),\n                                children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: field.value,\n                                        disabled: field.value === currentTarget,\n                                        children: field.label\n                                    }, field.value, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"pointer-events-none absolute right-2 top-1/2 -translate-y-1/2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"32\",\n                                    height: \"32\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M7 10l5 5 5-5\",\n                                        stroke: chevronColor,\n                                        strokeWidth: \"3\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 78,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                    lineNumber: 77,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 76,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 61,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center\",\n                style: {\n                    minWidth: 80,\n                    height: 60\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"60\",\n                    height: \"20\",\n                    viewBox: \"0 0 60 20\",\n                    fill: \"none\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M5 10 L50 10 M45 5 L50 10 L45 15\",\n                        stroke: chevronColor,\n                        strokeWidth: \"3\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 87,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-end\",\n                style: {\n                    marginRight: 48\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                    className: \"w-full flex justify-end\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-fit\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                style: selectStyle,\n                                className: \"custom-select\",\n                                value: currentTarget,\n                                onChange: (e)=>onChange(currentSource, e.target.value),\n                                children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: field.value,\n                                        disabled: field.value === currentSource,\n                                        children: field.label\n                                    }, field.value, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 103,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 96,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"pointer-events-none absolute right-2 top-1/2 -translate-y-1/2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"32\",\n                                    height: \"32\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M7 10l5 5 5-5\",\n                                        stroke: chevronColor,\n                                        strokeWidth: \"3\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 111,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                    lineNumber: 110,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 109,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 95,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 94,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 93,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: `\n        .custom-select::-ms-expand { display: none; }\n        .custom-select::-webkit-appearance { appearance: none; }\n        .custom-select:focus { border-bottom-color: ${focusColor}; }\n        .custom-select option {\n          background-color: ${settings.isDarkMode ? \"#1f2937\" : \"#ffffff\"};\n          color: ${settings.isDarkMode ? \"#ffffff\" : \"#170F5F\"};\n          padding: 8px 12px;\n        }\n        .custom-select option:disabled {\n          background-color: ${settings.isDarkMode ? \"#374151\" : \"#f3f4f6\"};\n          color: ${settings.isDarkMode ? \"#9ca3af\" : \"#6b7280\"};\n        }\n      `\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 117,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/chordUtils.ts":
/*!***************************************************************!*\
  !*** ./src/components/DataVisualization/shared/chordUtils.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chordAnimations: () => (/* binding */ chordAnimations),\n/* harmony export */   chordColorScales: () => (/* binding */ chordColorScales),\n/* harmony export */   chordConfig: () => (/* binding */ chordConfig),\n/* harmony export */   cyclingModes: () => (/* binding */ cyclingModes),\n/* harmony export */   filterConnectedCategories: () => (/* binding */ filterConnectedCategories),\n/* harmony export */   getChordColor: () => (/* binding */ getChordColor),\n/* harmony export */   getYearsCategory: () => (/* binding */ getYearsCategory),\n/* harmony export */   normalizeCategory: () => (/* binding */ normalizeCategory),\n/* harmony export */   processChordData: () => (/* binding */ processChordData)\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ \"(ssr)/./node_modules/d3-interpolate/src/rgb.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/ordinal.js\");\n/* harmony import */ var d3_chord__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-chord */ \"(ssr)/./node_modules/d3-chord/src/chord.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n\n\n\n\n// Chord-specific configuration\nconst chordConfig = {\n    // Arc properties\n    arcOpacity: 0.8,\n    arcStroke: 2,\n    // Chord properties  \n    chordOpacity: 0.6,\n    chordHoverOpacity: 0.9,\n    chordMinWidth: 3,\n    // Animation\n    transitionDuration: 800,\n    rotationSpeed: 0.5,\n    // Typography\n    labelFontWeight: 700,\n    labelFontSize: \"1.25rem\",\n    // Layout\n    innerRadius: 0.6,\n    outerRadius: 0.9,\n    padding: 0.05\n};\n// Cycling modes for chord diagram\nconst cyclingModes = [\n    {\n        focus: \"years-learning\",\n        duration: 4000,\n        description: \"Experience & Learning Styles\",\n        source: \"years_at_medtronic\",\n        target: \"learning_style\"\n    },\n    {\n        focus: \"years-shaped\",\n        duration: 4000,\n        description: \"Experience & Formative Influences\",\n        source: \"years_at_medtronic\",\n        target: \"shaped_by\"\n    },\n    {\n        focus: \"years-performance\",\n        duration: 4000,\n        description: \"Experience & Peak Performance\",\n        source: \"years_at_medtronic\",\n        target: \"peak_performance\"\n    },\n    {\n        focus: \"years-motivation\",\n        duration: 4000,\n        description: \"Experience & Current Motivation\",\n        source: \"years_at_medtronic\",\n        target: \"motivation\"\n    },\n    {\n        focus: \"learning-performance\",\n        duration: 4000,\n        description: \"Learning Style & Peak Performance\",\n        source: \"learning_style\",\n        target: \"peak_performance\"\n    },\n    {\n        focus: \"motivation-shaped\",\n        duration: 4000,\n        description: \"Motivation & Shaped By\",\n        source: \"motivation\",\n        target: \"shaped_by\"\n    }\n];\n// Color scales for chord arcs (reuse from alluvial)\nconst chordColorScales = {\n    years_at_medtronic: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"0-5\",\n        \"6-10\",\n        \"11-15\",\n        \"16-20\",\n        \"20+\"\n    ]).range([\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.2),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.4),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.6),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.8),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(1)\n    ]).unknown(\"#1A1A1F\"),\n    learning_style: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"visual\",\n        \"auditory\",\n        \"kinesthetic\",\n        \"reading_writing\"\n    ]).range([\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\"\n    ]).unknown(\"#1A1A1F\"),\n    shaped_by: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"mentor\",\n        \"challenge\",\n        \"failure\",\n        \"success\",\n        \"team\",\n        \"other\"\n    ]).range([\n        \"#FF9F1C\",\n        \"#2EC4B6\",\n        \"#E71D36\",\n        \"#011627\",\n        \"#FF6B6B\",\n        \"#4ECDC4\"\n    ]).unknown(\"#1A1A1F\"),\n    peak_performance: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"Extrovert, Morning\",\n        \"Extrovert, Evening\",\n        \"Introvert, Morning\",\n        \"Introvert, Night\",\n        \"Ambivert, Morning\",\n        \"Ambivert, Night\"\n    ]).range([\n        \"#FFD166\",\n        \"#06D6A0\",\n        \"#118AB2\",\n        \"#073B4C\",\n        \"#FF6B6B\",\n        \"#4ECDC4\"\n    ]).unknown(\"#1A1A1F\"),\n    motivation: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"impact\",\n        \"growth\",\n        \"recognition\",\n        \"autonomy\",\n        \"purpose\"\n    ]).range([\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ]).unknown(\"#1A1A1F\")\n};\n// Helper to get years category\nfunction getYearsCategory(years) {\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n}\n// Helper to normalize category names for color lookup\nfunction normalizeCategory(category, question) {\n    if (question === \"years_at_medtronic\") return getYearsCategory(Number(category));\n    return category;\n}\n// Process data for chord diagram\nfunction processChordData(data, sourceField, targetField) {\n    // Get unique categories for source and target\n    const sourceCategories = new Set();\n    const targetCategories = new Set();\n    data.forEach((d)=>{\n        if (sourceField === \"years_at_medtronic\") {\n            sourceCategories.add(getYearsCategory(d.years_at_medtronic || 0));\n        } else {\n            sourceCategories.add(d[sourceField]);\n        }\n        if (targetField === \"years_at_medtronic\") {\n            targetCategories.add(getYearsCategory(d.years_at_medtronic || 0));\n        } else {\n            targetCategories.add(d[targetField]);\n        }\n    });\n    const allCategories = Array.from(new Set([\n        ...Array.from(sourceCategories),\n        ...Array.from(targetCategories)\n    ]));\n    // Create matrix\n    const matrix = Array(allCategories.length).fill(0).map(()=>Array(allCategories.length).fill(0));\n    // Fill matrix with relationships\n    data.forEach((d)=>{\n        const source = sourceField === \"years_at_medtronic\" ? getYearsCategory(d.years_at_medtronic || 0) : d[sourceField];\n        const target = targetField === \"years_at_medtronic\" ? getYearsCategory(d.years_at_medtronic || 0) : d[targetField];\n        const sourceIndex = allCategories.indexOf(source);\n        const targetIndex = allCategories.indexOf(target);\n        if (sourceIndex !== -1 && targetIndex !== -1) {\n            matrix[sourceIndex][targetIndex] += 1;\n        }\n    });\n    // Create chord layout\n    const chordLayout = (0,d3_chord__WEBPACK_IMPORTED_MODULE_3__[\"default\"])().padAngle(0.05).sortSubgroups(d3__WEBPACK_IMPORTED_MODULE_0__.descending);\n    const chordData = chordLayout(matrix);\n    // Create groups\n    const groups = chordData.groups.map((group, i)=>{\n        const category = allCategories[i];\n        const question = i < sourceCategories.size ? sourceField : targetField;\n        let color = \"#1A1A1F\";\n        const normCategory = normalizeCategory(category, question);\n        if (question === \"years_at_medtronic\") {\n            color = chordColorScales.years_at_medtronic(normCategory);\n        } else if (question === \"learning_style\") {\n            color = chordColorScales.learning_style(normCategory);\n        } else if (question === \"shaped_by\") {\n            color = chordColorScales.shaped_by(normCategory);\n        } else if (question === \"peak_performance\") {\n            color = chordColorScales.peak_performance(normCategory);\n        } else if (question === \"motivation\") {\n            color = chordColorScales.motivation(normCategory);\n        }\n        return {\n            index: i,\n            startAngle: group.startAngle,\n            endAngle: group.endAngle,\n            value: group.value,\n            category,\n            question,\n            color,\n            name: category\n        };\n    });\n    // Create chords\n    const chords = chordData.map((d)=>{\n        const sourceGroup = groups[d.source.index];\n        const targetGroup = groups[d.target.index];\n        const value = d.source.value;\n        let strength = \"weak\";\n        if (value > 10) strength = \"strong\";\n        else if (value > 5) strength = \"medium\";\n        return {\n            source: sourceGroup,\n            target: targetGroup,\n            value,\n            strength\n        };\n    });\n    return {\n        matrix,\n        names: allCategories,\n        groups,\n        chords\n    };\n}\n// Get chord color by blending source and target colors\nfunction getChordColor(source, target) {\n    return (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(source.color, target.color)(0.5);\n}\n// Animation utilities\nconst chordAnimations = {\n    drawIn: {\n        duration: 1200,\n        delay: (d, i)=>i * 50,\n        easing: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n    },\n    modeChange: {\n        duration: 800,\n        easing: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n    },\n    rotation: {\n        duration: 30000,\n        easing: \"linear\"\n    },\n    highlight: {\n        duration: 200,\n        easing: \"ease-out\"\n    }\n};\n// Utility to filter out unconnected categories from matrix and groups\nfunction filterConnectedCategories(matrix, groups, names) {\n    // Find indexes with at least one connection (row or column sum > 0)\n    const connectedIndexes = new Set();\n    matrix.forEach((row, i)=>{\n        if (row.some((v)=>v > 0) || matrix.some((r)=>r[i] > 0)) {\n            connectedIndexes.add(i);\n        }\n    });\n    // Build new arrays\n    const indexMap = new Map();\n    const filteredNames = names.filter((_, i)=>connectedIndexes.has(i));\n    const filteredGroups = groups.filter((_, i)=>connectedIndexes.has(i));\n    filteredGroups.forEach((g, i)=>indexMap.set(groups.indexOf(g), i));\n    const filteredMatrix = filteredNames.map((_, i)=>filteredNames.map((_, j)=>{\n            const origI = names.indexOf(filteredNames[i]);\n            const origJ = names.indexOf(filteredNames[j]);\n            return matrix[origI][origJ];\n        }));\n    return {\n        filteredMatrix,\n        filteredGroups,\n        filteredNames,\n        indexMap\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/chordUtils.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/colorUtils.ts":
/*!***************************************************************!*\
  !*** ./src/components/DataVisualization/shared/colorUtils.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorConstants: () => (/* binding */ colorConstants),\n/* harmony export */   darkTheme: () => (/* binding */ darkTheme),\n/* harmony export */   getColorConstants: () => (/* binding */ getColorConstants),\n/* harmony export */   getContrastRatio: () => (/* binding */ getContrastRatio),\n/* harmony export */   getLearningStyleColors: () => (/* binding */ getLearningStyleColors),\n/* harmony export */   getMotivationColors: () => (/* binding */ getMotivationColors),\n/* harmony export */   getNodeColor: () => (/* binding */ getNodeColor),\n/* harmony export */   getPeakPerformanceColors: () => (/* binding */ getPeakPerformanceColors),\n/* harmony export */   getSequentialColorScale: () => (/* binding */ getSequentialColorScale),\n/* harmony export */   getShapedByColors: () => (/* binding */ getShapedByColors),\n/* harmony export */   getThemeColors: () => (/* binding */ getThemeColors),\n/* harmony export */   getYearsCategory: () => (/* binding */ getYearsCategory),\n/* harmony export */   getYearsColorScale: () => (/* binding */ getYearsColorScale),\n/* harmony export */   interpolateColors: () => (/* binding */ interpolateColors),\n/* harmony export */   isAccessible: () => (/* binding */ isAccessible),\n/* harmony export */   learningStyleColors: () => (/* binding */ learningStyleColors),\n/* harmony export */   lightTheme: () => (/* binding */ lightTheme),\n/* harmony export */   motivationColors: () => (/* binding */ motivationColors),\n/* harmony export */   peakPerformanceColors: () => (/* binding */ peakPerformanceColors),\n/* harmony export */   sequentialColorScale: () => (/* binding */ sequentialColorScale),\n/* harmony export */   shapedByColors: () => (/* binding */ shapedByColors),\n/* harmony export */   theme: () => (/* binding */ theme),\n/* harmony export */   yearsColorScale: () => (/* binding */ yearsColorScale)\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ \"(ssr)/./node_modules/d3-interpolate/src/rgb.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/ordinal.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/sequential.js\");\n\n\n// Light theme colors\nconst lightTheme = {\n    primary: \"#0077CC\",\n    secondary: \"#00A3E0\",\n    accent: \"#FF6B6B\",\n    background: \"#FFFFFF\",\n    surface: \"#F8F9FA\",\n    text: {\n        primary: \"#1A1A1A\",\n        secondary: \"#6B7280\",\n        muted: \"#9CA3AF\"\n    },\n    border: \"#E5E7EB\",\n    error: \"#EF4444\",\n    success: \"#10B981\",\n    warning: \"#F59E0B\"\n};\n// Dark theme colors\nconst darkTheme = {\n    primary: \"#0088FF\",\n    secondary: \"#00B4FF\",\n    accent: \"#FF7B7B\",\n    background: \"#0A0A0F\",\n    surface: \"#1A1A1F\",\n    text: {\n        primary: \"#FFFFFF\",\n        secondary: \"#A0A0A0\",\n        muted: \"#707070\"\n    },\n    border: \"#2A2A2F\",\n    error: \"#FF4D4D\",\n    success: \"#4CAF50\",\n    warning: \"#FFC107\"\n};\n// Theme-aware color getter function\nfunction getThemeColors(isDarkMode = false) {\n    return isDarkMode ? darkTheme : lightTheme;\n}\n// Years to color mapping - now theme-aware\nconst getYearsColorScale = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"0-5\",\n        \"6-10\",\n        \"11-15\",\n        \"16-20\",\n        \"20+\"\n    ]).range([\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.2),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.4),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.6),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.8),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(1)\n    ]).unknown(theme.surface);\n};\n// Theme-aware attribute color scales\nconst getLearningStyleColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"visual\",\n        \"auditory\",\n        \"kinesthetic\",\n        \"reading_writing\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getShapedByColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\",\n        \"#FFB83C\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"mentor\",\n        \"other\",\n        \"failure\",\n        \"education\",\n        \"challenge\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getPeakPerformanceColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FFD486\",\n        \"#26E6C0\",\n        \"#2AA2D2\",\n        \"#1A5B7C\",\n        \"#FF8A8A\"\n    ] : [\n        \"#FFD166\",\n        \"#06D6A0\",\n        \"#118AB2\",\n        \"#073B4C\",\n        \"#FF6B6B\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"individual\",\n        \"innovation\",\n        \"leadership\",\n        \"crisis\",\n        \"team\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getMotivationColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\",\n        \"#FFB83C\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"autonomy\",\n        \"recognition\",\n        \"impact\",\n        \"purpose\",\n        \"growth\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\n// Theme-aware sequential color scale\nconst getSequentialColorScale = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)).domain([\n        0,\n        1\n    ]);\n};\n// Helper function to get color for a node using theme-aware global colors\nfunction getNodeColor(node, globalColors, isDarkMode = false) {\n    let baseColor = getThemeColors(isDarkMode).primary;\n    // Use global colors if available, otherwise fall back to theme-aware defaults\n    if (node.category === \"years_at_medtronic\") {\n        baseColor = globalColors.years_at_medtronic?.[node.name] || getYearsColorScale(isDarkMode)(node.name);\n    } else if (node.category === \"learning_style\") {\n        baseColor = globalColors.learning_style?.[node.name] || getLearningStyleColors(isDarkMode)(node.name);\n    } else if (node.category === \"peak_performance\") {\n        baseColor = globalColors.peak_performance?.[node.name] || getPeakPerformanceColors(isDarkMode)(node.name);\n    } else if (node.category === \"motivation\") {\n        baseColor = globalColors.motivation?.[node.name] || getMotivationColors(isDarkMode)(node.name);\n    } else if (node.category === \"shaped_by\") {\n        baseColor = globalColors.shaped_by?.[node.name] || getShapedByColors(isDarkMode)(node.name);\n    }\n    return baseColor;\n}\n// Accessibility utilities\nfunction getContrastRatio(foreground, background) {\n    const getLuminance = (color)=>{\n        const rgb = color.match(/\\d+/g)?.map(Number) || [\n            0,\n            0,\n            0\n        ];\n        const [r, g, b] = rgb.map((c)=>{\n            c = c / 255;\n            return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n        });\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n    const l1 = getLuminance(foreground);\n    const l2 = getLuminance(background);\n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n    return (lighter + 0.05) / (darker + 0.05);\n}\nfunction isAccessible(foreground, background) {\n    return getContrastRatio(foreground, background) >= 4.5;\n}\n// Color interpolation\nfunction interpolateColors(color1, color2, t) {\n    return (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(color1, color2)(t);\n}\n// Theme-aware color constants\nconst getColorConstants = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return {\n        node: {\n            default: theme.surface,\n            hover: theme.secondary,\n            selected: theme.primary\n        },\n        edge: {\n            default: theme.border,\n            hover: theme.secondary,\n            selected: theme.primary\n        },\n        text: {\n            default: theme.text.primary,\n            secondary: theme.text.secondary,\n            muted: theme.text.muted\n        },\n        background: {\n            default: theme.background,\n            surface: theme.surface\n        }\n    };\n};\n// Backward compatibility - deprecated functions\nconst theme = lightTheme;\nconst yearsColorScale = getYearsColorScale(false);\nconst learningStyleColors = getLearningStyleColors(false);\nconst shapedByColors = getShapedByColors(false);\nconst peakPerformanceColors = getPeakPerformanceColors(false);\nconst motivationColors = getMotivationColors(false);\nconst sequentialColorScale = getSequentialColorScale(false);\nconst colorConstants = getColorConstants(false);\nfunction getYearsCategory(years) {\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts":
/*!**********************************************************************!*\
  !*** ./src/components/DataVisualization/shared/useApprovedQuotes.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useApprovedQuotes: () => (/* binding */ useApprovedQuotes)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(ssr)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useApprovedQuotes auto */ \n\nfunction useApprovedQuotes() {\n    const [quotes, setQuotes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [currentQuoteIndex, setCurrentQuoteIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__.createClientComponentClient)();\n    // Fetch approved quotes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        async function fetchQuotes() {\n            try {\n                setIsLoading(true);\n                setError(null);\n                // Fetch directly from survey_responses where status is approved\n                const { data, error: fetchError } = await supabase.from(\"survey_responses\").select(`\n            unique_quality,\n            attendee:attendees (\n              first_name,\n              last_name,\n              is_anonymous\n            )\n          `).eq(\"status\", \"approved\").not(\"unique_quality\", \"is\", null).order(\"created_at\", {\n                    ascending: false\n                });\n                if (fetchError) throw fetchError;\n                if (mounted) {\n                    const filteredQuotes = data?.filter((item)=>item.unique_quality && item.unique_quality.trim() !== \"\").map((item)=>({\n                            unique_quality: item.unique_quality,\n                            attendee: Array.isArray(item.attendee) ? item.attendee[0] : item.attendee\n                        })) || [];\n                    console.log(\"Fetched quotes:\", filteredQuotes.length, filteredQuotes);\n                    setQuotes(filteredQuotes);\n                }\n            } catch (err) {\n                console.error(\"Error fetching quotes:\", err);\n                if (mounted) {\n                    setError(err instanceof Error ? err.message : \"Failed to fetch quotes\");\n                }\n            } finally{\n                if (mounted) {\n                    setIsLoading(false);\n                }\n            }\n        }\n        fetchQuotes();\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        supabase\n    ]);\n    // Rotate quotes every 8 seconds\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (quotes.length <= 1) return;\n        const interval = setInterval(()=>{\n            setCurrentQuoteIndex((prev)=>(prev + 1) % quotes.length);\n        }, 8000);\n        return ()=>clearInterval(interval);\n    }, [\n        quotes.length\n    ]);\n    const currentQuote = quotes[currentQuoteIndex];\n    const formatQuote = (quote)=>{\n        if (!quote) return null;\n        const { unique_quality, attendee } = quote;\n        let authorName = \"Anonymous\";\n        if (!attendee.is_anonymous && attendee.first_name) {\n            authorName = attendee.first_name;\n            if (attendee.last_name) {\n                authorName += ` ${attendee.last_name}`;\n            }\n        }\n        return {\n            text: unique_quality,\n            author: authorName\n        };\n    };\n    return {\n        quotes,\n        currentQuote: currentQuote ? formatQuote(currentQuote) : null,\n        isLoading,\n        error,\n        hasQuotes: quotes.length > 0\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlQXBwcm92ZWRRdW90ZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7dUVBRTRDO0FBQ2dDO0FBWXJFLFNBQVNHO0lBQ2QsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdKLCtDQUFRQSxDQUFrQixFQUFFO0lBQ3hELE1BQU0sQ0FBQ0ssbUJBQW1CQyxxQkFBcUIsR0FBR04sK0NBQVFBLENBQUM7SUFDM0QsTUFBTSxDQUFDTyxXQUFXQyxhQUFhLEdBQUdSLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ1MsT0FBT0MsU0FBUyxHQUFHViwrQ0FBUUEsQ0FBZ0I7SUFDbEQsTUFBTVcsV0FBV1YsMEZBQTJCQTtJQUU1Qyx3QkFBd0I7SUFDeEJGLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSWEsVUFBVTtRQUVkLGVBQWVDO1lBQ2IsSUFBSTtnQkFDRkwsYUFBYTtnQkFDYkUsU0FBUztnQkFFVCxnRUFBZ0U7Z0JBQ2hFLE1BQU0sRUFBRUksSUFBSSxFQUFFTCxPQUFPTSxVQUFVLEVBQUUsR0FBRyxNQUFNSixTQUN2Q0ssSUFBSSxDQUFDLG9CQUNMQyxNQUFNLENBQUMsQ0FBQzs7Ozs7OztVQU9ULENBQUMsRUFDQUMsRUFBRSxDQUFDLFVBQVUsWUFDYkMsR0FBRyxDQUFDLGtCQUFrQixNQUFNLE1BQzVCQyxLQUFLLENBQUMsY0FBYztvQkFBRUMsV0FBVztnQkFBTTtnQkFFMUMsSUFBSU4sWUFBWSxNQUFNQTtnQkFFdEIsSUFBSUgsU0FBUztvQkFDWCxNQUFNVSxpQkFBaUJSLE1BQ25CUyxPQUFPQyxDQUFBQSxPQUFRQSxLQUFLQyxjQUFjLElBQUlELEtBQUtDLGNBQWMsQ0FBQ0MsSUFBSSxPQUFPLElBQ3RFQyxJQUFJSCxDQUFBQSxPQUFTOzRCQUNaQyxnQkFBZ0JELEtBQUtDLGNBQWM7NEJBQ25DRyxVQUFVQyxNQUFNQyxPQUFPLENBQUNOLEtBQUtJLFFBQVEsSUFBSUosS0FBS0ksUUFBUSxDQUFDLEVBQUUsR0FBR0osS0FBS0ksUUFBUTt3QkFDM0UsT0FBTyxFQUFFO29CQUVYRyxRQUFRQyxHQUFHLENBQUMsbUJBQW1CVixlQUFlVyxNQUFNLEVBQUVYO29CQUN0RGxCLFVBQVVrQjtnQkFDWjtZQUNGLEVBQUUsT0FBT1ksS0FBSztnQkFDWkgsUUFBUXRCLEtBQUssQ0FBQywwQkFBMEJ5QjtnQkFDeEMsSUFBSXRCLFNBQVM7b0JBQ1hGLFNBQVN3QixlQUFlQyxRQUFRRCxJQUFJRSxPQUFPLEdBQUc7Z0JBQ2hEO1lBQ0YsU0FBVTtnQkFDUixJQUFJeEIsU0FBUztvQkFDWEosYUFBYTtnQkFDZjtZQUNGO1FBQ0Y7UUFFQUs7UUFFQSxPQUFPO1lBQ0xELFVBQVU7UUFDWjtJQUNGLEdBQUc7UUFBQ0Q7S0FBUztJQUViLGdDQUFnQztJQUNoQ1osZ0RBQVNBLENBQUM7UUFDUixJQUFJSSxPQUFPOEIsTUFBTSxJQUFJLEdBQUc7UUFFeEIsTUFBTUksV0FBV0MsWUFBWTtZQUMzQmhDLHFCQUFxQmlDLENBQUFBLE9BQVEsQ0FBQ0EsT0FBTyxLQUFLcEMsT0FBTzhCLE1BQU07UUFDekQsR0FBRztRQUVILE9BQU8sSUFBTU8sY0FBY0g7SUFDN0IsR0FBRztRQUFDbEMsT0FBTzhCLE1BQU07S0FBQztJQUVsQixNQUFNUSxlQUFldEMsTUFBTSxDQUFDRSxrQkFBa0I7SUFFOUMsTUFBTXFDLGNBQWMsQ0FBQ0M7UUFDbkIsSUFBSSxDQUFDQSxPQUFPLE9BQU87UUFFbkIsTUFBTSxFQUFFbEIsY0FBYyxFQUFFRyxRQUFRLEVBQUUsR0FBR2U7UUFDckMsSUFBSUMsYUFBYTtRQUVqQixJQUFJLENBQUNoQixTQUFTaUIsWUFBWSxJQUFJakIsU0FBU2tCLFVBQVUsRUFBRTtZQUNqREYsYUFBYWhCLFNBQVNrQixVQUFVO1lBQ2hDLElBQUlsQixTQUFTbUIsU0FBUyxFQUFFO2dCQUN0QkgsY0FBYyxDQUFDLENBQUMsRUFBRWhCLFNBQVNtQixTQUFTLENBQUMsQ0FBQztZQUN4QztRQUNGO1FBRUEsT0FBTztZQUNMQyxNQUFNdkI7WUFDTndCLFFBQVFMO1FBQ1Y7SUFDRjtJQUVBLE9BQU87UUFDTHpDO1FBQ0FzQyxjQUFjQSxlQUFlQyxZQUFZRCxnQkFBZ0I7UUFDekRsQztRQUNBRTtRQUNBeUMsV0FBVy9DLE9BQU84QixNQUFNLEdBQUc7SUFDN0I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlQXBwcm92ZWRRdW90ZXMudHM/ZjZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRDb21wb25lbnRDbGllbnQgfSBmcm9tICdAc3VwYWJhc2UvYXV0aC1oZWxwZXJzLW5leHRqcyc7XG5pbXBvcnQgdHlwZSB7IERhdGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UvdHlwZXMnO1xuXG5pbnRlcmZhY2UgQXBwcm92ZWRRdW90ZSB7XG4gIHVuaXF1ZV9xdWFsaXR5OiBzdHJpbmc7XG4gIGF0dGVuZGVlOiB7XG4gICAgZmlyc3RfbmFtZTogc3RyaW5nO1xuICAgIGxhc3RfbmFtZTogc3RyaW5nIHwgbnVsbDtcbiAgICBpc19hbm9ueW1vdXM6IGJvb2xlYW47XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBcHByb3ZlZFF1b3RlcygpIHtcbiAgY29uc3QgW3F1b3Rlcywgc2V0UXVvdGVzXSA9IHVzZVN0YXRlPEFwcHJvdmVkUXVvdGVbXT4oW10pO1xuICBjb25zdCBbY3VycmVudFF1b3RlSW5kZXgsIHNldEN1cnJlbnRRdW90ZUluZGV4XSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50Q29tcG9uZW50Q2xpZW50PERhdGFiYXNlPigpO1xuXG4gIC8vIEZldGNoIGFwcHJvdmVkIHF1b3Rlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBtb3VudGVkID0gdHJ1ZTtcblxuICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoUXVvdGVzKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgICBzZXRFcnJvcihudWxsKTtcblxuICAgICAgICAvLyBGZXRjaCBkaXJlY3RseSBmcm9tIHN1cnZleV9yZXNwb25zZXMgd2hlcmUgc3RhdHVzIGlzIGFwcHJvdmVkXG4gICAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3I6IGZldGNoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3N1cnZleV9yZXNwb25zZXMnKVxuICAgICAgICAgIC5zZWxlY3QoYFxuICAgICAgICAgICAgdW5pcXVlX3F1YWxpdHksXG4gICAgICAgICAgICBhdHRlbmRlZTphdHRlbmRlZXMgKFxuICAgICAgICAgICAgICBmaXJzdF9uYW1lLFxuICAgICAgICAgICAgICBsYXN0X25hbWUsXG4gICAgICAgICAgICAgIGlzX2Fub255bW91c1xuICAgICAgICAgICAgKVxuICAgICAgICAgIGApXG4gICAgICAgICAgLmVxKCdzdGF0dXMnLCAnYXBwcm92ZWQnKVxuICAgICAgICAgIC5ub3QoJ3VuaXF1ZV9xdWFsaXR5JywgJ2lzJywgbnVsbClcbiAgICAgICAgICAub3JkZXIoJ2NyZWF0ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XG5cbiAgICAgICAgaWYgKGZldGNoRXJyb3IpIHRocm93IGZldGNoRXJyb3I7XG5cbiAgICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgICBjb25zdCBmaWx0ZXJlZFF1b3RlcyA9IGRhdGFcbiAgICAgICAgICAgID8uZmlsdGVyKGl0ZW0gPT4gaXRlbS51bmlxdWVfcXVhbGl0eSAmJiBpdGVtLnVuaXF1ZV9xdWFsaXR5LnRyaW0oKSAhPT0gJycpXG4gICAgICAgICAgICAubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICAgICAgdW5pcXVlX3F1YWxpdHk6IGl0ZW0udW5pcXVlX3F1YWxpdHksXG4gICAgICAgICAgICAgIGF0dGVuZGVlOiBBcnJheS5pc0FycmF5KGl0ZW0uYXR0ZW5kZWUpID8gaXRlbS5hdHRlbmRlZVswXSA6IGl0ZW0uYXR0ZW5kZWVcbiAgICAgICAgICAgIH0pKSB8fCBbXTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zb2xlLmxvZygnRmV0Y2hlZCBxdW90ZXM6JywgZmlsdGVyZWRRdW90ZXMubGVuZ3RoLCBmaWx0ZXJlZFF1b3Rlcyk7XG4gICAgICAgICAgc2V0UXVvdGVzKGZpbHRlcmVkUXVvdGVzKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHF1b3RlczonLCBlcnIpO1xuICAgICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGZldGNoIHF1b3RlcycpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmZXRjaFF1b3RlcygpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1vdW50ZWQgPSBmYWxzZTtcbiAgICB9O1xuICB9LCBbc3VwYWJhc2VdKTtcblxuICAvLyBSb3RhdGUgcXVvdGVzIGV2ZXJ5IDggc2Vjb25kc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChxdW90ZXMubGVuZ3RoIDw9IDEpIHJldHVybjtcblxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgc2V0Q3VycmVudFF1b3RlSW5kZXgocHJldiA9PiAocHJldiArIDEpICUgcXVvdGVzLmxlbmd0aCk7XG4gICAgfSwgODAwMCk7XG5cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtxdW90ZXMubGVuZ3RoXSk7XG5cbiAgY29uc3QgY3VycmVudFF1b3RlID0gcXVvdGVzW2N1cnJlbnRRdW90ZUluZGV4XTtcblxuICBjb25zdCBmb3JtYXRRdW90ZSA9IChxdW90ZTogQXBwcm92ZWRRdW90ZSkgPT4ge1xuICAgIGlmICghcXVvdGUpIHJldHVybiBudWxsO1xuICAgIFxuICAgIGNvbnN0IHsgdW5pcXVlX3F1YWxpdHksIGF0dGVuZGVlIH0gPSBxdW90ZTtcbiAgICBsZXQgYXV0aG9yTmFtZSA9ICdBbm9ueW1vdXMnO1xuICAgIFxuICAgIGlmICghYXR0ZW5kZWUuaXNfYW5vbnltb3VzICYmIGF0dGVuZGVlLmZpcnN0X25hbWUpIHtcbiAgICAgIGF1dGhvck5hbWUgPSBhdHRlbmRlZS5maXJzdF9uYW1lO1xuICAgICAgaWYgKGF0dGVuZGVlLmxhc3RfbmFtZSkge1xuICAgICAgICBhdXRob3JOYW1lICs9IGAgJHthdHRlbmRlZS5sYXN0X25hbWV9YDtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHQ6IHVuaXF1ZV9xdWFsaXR5LFxuICAgICAgYXV0aG9yOiBhdXRob3JOYW1lXG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHF1b3RlcyxcbiAgICBjdXJyZW50UXVvdGU6IGN1cnJlbnRRdW90ZSA/IGZvcm1hdFF1b3RlKGN1cnJlbnRRdW90ZSkgOiBudWxsLFxuICAgIGlzTG9hZGluZyxcbiAgICBlcnJvcixcbiAgICBoYXNRdW90ZXM6IHF1b3Rlcy5sZW5ndGggPiAwXG4gIH07XG59ICJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImNyZWF0ZUNsaWVudENvbXBvbmVudENsaWVudCIsInVzZUFwcHJvdmVkUXVvdGVzIiwicXVvdGVzIiwic2V0UXVvdGVzIiwiY3VycmVudFF1b3RlSW5kZXgiLCJzZXRDdXJyZW50UXVvdGVJbmRleCIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJzdXBhYmFzZSIsIm1vdW50ZWQiLCJmZXRjaFF1b3RlcyIsImRhdGEiLCJmZXRjaEVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwibm90Iiwib3JkZXIiLCJhc2NlbmRpbmciLCJmaWx0ZXJlZFF1b3RlcyIsImZpbHRlciIsIml0ZW0iLCJ1bmlxdWVfcXVhbGl0eSIsInRyaW0iLCJtYXAiLCJhdHRlbmRlZSIsIkFycmF5IiwiaXNBcnJheSIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJlcnIiLCJFcnJvciIsIm1lc3NhZ2UiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwicHJldiIsImNsZWFySW50ZXJ2YWwiLCJjdXJyZW50UXVvdGUiLCJmb3JtYXRRdW90ZSIsInF1b3RlIiwiYXV0aG9yTmFtZSIsImlzX2Fub255bW91cyIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJ0ZXh0IiwiYXV0aG9yIiwiaGFzUXVvdGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts":
/*!*************************************************************************!*\
  !*** ./src/components/DataVisualization/shared/useVisualizationData.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useVisualizationData: () => (/* binding */ useVisualizationData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(ssr)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useVisualizationData auto */ \n\n// Fallback mock data\nconst mockData = [\n    {\n        id: \"mock-1\",\n        attendee_id: \"mock-attendee-1\",\n        years_at_medtronic: 5,\n        learning_style: \"visual\",\n        shaped_by: \"mentor\",\n        peak_performance: \"Extrovert, Morning\",\n        motivation: \"growth\",\n        unique_quality: \"Mock response 1\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-1\",\n            first_name: \"John\",\n            last_name: \"Doe\",\n            email: \"john@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    },\n    {\n        id: \"mock-2\",\n        attendee_id: \"mock-attendee-2\",\n        years_at_medtronic: 10,\n        learning_style: \"auditory\",\n        shaped_by: \"challenge\",\n        peak_performance: \"Introvert, Morning\",\n        motivation: \"impact\",\n        unique_quality: \"Mock response 2\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-2\",\n            first_name: \"Jane\",\n            last_name: \"Smith\",\n            email: \"jane@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    },\n    {\n        id: \"mock-3\",\n        attendee_id: \"mock-attendee-3\",\n        years_at_medtronic: 15,\n        learning_style: \"kinesthetic\",\n        shaped_by: \"success\",\n        peak_performance: \"Ambivert, Morning\",\n        motivation: \"purpose\",\n        unique_quality: \"Mock response 3\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-3\",\n            first_name: \"Bob\",\n            last_name: \"Johnson\",\n            email: \"bob@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    }\n];\nfunction useVisualizationData({ realtime = true } = {}) {\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isMockData, setIsMockData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Only log when state changes, not on every render\n    const prevDataLength = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data.length);\n    const prevIsLoading = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isLoading);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (prevDataLength.current !== data.length || prevIsLoading.current !== isLoading) {\n            console.log(\"\\uD83D\\uDCCA useVisualizationData state changed:\", {\n                dataLength: data.length,\n                isLoading,\n                error,\n                isMockData\n            });\n            prevDataLength.current = data.length;\n            prevIsLoading.current = isLoading;\n        }\n    }, [\n        data.length,\n        isLoading,\n        error,\n        isMockData\n    ]);\n    // Validate survey response data\n    const validateResponse = (response)=>{\n        if (!response) return false;\n        if (typeof response.years_at_medtronic !== \"number\" || response.years_at_medtronic < 0) return false;\n        if (!response.learning_style || typeof response.learning_style !== \"string\") return false;\n        if (!response.shaped_by || typeof response.shaped_by !== \"string\") return false;\n        if (!response.peak_performance || typeof response.peak_performance !== \"string\") return false;\n        if (!response.motivation || typeof response.motivation !== \"string\") return false;\n        if (!response.attendee || typeof response.attendee !== \"object\") return false;\n        return true;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        let retryCount = 0;\n        const MAX_RETRIES = 3;\n        let channel = null;\n        async function fetchData(isRetry = false) {\n            try {\n                if (isRetry) {\n                    setError(\"Retrying connection...\");\n                } else {\n                    setIsLoading(true);\n                    setError(null);\n                }\n                const { data: responses, error: fetchError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"survey_responses\").select(`\n            *,\n            attendee:attendees(*)\n          `);\n                if (fetchError) {\n                    throw new Error(fetchError.message);\n                }\n                if (mounted) {\n                    if (responses && responses.length > 0) {\n                        // Validate and deduplicate responses\n                        const validResponses = responses.filter(validateResponse).reduce((acc, curr)=>{\n                            const existingIndex = acc.findIndex((r)=>r.attendee_id === curr.attendee_id);\n                            if (existingIndex === -1) {\n                                acc.push(curr);\n                            } else if (new Date(curr.updated_at) > new Date(acc[existingIndex].updated_at)) {\n                                acc[existingIndex] = curr;\n                            }\n                            return acc;\n                        }, []);\n                        console.log(\"✅ Loaded real data:\", {\n                            totalResponses: responses.length,\n                            validResponses: validResponses.length,\n                            sampleData: validResponses.slice(0, 2)\n                        });\n                        setData(validResponses);\n                        setIsMockData(false);\n                    } else {\n                        console.warn(\"⚠️ No data available, using mock data\");\n                        setData(mockData);\n                        setIsMockData(true);\n                    }\n                    setError(null);\n                }\n            } catch (err) {\n                console.error(\"❌ Error fetching data:\", err);\n                if (mounted) {\n                    if (isRetry && retryCount < MAX_RETRIES) {\n                        retryCount++;\n                        console.log(`🔄 Retrying data fetch (${retryCount}/${MAX_RETRIES}) in ${1000 * retryCount}ms`);\n                        setTimeout(()=>fetchData(true), 1000 * retryCount);\n                    } else {\n                        setError(err instanceof Error ? err.message : \"Failed to fetch data\");\n                        console.log(\"\\uD83D\\uDD04 Fallback to mock data due to error\");\n                        setData(mockData);\n                        setIsMockData(true);\n                    }\n                }\n            } finally{\n                if (mounted) {\n                    setIsLoading(false);\n                }\n            }\n        }\n        fetchData();\n        if (realtime) {\n            channel = _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.channel(\"survey_responses_changes\").on(\"postgres_changes\", {\n                event: \"*\",\n                schema: \"public\",\n                table: \"survey_responses\"\n            }, async (payload)=>{\n                if (!mounted) return;\n                try {\n                    if (payload.eventType === \"INSERT\" || payload.eventType === \"UPDATE\") {\n                        const { data: response, error: fetchError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"survey_responses\").select(`\n                    *,\n                    attendee:attendees(*)\n                  `).eq(\"id\", payload.new.id).single();\n                        if (fetchError) throw new Error(fetchError.message);\n                        if (response && validateResponse(response)) {\n                            setData((currentData)=>{\n                                const newData = [\n                                    ...currentData\n                                ];\n                                const index = newData.findIndex((item)=>item.id === response.id);\n                                if (index !== -1) {\n                                    newData[index] = response;\n                                } else {\n                                    newData.push(response);\n                                }\n                                return newData;\n                            });\n                        }\n                    } else if (payload.eventType === \"DELETE\") {\n                        setData((currentData)=>currentData.filter((item)=>item.id !== payload.old.id));\n                    }\n                } catch (err) {\n                    console.error(\"Error processing realtime update:\", err);\n                    setError(err instanceof Error ? err.message : \"Failed to process update\");\n                }\n            }).subscribe((status)=>{\n                if (status === \"SUBSCRIBED\") {\n                    console.log(\"Successfully subscribed to realtime updates\");\n                } else {\n                    console.error(\"Failed to subscribe to realtime updates\");\n                    setError(\"Realtime connection failed\");\n                }\n            });\n            return ()=>{\n                if (channel) {\n                    _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.removeChannel(channel);\n                }\n                mounted = false;\n            };\n        }\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        realtime\n    ]);\n    return {\n        data,\n        isLoading,\n        error,\n        isMockData\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlVmlzdWFsaXphdGlvbkRhdGEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OzswRUFFb0Q7QUFDVjtBQVcxQyxxQkFBcUI7QUFDckIsTUFBTUksV0FBNkI7SUFDakM7UUFDRUMsSUFBSTtRQUNKQyxhQUFhO1FBQ2JDLG9CQUFvQjtRQUNwQkMsZ0JBQWdCO1FBQ2hCQyxXQUFXO1FBQ1hDLGtCQUFrQjtRQUNsQkMsWUFBWTtRQUNaQyxnQkFBZ0I7UUFDaEJDLFlBQVk7UUFDWkMsWUFBWTtRQUNaQyxVQUFVO1lBQ1JWLElBQUk7WUFDSlcsWUFBWTtZQUNaQyxXQUFXO1lBQ1hDLE9BQU87WUFDUEMsY0FBYztZQUNkTixZQUFZO1lBQ1pDLFlBQVk7UUFDZDtJQUNGO0lBQ0E7UUFDRVQsSUFBSTtRQUNKQyxhQUFhO1FBQ2JDLG9CQUFvQjtRQUNwQkMsZ0JBQWdCO1FBQ2hCQyxXQUFXO1FBQ1hDLGtCQUFrQjtRQUNsQkMsWUFBWTtRQUNaQyxnQkFBZ0I7UUFDaEJDLFlBQVk7UUFDWkMsWUFBWTtRQUNaQyxVQUFVO1lBQ1JWLElBQUk7WUFDSlcsWUFBWTtZQUNaQyxXQUFXO1lBQ1hDLE9BQU87WUFDUEMsY0FBYztZQUNkTixZQUFZO1lBQ1pDLFlBQVk7UUFDZDtJQUNGO0lBQ0E7UUFDRVQsSUFBSTtRQUNKQyxhQUFhO1FBQ2JDLG9CQUFvQjtRQUNwQkMsZ0JBQWdCO1FBQ2hCQyxXQUFXO1FBQ1hDLGtCQUFrQjtRQUNsQkMsWUFBWTtRQUNaQyxnQkFBZ0I7UUFDaEJDLFlBQVk7UUFDWkMsWUFBWTtRQUNaQyxVQUFVO1lBQ1JWLElBQUk7WUFDSlcsWUFBWTtZQUNaQyxXQUFXO1lBQ1hDLE9BQU87WUFDUEMsY0FBYztZQUNkTixZQUFZO1lBQ1pDLFlBQVk7UUFDZDtJQUNGO0NBQ0Q7QUFFTSxTQUFTTSxxQkFBcUIsRUFBRUMsV0FBVyxJQUFJLEVBQStCLEdBQUcsQ0FBQyxDQUFDO0lBQ3hGLE1B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Y0FBYztvQkFDM0JoRCxRQUFRQyxHQUFHLENBQUM7Z0JBQ2QsT0FBTztvQkFDTEQsUUFBUVIsS0FBSyxDQUFDO29CQUNkQyxTQUFTO2dCQUNYO1lBQ0Y7WUFFRixPQUFPO2dCQUNMLElBQUllLFNBQVM7b0JBQ1h2QyxtREFBUUEsQ0FBQ2dGLGFBQWEsQ0FBQ3pDO2dCQUN6QjtnQkFDQUgsVUFBVTtZQUNaO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xBLFVBQVU7UUFDWjtJQUNGLEdBQUc7UUFBQ2xCO0tBQVM7SUFFYixPQUFPO1FBQ0xDO1FBQ0FFO1FBQ0FFO1FBQ0FFO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlVmlzdWFsaXphdGlvbkRhdGEudHM/ZWU3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UnO1xuaW1wb3J0IHR5cGUgeyBEYXRhYmFzZSB9IGZyb20gJ0AvbGliL3N1cGFiYXNlL3R5cGVzJztcblxudHlwZSBTdXJ2ZXlSZXNwb25zZSA9IERhdGFiYXNlWydwdWJsaWMnXVsnVGFibGVzJ11bJ3N1cnZleV9yZXNwb25zZXMnXVsnUm93J10gJiB7XG4gIGF0dGVuZGVlOiBEYXRhYmFzZVsncHVibGljJ11bJ1RhYmxlcyddWydhdHRlbmRlZXMnXVsnUm93J107XG59O1xuXG5pbnRlcmZhY2UgVXNlVmlzdWFsaXphdGlvbkRhdGFPcHRpb25zIHtcbiAgcmVhbHRpbWU/OiBib29sZWFuO1xufVxuXG4vLyBGYWxsYmFjayBtb2NrIGRhdGFcbmNvbnN0IG1vY2tEYXRhOiBTdXJ2ZXlSZXNwb25zZVtdID0gW1xuICB7XG4gICAgaWQ6ICdtb2NrLTEnLFxuICAgIGF0dGVuZGVlX2lkOiAnbW9jay1hdHRlbmRlZS0xJyxcbiAgICB5ZWFyc19hdF9tZWR0cm9uaWM6IDUsXG4gICAgbGVhcm5pbmdfc3R5bGU6ICd2aXN1YWwnLFxuICAgIHNoYXBlZF9ieTogJ21lbnRvcicsXG4gICAgcGVha19wZXJmb3JtYW5jZTogJ0V4dHJvdmVydCwgTW9ybmluZycsXG4gICAgbW90aXZhdGlvbjogJ2dyb3d0aCcsXG4gICAgdW5pcXVlX3F1YWxpdHk6ICdNb2NrIHJlc3BvbnNlIDEnLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicsXG4gICAgdXBkYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJyxcbiAgICBhdHRlbmRlZToge1xuICAgICAgaWQ6ICdtb2NrLWF0dGVuZGVlLTEnLFxuICAgICAgZmlyc3RfbmFtZTogJ0pvaG4nLFxuICAgICAgbGFzdF9uYW1lOiAnRG9lJyxcbiAgICAgIGVtYWlsOiAnam9obkBleGFtcGxlLmNvbScsXG4gICAgICBpc19hbm9ueW1vdXM6IGZhbHNlLFxuICAgICAgY3JlYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJyxcbiAgICAgIHVwZGF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWidcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBpZDogJ21vY2stMicsXG4gICAgYXR0ZW5kZWVfaWQ6ICdtb2NrLWF0dGVuZGVlLTInLFxuICAgIHllYXJzX2F0X21lZHRyb25pYzogMTAsXG4gICAgbGVhcm5pbmdfc3R5bGU6ICdhdWRpdG9yeScsXG4gICAgc2hhcGVkX2J5OiAnY2hhbGxlbmdlJyxcbiAgICBwZWFrX3BlcmZvcm1hbmNlOiAnSW50cm92ZXJ0LCBNb3JuaW5nJyxcbiAgICBtb3RpdmF0aW9uOiAnaW1wYWN0JyxcbiAgICB1bmlxdWVfcXVhbGl0eTogJ01vY2sgcmVzcG9uc2UgMicsXG4gICAgY3JlYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJyxcbiAgICB1cGRhdGVkX2F0OiAnMjAyNC0wMS0wMVQwMDowMDowMFonLFxuICAgIGF0dGVuZGVlOiB7XG4gICAgICBpZDogJ21vY2stYXR0ZW5kZWUtMicsXG4gICAgICBmaXJzdF9uYW1lOiAnSmFuZScsXG4gICAgICBsYXN0X25hbWU6ICdTbWl0aCcsXG4gICAgICBlbWFpbDogJ2phbmVAZXhhbXBsZS5jb20nLFxuICAgICAgaXNfYW5vbnltb3VzOiBmYWxzZSxcbiAgICAgIGNyZWF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicsXG4gICAgICB1cGRhdGVkX2F0OiAnMjAyNC0wMS0wMVQwMDowMDowMFonXG4gICAgfVxuICB9LFxuICB7XG4gICAgaWQ6ICdtb2NrLTMnLFxuICAgIGF0dGVuZGVlX2lkOiAnbW9jay1hdHRlbmRlZS0zJyxcbiAgICB5ZWFyc19hdF9tZWR0cm9uaWM6IDE1LFxuICAgIGxlYXJuaW5nX3N0eWxlOiAna2luZXN0aGV0aWMnLFxuICAgIHNoYXBlZF9ieTogJ3N1Y2Nlc3MnLFxuICAgIHBlYWtfcGVyZm9ybWFuY2U6ICdBbWJpdmVydCwgTW9ybmluZycsXG4gICAgbW90aXZhdGlvbjogJ3B1cnBvc2UnLFxuICAgIHVuaXF1ZV9xdWFsaXR5OiAnTW9jayByZXNwb25zZSAzJyxcbiAgICBjcmVhdGVkX2F0OiAnMjAyNC0wMS0wMVQwMDowMDowMFonLFxuICAgIHVwZGF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicsXG4gICAgYXR0ZW5kZWU6IHtcbiAgICAgIGlkOiAnbW9jay1hdHRlbmRlZS0zJyxcbiAgICAgIGZpcnN0X25hbWU6ICdCb2InLFxuICAgICAgbGFzdF9uYW1lOiAnSm9obnNvbicsXG4gICAgICBlbWFpbDogJ2JvYkBleGFtcGxlLmNvbScsXG4gICAgICBpc19hbm9ueW1vdXM6IGZhbHNlLFxuICAgICAgY3JlYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJyxcbiAgICAgIHVwZGF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWidcbiAgICB9XG4gIH1cbl07XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VWaXN1YWxpemF0aW9uRGF0YSh7IHJlYWx0aW1lID0gdHJ1ZSB9OiBVc2VWaXN1YWxpemF0aW9uRGF0YU9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZTxTdXJ2ZXlSZXNwb25zZVtdPihbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2lzTW9ja0RhdGEsIHNldElzTW9ja0RhdGFdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIE9ubHkgbG9nIHdoZW4gc3RhdGUgY2hhbmdlcywgbm90IG9uIGV2ZXJ5IHJlbmRlclxuICBjb25zdCBwcmV2RGF0YUxlbmd0aCA9IHVzZVJlZihkYXRhLmxlbmd0aCk7XG4gIGNvbnN0IHByZXZJc0xvYWRpbmcgPSB1c2VSZWYoaXNMb2FkaW5nKTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHByZXZEYXRhTGVuZ3RoLmN1cnJlbnQgIT09IGRhdGEubGVuZ3RoIHx8IHByZXZJc0xvYWRpbmcuY3VycmVudCAhPT0gaXNMb2FkaW5nKSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+TiiB1c2VWaXN1YWxpemF0aW9uRGF0YSBzdGF0ZSBjaGFuZ2VkOicsIHtcbiAgICAgICAgZGF0YUxlbmd0aDogZGF0YS5sZW5ndGgsXG4gICAgICAgIGlzTG9hZGluZyxcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIGlzTW9ja0RhdGFcbiAgICAgIH0pO1xuICAgICAgcHJldkRhdGFMZW5ndGguY3VycmVudCA9IGRhdGEubGVuZ3RoO1xuICAgICAgcHJldklzTG9hZGluZy5jdXJyZW50ID0gaXNMb2FkaW5nO1xuICAgIH1cbiAgfSwgW2RhdGEubGVuZ3RoLCBpc0xvYWRpbmcsIGVycm9yLCBpc01vY2tEYXRhXSk7XG5cbiAgLy8gVmFsaWRhdGUgc3VydmV5IHJlc3BvbnNlIGRhdGFcbiAgY29uc3QgdmFsaWRhdGVSZXNwb25zZSA9IChyZXNwb25zZTogYW55KTogcmVzcG9uc2UgaXMgU3VydmV5UmVzcG9uc2UgPT4ge1xuICAgIGlmICghcmVzcG9uc2UpIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLnllYXJzX2F0X21lZHRyb25pYyAhPT0gJ251bWJlcicgfHwgcmVzcG9uc2UueWVhcnNfYXRfbWVkdHJvbmljIDwgMCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghcmVzcG9uc2UubGVhcm5pbmdfc3R5bGUgfHwgdHlwZW9mIHJlc3BvbnNlLmxlYXJuaW5nX3N0eWxlICE9PSAnc3RyaW5nJykgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghcmVzcG9uc2Uuc2hhcGVkX2J5IHx8IHR5cGVvZiByZXNwb25zZS5zaGFwZWRfYnkgIT09ICdzdHJpbmcnKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFyZXNwb25zZS5wZWFrX3BlcmZvcm1hbmNlIHx8IHR5cGVvZiByZXNwb25zZS5wZWFrX3BlcmZvcm1hbmNlICE9PSAnc3RyaW5nJykgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghcmVzcG9uc2UubW90aXZhdGlvbiB8fCB0eXBlb2YgcmVzcG9uc2UubW90aXZhdGlvbiAhPT0gJ3N0cmluZycpIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIXJlc3BvbnNlLmF0dGVuZGVlIHx8IHR5cGVvZiByZXNwb25zZS5hdHRlbmRlZSAhPT0gJ29iamVjdCcpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBtb3VudGVkID0gdHJ1ZTtcbiAgICBsZXQgcmV0cnlDb3VudCA9IDA7XG4gICAgY29uc3QgTUFYX1JFVFJJRVMgPSAzO1xuICAgIGxldCBjaGFubmVsOiBSZXR1cm5UeXBlPHR5cGVvZiBzdXBhYmFzZS5jaGFubmVsPiB8IG51bGwgPSBudWxsO1xuXG4gICAgYXN5bmMgZnVuY3Rpb24gZmV0Y2hEYXRhKGlzUmV0cnkgPSBmYWxzZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKGlzUmV0cnkpIHtcbiAgICAgICAgICBzZXRFcnJvcignUmV0cnlpbmcgY29ubmVjdGlvbi4uLicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICAgICAgICBzZXRFcnJvcihudWxsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHsgZGF0YTogcmVzcG9uc2VzLCBlcnJvcjogZmV0Y2hFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgnc3VydmV5X3Jlc3BvbnNlcycpXG4gICAgICAgICAgLnNlbGVjdChgXG4gICAgICAgICAgICAqLFxuICAgICAgICAgICAgYXR0ZW5kZWU6YXR0ZW5kZWVzKCopXG4gICAgICAgICAgYCk7XG5cbiAgICAgICAgaWYgKGZldGNoRXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZmV0Y2hFcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtb3VudGVkKSB7XG4gICAgICAgICAgaWYgKHJlc3BvbnNlcyAmJiByZXNwb25zZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgLy8gVmFsaWRhdGUgYW5kIGRlZHVwbGljYXRlIHJlc3BvbnNlc1xuICAgICAgICAgICAgY29uc3QgdmFsaWRSZXNwb25zZXMgPSByZXNwb25zZXNcbiAgICAgICAgICAgICAgLmZpbHRlcih2YWxpZGF0ZVJlc3BvbnNlKVxuICAgICAgICAgICAgICAucmVkdWNlKChhY2M6IFN1cnZleVJlc3BvbnNlW10sIGN1cnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gYWNjLmZpbmRJbmRleChyID0+IHIuYXR0ZW5kZWVfaWQgPT09IGN1cnIuYXR0ZW5kZWVfaWQpO1xuICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ0luZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgICAgICAgYWNjLnB1c2goY3Vycik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChuZXcgRGF0ZShjdXJyLnVwZGF0ZWRfYXQpID4gbmV3IERhdGUoYWNjW2V4aXN0aW5nSW5kZXhdLnVwZGF0ZWRfYXQpKSB7XG4gICAgICAgICAgICAgICAgICBhY2NbZXhpc3RpbmdJbmRleF0gPSBjdXJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICAgICAgICB9LCBbXSk7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgTG9hZGVkIHJlYWwgZGF0YTonLCB7XG4gICAgICAgICAgICAgIHRvdGFsUmVzcG9uc2VzOiByZXNwb25zZXMubGVuZ3RoLFxuICAgICAgICAgICAgICB2YWxpZFJlc3BvbnNlczogdmFsaWRSZXNwb25zZXMubGVuZ3RoLFxuICAgICAgICAgICAgICBzYW1wbGVEYXRhOiB2YWxpZFJlc3BvbnNlcy5zbGljZSgwLCAyKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzZXREYXRhKHZhbGlkUmVzcG9uc2VzKTtcbiAgICAgICAgICAgIHNldElzTW9ja0RhdGEoZmFsc2UpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ+KaoO+4jyBObyBkYXRhIGF2YWlsYWJsZSwgdXNpbmcgbW9jayBkYXRhJyk7XG4gICAgICAgICAgICBzZXREYXRhKG1vY2tEYXRhKTtcbiAgICAgICAgICAgIHNldElzTW9ja0RhdGEodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNldEVycm9yKG51bGwpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGZldGNoaW5nIGRhdGE6JywgZXJyKTtcbiAgICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgICBpZiAoaXNSZXRyeSAmJiByZXRyeUNvdW50IDwgTUFYX1JFVFJJRVMpIHtcbiAgICAgICAgICAgIHJldHJ5Q291bnQrKztcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDwn5SEIFJldHJ5aW5nIGRhdGEgZmV0Y2ggKCR7cmV0cnlDb3VudH0vJHtNQVhfUkVUUklFU30pIGluICR7MTAwMCAqIHJldHJ5Q291bnR9bXNgKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gZmV0Y2hEYXRhKHRydWUpLCAxMDAwICogcmV0cnlDb3VudCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGZldGNoIGRhdGEnKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SEIEZhbGxiYWNrIHRvIG1vY2sgZGF0YSBkdWUgdG8gZXJyb3InKTtcbiAgICAgICAgICAgIHNldERhdGEobW9ja0RhdGEpO1xuICAgICAgICAgICAgc2V0SXNNb2NrRGF0YSh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChtb3VudGVkKSB7XG4gICAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZldGNoRGF0YSgpO1xuXG4gICAgaWYgKHJlYWx0aW1lKSB7XG4gICAgICBjaGFubmVsID0gc3VwYWJhc2VcbiAgICAgICAgLmNoYW5uZWwoJ3N1cnZleV9yZXNwb25zZXNfY2hhbmdlcycpXG4gICAgICAgIC5vbihcbiAgICAgICAgICAncG9zdGdyZXNfY2hhbmdlcycsXG4gICAgICAgICAge1xuICAgICAgICAgICAgZXZlbnQ6ICcqJyxcbiAgICAgICAgICAgIHNjaGVtYTogJ3B1YmxpYycsXG4gICAgICAgICAgICB0YWJsZTogJ3N1cnZleV9yZXNwb25zZXMnLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYXN5bmMgKHBheWxvYWQpID0+IHtcbiAgICAgICAgICAgIGlmICghbW91bnRlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBpZiAocGF5bG9hZC5ldmVudFR5cGUgPT09ICdJTlNFUlQnIHx8IHBheWxvYWQuZXZlbnRUeXBlID09PSAnVVBEQVRFJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZGF0YTogcmVzcG9uc2UsIGVycm9yOiBmZXRjaEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAgICAgICAgICAgLmZyb20oJ3N1cnZleV9yZXNwb25zZXMnKVxuICAgICAgICAgICAgICAgICAgLnNlbGVjdChgXG4gICAgICAgICAgICAgICAgICAgICosXG4gICAgICAgICAgICAgICAgICAgIGF0dGVuZGVlOmF0dGVuZGVlcygqKVxuICAgICAgICAgICAgICAgICAgYClcbiAgICAgICAgICAgICAgICAgIC5lcSgnaWQnLCBwYXlsb2FkLm5ldy5pZClcbiAgICAgICAgICAgICAgICAgIC5zaW5nbGUoKTtcblxuICAgICAgICAgICAgICAgIGlmIChmZXRjaEVycm9yKSB0aHJvdyBuZXcgRXJyb3IoZmV0Y2hFcnJvci5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZSAmJiB2YWxpZGF0ZVJlc3BvbnNlKHJlc3BvbnNlKSkge1xuICAgICAgICAgICAgICAgICAgc2V0RGF0YSgoY3VycmVudERhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3RGF0YSA9IFsuLi5jdXJyZW50RGF0YV07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gbmV3RGF0YS5maW5kSW5kZXgoKGl0ZW0pID0+IGl0ZW0uaWQgPT09IHJlc3BvbnNlLmlkKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbmV3RGF0YVtpbmRleF0gPSByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICBuZXdEYXRhLnB1c2gocmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld0RhdGE7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZWxzZSBpZiAocGF5bG9hZC5ldmVudFR5cGUgPT09ICdERUxFVEUnKSB7XG4gICAgICAgICAgICAgICAgc2V0RGF0YSgoY3VycmVudERhdGEpID0+IGN1cnJlbnREYXRhLmZpbHRlcigoaXRlbSkgPT4gaXRlbS5pZCAhPT0gcGF5bG9hZC5vbGQuaWQpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByb2Nlc3NpbmcgcmVhbHRpbWUgdXBkYXRlOicsIGVycik7XG4gICAgICAgICAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIHByb2Nlc3MgdXBkYXRlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICAgIC5zdWJzY3JpYmUoKHN0YXR1cykgPT4ge1xuICAgICAgICAgIGlmIChzdGF0dXMgPT09ICdTVUJTQ1JJQkVEJykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBzdWJzY3JpYmVkIHRvIHJlYWx0aW1lIHVwZGF0ZXMnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHN1YnNjcmliZSB0byByZWFsdGltZSB1cGRhdGVzJyk7XG4gICAgICAgICAgICBzZXRFcnJvcignUmVhbHRpbWUgY29ubmVjdGlvbiBmYWlsZWQnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBpZiAoY2hhbm5lbCkge1xuICAgICAgICAgIHN1cGFiYXNlLnJlbW92ZUNoYW5uZWwoY2hhbm5lbCk7XG4gICAgICAgIH1cbiAgICAgICAgbW91bnRlZCA9IGZhbHNlO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgbW91bnRlZCA9IGZhbHNlO1xuICAgIH07XG4gIH0sIFtyZWFsdGltZV0pO1xuXG4gIHJldHVybiB7XG4gICAgZGF0YSxcbiAgICBpc0xvYWRpbmcsXG4gICAgZXJyb3IsXG4gICAgaXNNb2NrRGF0YVxuICB9O1xufSAiXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VSZWYiLCJzdXBhYmFzZSIsIm1vY2tEYXRhIiwiaWQiLCJhdHRlbmRlZV9pZCIsInllYXJzX2F0X21lZHRyb25pYyIsImxlYXJuaW5nX3N0eWxlIiwic2hhcGVkX2J5IiwicGVha19wZXJmb3JtYW5jZSIsIm1vdGl2YXRpb24iLCJ1bmlxdWVfcXVhbGl0eSIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwiYXR0ZW5kZWUiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwiZW1haWwiLCJpc19hbm9ueW1vdXMiLCJ1c2VWaXN1YWxpemF0aW9uRGF0YSIsInJlYWx0aW1lIiwiZGF0YSIsInNldERhdGEiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiaXNNb2NrRGF0YSIsInNldElzTW9ja0RhdGEiLCJwcmV2RGF0YUxlbmd0aCIsImxlbmd0aCIsInByZXZJc0xvYWRpbmciLCJjdXJyZW50IiwiY29uc29sZSIsImxvZyIsImRhdGFMZW5ndGgiLCJ2YWxpZGF0ZVJlc3BvbnNlIiwicmVzcG9uc2UiLCJtb3VudGVkIiwicmV0cnlDb3VudCIsIk1BWF9SRVRSSUVTIiwiY2hhbm5lbCIsImZldGNoRGF0YSIsImlzUmV0cnkiLCJyZXNwb25zZXMiLCJmZXRjaEVycm9yIiwiZnJvbSIsInNlbGVjdCIsIkVycm9yIiwibWVzc2FnZSIsInZhbGlkUmVzcG9uc2VzIiwiZmlsdGVyIiwicmVkdWNlIiwiYWNjIiwiY3VyciIsImV4aXN0aW5nSW5kZXgiLCJmaW5kSW5kZXgiLCJyIiwicHVzaCIsIkRhdGUiLCJ0b3RhbFJlc3BvbnNlcyIsInNhbXBsZURhdGEiLCJzbGljZSIsIndhcm4iLCJlcnIiLCJzZXRUaW1lb3V0Iiwib24iLCJldmVudCIsInNjaGVtYSIsInRhYmxlIiwicGF5bG9hZCIsImV2ZW50VHlwZSIsImVxIiwibmV3Iiwic2luZ2xlIiwiY3VycmVudERhdGEiLCJuZXdEYXRhIiwiaW5kZXgiLCJpdGVtIiwib2xkIiwic3Vic2NyaWJlIiwic3RhdHVzIiwicmVtb3ZlQ2hhbm5lbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nconst Layout = ({ children })=>{\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname)() || \"\";\n    const isAdmin = pathname.startsWith(\"/admin\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"bg-white shadow-sm w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                    className: \"w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center h-16 w-full px-4 sm:px-6 lg:px-8 max-w-none\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: \"/\",\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xl font-bold text-gray-900\",\n                                        children: \"WE Summit\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                        lineNumber: 21,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                    lineNumber: 20,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 19,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center\",\n                                children: !isAdmin && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: \"/admin\",\n                                    className: \"text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium\",\n                                    children: \"Admin Panel\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                    lineNumber: 26,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-grow\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n                    children: children\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 39,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: \"bg-white w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"py-4 w-full px-4 sm:px-6 lg:px-8\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-center text-sm text-gray-500\",\n                        children: [\n                            \"\\xa9 \",\n                            new Date().getFullYear(),\n                            \" Medtronic WE Summit. All rights reserved.\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 45,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Layout);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9MYXlvdXQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDMEI7QUFDRztBQUNpQjtBQU05QyxNQUFNRyxTQUFnQyxDQUFDLEVBQUVDLFFBQVEsRUFBRTtJQUNqRCxNQUFNQyxXQUFXSCw0REFBV0EsTUFBTTtJQUNsQyxNQUFNSSxVQUFVRCxTQUFTRSxVQUFVLENBQUM7SUFFcEMscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBT0QsV0FBVTswQkFDaEIsNEVBQUNFO29CQUFJRixXQUFVOzhCQUNiLDRFQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUNiLDRFQUFDUixrREFBSUE7b0NBQUNXLE1BQUs7b0NBQUlILFdBQVU7OENBQ3ZCLDRFQUFDSTt3Q0FBS0osV0FBVTtrREFBa0M7Ozs7Ozs7Ozs7Ozs7Ozs7MENBR3RELDhEQUFDRDtnQ0FBSUMsV0FBVTswQ0FDWixDQUFDSCx5QkFDQSw4REFBQ0wsa0RBQUlBO29DQUNIVyxNQUFLO29DQUNMSCxXQUFVOzhDQUNYOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBU1gsOERBQUNLO2dCQUFLTCxXQUFVOzBCQUNkLDRFQUFDRDtvQkFBSUMsV0FBVTs4QkFDWkw7Ozs7Ozs7Ozs7OzBCQUlMLDhEQUFDVztnQkFBT04sV0FBVTswQkFDaEIsNEVBQUNEO29CQUFJQyxXQUFVOzhCQUNiLDRFQUFDTzt3QkFBRVAsV0FBVTs7NEJBQW9DOzRCQUM1QyxJQUFJUSxPQUFPQyxXQUFXOzRCQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU14QztBQUVBLGlFQUFlZixNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9jb21wb25lbnRzL0xheW91dC50c3g/ZGU4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IHsgdXNlUGF0aG5hbWUgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xuXG5pbnRlcmZhY2UgTGF5b3V0UHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5jb25zdCBMYXlvdXQ6IFJlYWN0LkZDPExheW91dFByb3BzPiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZSgpIHx8ICcnO1xuICBjb25zdCBpc0FkbWluID0gcGF0aG5hbWUuc3RhcnRzV2l0aCgnL2FkbWluJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGZsZXgtY29sXCI+XG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cImJnLXdoaXRlIHNoYWRvdy1zbSB3LWZ1bGxcIj5cbiAgICAgICAgPG5hdiBjbGFzc05hbWU9XCJ3LWZ1bGxcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBoLTE2IHctZnVsbCBweC00IHNtOnB4LTYgbGc6cHgtOCBtYXgtdy1ub25lXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhcIj5cbiAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9cIiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1ib2xkIHRleHQtZ3JheS05MDBcIj5XRSBTdW1taXQ8L3NwYW4+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICB7IWlzQWRtaW4gJiYgKFxuICAgICAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgICAgICBocmVmPVwiL2FkbWluXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDAgaG92ZXI6dGV4dC1ncmF5LTkwMCBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LXNtIGZvbnQtbWVkaXVtXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBBZG1pbiBQYW5lbFxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25hdj5cbiAgICAgIDwvaGVhZGVyPlxuXG4gICAgICA8bWFpbiBjbGFzc05hbWU9XCJmbGV4LWdyb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy03eGwgbXgtYXV0byBweS02IHNtOnB4LTYgbGc6cHgtOFwiPlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L21haW4+XG5cbiAgICAgIDxmb290ZXIgY2xhc3NOYW1lPVwiYmctd2hpdGUgdy1mdWxsXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHktNCB3LWZ1bGwgcHgtNCBzbTpweC02IGxnOnB4LThcIj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LXNtIHRleHQtZ3JheS01MDBcIj5cbiAgICAgICAgICAgIMKpIHtuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCl9IE1lZHRyb25pYyBXRSBTdW1taXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZm9vdGVyPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTGF5b3V0OyAiXSwibmFtZXMiOlsiUmVhY3QiLCJMaW5rIiwidXNlUGF0aG5hbWUiLCJMYXlvdXQiLCJjaGlsZHJlbiIsInBhdGhuYW1lIiwiaXNBZG1pbiIsInN0YXJ0c1dpdGgiLCJkaXYiLCJjbGFzc05hbWUiLCJoZWFkZXIiLCJuYXYiLCJocmVmIiwic3BhbiIsIm1haW4iLCJmb290ZXIiLCJwIiwiRGF0ZSIsImdldEZ1bGxZZWFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/Layout.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/shared/GlobalControlsNav.tsx":
/*!*****************************************************!*\
  !*** ./src/components/shared/GlobalControlsNav.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GlobalControlsNav)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nfunction GlobalControlsNav() {\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_3__.useAppContext)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed top-4 left-4 z-50\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n            href: \"/admin/controls\",\n            className: \"inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    className: \"w-5 h-5 mr-2 text-gray-600 dark:text-gray-300\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 16,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"text-sm font-medium text-gray-700 dark:text-gray-300\",\n                    children: \"Global Controls\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 35,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"ml-2 flex space-x-1\",\n                    children: [\n                        settings.isDarkMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-blue-500 rounded-full\",\n                            title: \"Dark Mode Active\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 13\n                        }, this),\n                        !settings.useTestData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-green-500 rounded-full\",\n                            title: \"Live Data Active\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 13\n                        }, this),\n                        !settings.isAutoPlayEnabled && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-yellow-500 rounded-full\",\n                            title: \"Auto Play Disabled\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 48,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 40,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n            lineNumber: 12,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9zaGFyZWQvR2xvYmFsQ29udHJvbHNOYXYudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUwQjtBQUNHO0FBQzRCO0FBRTFDLFNBQVNHO0lBQ3RCLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdGLHNFQUFhQTtJQUVsQyxxQkFDRSw4REFBQ0c7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0wsa0RBQUlBO1lBQ0hNLE1BQUs7WUFDTEQsV0FBVTs7OEJBRVYsOERBQUNFO29CQUNDRixXQUFVO29CQUNWRyxNQUFLO29CQUNMQyxRQUFPO29CQUNQQyxTQUFROztzQ0FFUiw4REFBQ0M7NEJBQ0NDLGVBQWM7NEJBQ2RDLGdCQUFlOzRCQUNmQyxhQUFhOzRCQUNiQyxHQUFFOzs7Ozs7c0NBRUosOERBQUNKOzRCQUNDQyxlQUFjOzRCQUNkQyxnQkFBZTs0QkFDZkMsYUFBYTs0QkFDYkMsR0FBRTs7Ozs7Ozs7Ozs7OzhCQUdOLDhEQUFDQztvQkFBS1gsV0FBVTs4QkFBdUQ7Ozs7Ozs4QkFLdkUsOERBQUNEO29CQUFJQyxXQUFVOzt3QkFDWkYsU0FBU2MsVUFBVSxrQkFDbEIsOERBQUNiOzRCQUFJQyxXQUFVOzRCQUFtQ2EsT0FBTTs7Ozs7O3dCQUV6RCxDQUFDZixTQUFTZ0IsV0FBVyxrQkFDcEIsOERBQUNmOzRCQUFJQyxXQUFVOzRCQUFvQ2EsT0FBTTs7Ozs7O3dCQUUxRCxDQUFDZixTQUFTaUIsaUJBQWlCLGtCQUMxQiw4REFBQ2hCOzRCQUFJQyxXQUFVOzRCQUFxQ2EsT0FBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNdEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2NvbXBvbmVudHMvc2hhcmVkL0dsb2JhbENvbnRyb2xzTmF2LnRzeD80ZWUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyB1c2VBcHBDb250ZXh0IH0gZnJvbSAnQC9saWIvY29udGV4dC9BcHBDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2xvYmFsQ29udHJvbHNOYXYoKSB7XG4gIGNvbnN0IHsgc2V0dGluZ3MgfSA9IHVzZUFwcENvbnRleHQoKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgdG9wLTQgbGVmdC00IHotNTBcIj5cbiAgICAgIDxMaW5rXG4gICAgICAgIGhyZWY9XCIvYWRtaW4vY29udHJvbHNcIlxuICAgICAgICBjbGFzc05hbWU9XCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcHgtNCBweS0yIGJnLXdoaXRlIGRhcms6YmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBkYXJrOmJvcmRlci1ncmF5LTYwMCByb3VuZGVkLWxnIHNoYWRvdy1sZyBob3ZlcjpiZy1ncmF5LTUwIGRhcms6aG92ZXI6YmctZ3JheS03MDAgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMjAwXCJcbiAgICAgID5cbiAgICAgICAgPHN2Z1xuICAgICAgICAgIGNsYXNzTmFtZT1cInctNSBoLTUgbXItMiB0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTMwMFwiXG4gICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgID5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIlxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9ezJ9XG4gICAgICAgICAgICBkPVwiTTEwLjMyNSA0LjMxN2MuNDI2LTEuNzU2IDIuOTI0LTEuNzU2IDMuMzUgMGExLjcyNCAxLjcyNCAwIDAwMi41NzMgMS4wNjZjMS41NDMtLjk0IDMuMzEuODI2IDIuMzcgMi4zN2ExLjcyNCAxLjcyNCAwIDAwMS4wNjUgMi41NzJjMS43NTYuNDI2IDEuNzU2IDIuOTI0IDAgMy4zNWExLjcyNCAxLjcyNCAwIDAwLTEuMDY2IDIuNTczYy45NCAxLjU0My0uODI2IDMuMzEtMi4zNyAyLjM3YTEuNzI0IDEuNzI0IDAgMDAtMi41NzIgMS4wNjVjLS40MjYgMS43NTYtMi45MjQgMS43NTYtMy4zNSAwYTEuNzI0IDEuNzI0IDAgMDAtMi41NzMtMS4wNjZjLTEuNTQzLjk0LTMuMzEtLjgyNi0yLjM3LTIuMzdhMS43MjQgMS43MjQgMCAwMC0xLjA2NS0yLjU3MmMtMS43NTYtLjQyNi0xLjc1Ni0yLjkyNCAwLTMuMzVhMS43MjQgMS43MjQgMCAwMDEuMDY2LTIuNTczYy0uOTQtMS41NDMuODI2LTMuMzEgMi4zNy0yLjM3Ljk5Ni42MDggMi4yOTYuMDcgMi41NzItMS4wNjV6XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBzdHJva2VMaW5lY2FwPVwicm91bmRcIlxuICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgICAgICBzdHJva2VXaWR0aD17Mn1cbiAgICAgICAgICAgIGQ9XCJNMTUgMTJhMyAzIDAgMTEtNiAwIDMgMyAwIDAxNiAwelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBkYXJrOnRleHQtZ3JheS0zMDBcIj5cbiAgICAgICAgICBHbG9iYWwgQ29udHJvbHNcbiAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgey8qIFN0YXR1cyBpbmRpY2F0b3JzICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTIgZmxleCBzcGFjZS14LTFcIj5cbiAgICAgICAgICB7c2V0dGluZ3MuaXNEYXJrTW9kZSAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMiBoLTIgYmctYmx1ZS01MDAgcm91bmRlZC1mdWxsXCIgdGl0bGU9XCJEYXJrIE1vZGUgQWN0aXZlXCIgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHshc2V0dGluZ3MudXNlVGVzdERhdGEgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTIgaC0yIGJnLWdyZWVuLTUwMCByb3VuZGVkLWZ1bGxcIiB0aXRsZT1cIkxpdmUgRGF0YSBBY3RpdmVcIiAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAgeyFzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMiBoLTIgYmcteWVsbG93LTUwMCByb3VuZGVkLWZ1bGxcIiB0aXRsZT1cIkF1dG8gUGxheSBEaXNhYmxlZFwiIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0xpbms+XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkxpbmsiLCJ1c2VBcHBDb250ZXh0IiwiR2xvYmFsQ29udHJvbHNOYXYiLCJzZXR0aW5ncyIsImRpdiIsImNsYXNzTmFtZSIsImhyZWYiLCJzdmciLCJmaWxsIiwic3Ryb2tlIiwidmlld0JveCIsInBhdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJzcGFuIiwiaXNEYXJrTW9kZSIsInRpdGxlIiwidXNlVGVzdERhdGEiLCJpc0F1dG9QbGF5RW5hYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/shared/GlobalControlsNav.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/context/AppContext.tsx":
/*!****************************************!*\
  !*** ./src/lib/context/AppContext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: () => (/* binding */ AppProvider),\n/* harmony export */   useAppContext: () => (/* binding */ useAppContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AppProvider,useAppContext auto */ \n\n// Default light mode colors\nconst defaultLightColors = {\n    years_at_medtronic: {\n        \"0-5\": \"#FF6B6B\",\n        \"6-10\": \"#4ECDC4\",\n        \"11-15\": \"#45B7D1\",\n        \"16-20\": \"#96CEB4\",\n        \"20+\": \"#FFEAA7\"\n    },\n    peak_performance: {\n        \"individual\": \"#FF6B6B\",\n        \"innovation\": \"#4ECDC4\",\n        \"leadership\": \"#45B7D1\",\n        \"crisis\": \"#96CEB4\",\n        \"team\": \"#FFEAA7\"\n    },\n    learning_style: {\n        \"visual\": \"#FF6B6B\",\n        \"auditory\": \"#4ECDC4\",\n        \"kinesthetic\": \"#45B7D1\",\n        \"reading_writing\": \"#96CEB4\"\n    },\n    motivation: {\n        \"autonomy\": \"#FF6B6B\",\n        \"recognition\": \"#4ECDC4\",\n        \"impact\": \"#45B7D1\",\n        \"purpose\": \"#96CEB4\",\n        \"growth\": \"#FFEAA7\"\n    },\n    shaped_by: {\n        \"mentor\": \"#FF6B6B\",\n        \"other\": \"#4ECDC4\",\n        \"failure\": \"#45B7D1\",\n        \"education\": \"#96CEB4\",\n        \"challenge\": \"#FFEAA7\"\n    }\n};\n// Default dark mode colors - enhanced versions with better contrast\nconst defaultDarkColors = {\n    years_at_medtronic: {\n        \"0-5\": \"#FF8A8A\",\n        \"6-10\": \"#6EDCD4\",\n        \"11-15\": \"#65C7F1\",\n        \"16-20\": \"#B6DEC4\",\n        \"20+\": \"#FFED87\"\n    },\n    peak_performance: {\n        \"individual\": \"#FF8A8A\",\n        \"innovation\": \"#6EDCD4\",\n        \"leadership\": \"#65C7F1\",\n        \"crisis\": \"#B6DEC4\",\n        \"team\": \"#FFED87\"\n    },\n    learning_style: {\n        \"visual\": \"#FF8A8A\",\n        \"auditory\": \"#6EDCD4\",\n        \"kinesthetic\": \"#65C7F1\",\n        \"reading_writing\": \"#B6DEC4\"\n    },\n    motivation: {\n        \"autonomy\": \"#FF8A8A\",\n        \"recognition\": \"#6EDCD4\",\n        \"impact\": \"#65C7F1\",\n        \"purpose\": \"#B6DEC4\",\n        \"growth\": \"#FFED87\"\n    },\n    shaped_by: {\n        \"mentor\": \"#FF8A8A\",\n        \"other\": \"#6EDCD4\",\n        \"failure\": \"#65C7F1\",\n        \"education\": \"#B6DEC4\",\n        \"challenge\": \"#FFED87\"\n    }\n};\n// Default settings\nconst defaultSettings = {\n    categoryColors: {\n        light: defaultLightColors,\n        dark: defaultDarkColors\n    },\n    isDarkMode: false,\n    useTestData: true,\n    autoPlaySpeed: 5000,\n    isAutoPlayEnabled: true\n};\n// Create the context\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component\nconst AppProvider = ({ children })=>{\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultSettings);\n    const updateCategoryColor = (category, answer, color, theme)=>{\n        const targetTheme = theme || (settings.isDarkMode ? \"dark\" : \"light\");\n        setSettings((prev)=>({\n                ...prev,\n                categoryColors: {\n                    ...prev.categoryColors,\n                    [targetTheme]: {\n                        ...prev.categoryColors[targetTheme],\n                        [category]: {\n                            ...prev.categoryColors[targetTheme][category],\n                            [answer]: color\n                        }\n                    }\n                }\n            }));\n    };\n    const toggleDarkMode = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                isDarkMode: !prev.isDarkMode\n            }));\n    };\n    const toggleTestData = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                useTestData: !prev.useTestData\n            }));\n    };\n    const updateAutoPlaySpeed = (speed)=>{\n        setSettings((prev)=>({\n                ...prev,\n                autoPlaySpeed: speed\n            }));\n    };\n    const toggleAutoPlay = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                isAutoPlayEnabled: !prev.isAutoPlayEnabled\n            }));\n    };\n    const resetToDefaults = ()=>{\n        setSettings(defaultSettings);\n    };\n    const getCurrentThemeColors = ()=>{\n        return settings.isDarkMode ? settings.categoryColors.dark : settings.categoryColors.light;\n    };\n    const value = {\n        settings,\n        updateCategoryColor,\n        toggleDarkMode,\n        toggleTestData,\n        updateAutoPlaySpeed,\n        toggleAutoPlay,\n        resetToDefaults,\n        getCurrentThemeColors\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\lib\\\\context\\\\AppContext.tsx\",\n        lineNumber: 207,\n        columnNumber: 5\n    }, undefined);\n};\n// Custom hook to use the context\nconst useAppContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (context === undefined) {\n        throw new Error(\"useAppContext must be used within an AppProvider\");\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/context/AppContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase/client */ \"(ssr)/./src/lib/supabase/client.ts\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// Deprecated: use src/lib/supabase/client.ts instead\n\n\nconst supabaseUrl = \"https://hdnyomaryleszrjbuprt.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHFEQUFxRDtBQUNuQjtBQUVtQjtBQUVyRCxNQUFNQyxjQUFjQywwQ0FBb0MsSUFBSTtBQUM1RCxNQUFNRyxrQkFBa0JILGtOQUF5QyxJQUFJO0FBRTlELE1BQU1LLFdBQVdQLG1FQUFZQSxDQUFDQyxhQUFhSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2xpYi9zdXBhYmFzZS50cz8wNmUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlcHJlY2F0ZWQ6IHVzZSBzcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cyBpbnN0ZWFkXG5leHBvcnQgKiBmcm9tICcuL3N1cGFiYXNlL2NsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJyc7XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTsgIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabase/client.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/client.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Use this file as the single source for the Supabase client throughout the app.\nconsole.log(\"SUPABASE URL:\", \"https://hdnyomaryleszrjbuprt.supabase.co\");\nconsole.log(\"SUPABASE ANON KEY:\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\");\nif (false) {}\nif (false) {}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://hdnyomaryleszrjbuprt.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\", {\n    auth: {\n        persistSession: true,\n        autoRefreshToken: true,\n        detectSessionInUrl: true\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUdyRCxpRkFBaUY7QUFFakZDLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJDLDBDQUFvQztBQUNqRUYsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQkMsa05BQXlDO0FBRTNFLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELElBQUksS0FBMEMsRUFBRSxFQUUvQztBQUVNLE1BQU1LLFdBQVdSLG1FQUFZQSxDQUNsQ0csMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7SUFDRU0sTUFBTTtRQUNKQyxnQkFBZ0I7UUFDaEJDLGtCQUFrQjtRQUNsQkMsb0JBQW9CO0lBQ3RCO0FBQ0YsR0FDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cz8wZjk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5pbXBvcnQgdHlwZSB7IERhdGFiYXNlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8vIFVzZSB0aGlzIGZpbGUgYXMgdGhlIHNpbmdsZSBzb3VyY2UgZm9yIHRoZSBTdXBhYmFzZSBjbGllbnQgdGhyb3VnaG91dCB0aGUgYXBwLlxuXG5jb25zb2xlLmxvZygnU1VQQUJBU0UgVVJMOicsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCk7XG5jb25zb2xlLmxvZygnU1VQQUJBU0UgQU5PTiBLRVk6JywgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkpO1xuXG5pZiAoIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcpO1xufVxuaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJyk7XG59XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudDxEYXRhYmFzZT4oXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcbiAge1xuICAgIGF1dGg6IHtcbiAgICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLFxuICAgICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcbiAgICAgIGRldGVjdFNlc3Npb25JblVybDogdHJ1ZSxcbiAgICB9LFxuICB9XG4pOyAiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsIkVycm9yIiwic3VwYWJhc2UiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwiZGV0ZWN0U2Vzc2lvbkluVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"4d1036911b6d\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/MTVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjRkMTAzNjkxMWI2ZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers */ \"(rsc)/./src/app/providers.tsx\");\n\n\n\n\nconst metadata = {\n    title: \"Medtronic WE Summit\",\n    description: \"Data visualization platform for the Medtronic WE Summit\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: (next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default().className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBS01BO0FBSGlCO0FBQ21CO0FBSW5DLE1BQU1FLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFFO0FBRWEsU0FBU0MsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7UUFBS0MsV0FBV1QsK0pBQWU7a0JBQ3hDLDRFQUFDVTtzQkFDQyw0RUFBQ1Qsa0RBQWVBOzBCQUNiSzs7Ozs7Ozs7Ozs7Ozs7OztBQUtYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvbGF5b3V0LnRzeD81N2E5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWV0YWRhdGEgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IEludGVyIH0gZnJvbSAnbmV4dC9mb250L2dvb2dsZSc7XG5pbXBvcnQgJy4vZ2xvYmFscy5jc3MnO1xuaW1wb3J0IENsaWVudFByb3ZpZGVycyBmcm9tICcuL3Byb3ZpZGVycyc7XG5cbmNvbnN0IGludGVyID0gSW50ZXIoeyBzdWJzZXRzOiBbJ2xhdGluJ10gfSk7XG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiAnTWVkdHJvbmljIFdFIFN1bW1pdCcsXG4gIGRlc2NyaXB0aW9uOiAnRGF0YSB2aXN1YWxpemF0aW9uIHBsYXRmb3JtIGZvciB0aGUgTWVkdHJvbmljIFdFIFN1bW1pdCcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59KSB7XG4gIHJldHVybiAoXG4gICAgPGh0bWwgbGFuZz1cImVuXCIgY2xhc3NOYW1lPXtpbnRlci5jbGFzc05hbWV9PlxuICAgICAgPGJvZHk+XG4gICAgICAgIDxDbGllbnRQcm92aWRlcnM+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0NsaWVudFByb3ZpZGVycz5cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJpbnRlciIsIkNsaWVudFByb3ZpZGVycyIsIm1ldGFkYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIlJvb3RMYXlvdXQiLCJjaGlsZHJlbiIsImh0bWwiLCJsYW5nIiwiY2xhc3NOYW1lIiwiYm9keSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$typeof: () => (/* binding */ $$typeof),
/* harmony export */   __esModule: () => (/* binding */ __esModule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\app\providers.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__default__);

/***/ }),

/***/ "(rsc)/./src/app/visualization/page.tsx":
/*!****************************************!*\
  !*** ./src/app/visualization/page.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VisualizationPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_DataVisualization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/DataVisualization */ \"(rsc)/./src/components/DataVisualization/index.tsx\");\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/Layout */ \"(rsc)/./src/components/Layout.tsx\");\n\n\n\nfunction VisualizationPage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"fixed inset-0 w-screen h-screen bg-gray-50 z-0\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_DataVisualization__WEBPACK_IMPORTED_MODULE_1__.DataVisualization, {}, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                    lineNumber: 8,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute top-4 left-4 z-50\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center space-x-2 px-3 py-2 bg-white border border-gray-200 rounded-lg shadow-lg\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-2 h-2 bg-yellow-400 rounded-full animate-pulse\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                                lineNumber: 13,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-sm font-medium text-gray-800\",\n                                children: \"Light Mode\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                                lineNumber: 14,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                href: \"/visualization/dark\",\n                                className: \"text-xs text-blue-600 hover:text-blue-500 underline\",\n                                children: \"Dark Mode\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                                lineNumber: 15,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                        lineNumber: 12,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n            lineNumber: 7,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3Zpc3VhbGl6YXRpb24vcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1FO0FBQzFCO0FBRTFCLFNBQVNFO0lBQ3RCLHFCQUNFLDhEQUFDRCwwREFBTUE7a0JBQ0wsNEVBQUNFO1lBQUlDLFdBQVU7OzhCQUNiLDhEQUFDSiw0RUFBaUJBOzs7Ozs4QkFHbEIsOERBQUNHO29CQUFJQyxXQUFVOzhCQUNiLDRFQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNEO2dDQUFJQyxXQUFVOzs7Ozs7MENBQ2YsOERBQUNDO2dDQUFLRCxXQUFVOzBDQUFvQzs7Ozs7OzBDQUNwRCw4REFBQ0U7Z0NBQ0NDLE1BQUs7Z0NBQ0xILFdBQVU7MENBQ1g7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRYiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvYXBwL3Zpc3VhbGl6YXRpb24vcGFnZS50c3g/NTE3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhVmlzdWFsaXphdGlvbiB9IGZyb20gJ0AvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJ0AvY29tcG9uZW50cy9MYXlvdXQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBWaXN1YWxpemF0aW9uUGFnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBpbnNldC0wIHctc2NyZWVuIGgtc2NyZWVuIGJnLWdyYXktNTAgei0wXCI+XG4gICAgICAgIDxEYXRhVmlzdWFsaXphdGlvbiAvPlxuICAgICAgICBcbiAgICAgICAgey8qIExpZ2h0IG1vZGUgaW5kaWNhdG9yIC0gbW92ZWQgdG8gZmFyIGxlZnQgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJzb2x1dGUgdG9wLTQgbGVmdC00IHotNTBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMiBweC0zIHB5LTIgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLWxnIHNoYWRvdy1sZ1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTIgaC0yIGJnLXllbGxvdy00MDAgcm91bmRlZC1mdWxsIGFuaW1hdGUtcHVsc2VcIj48L2Rpdj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTgwMFwiPkxpZ2h0IE1vZGU8L3NwYW4+XG4gICAgICAgICAgICA8YSBcbiAgICAgICAgICAgICAgaHJlZj1cIi92aXN1YWxpemF0aW9uL2RhcmtcIiBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWJsdWUtNjAwIGhvdmVyOnRleHQtYmx1ZS01MDAgdW5kZXJsaW5lXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgRGFyayBNb2RlXG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJEYXRhVmlzdWFsaXphdGlvbiIsIkxheW91dCIsIlZpc3VhbGl6YXRpb25QYWdlIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiIsImEiLCJocmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/visualization/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/DataVisualization/index.tsx":
/*!****************************************************!*\
  !*** ./src/components/DataVisualization/index.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataVisualization: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\DataVisualization\index.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\DataVisualization\index.tsx#DataVisualization`);


/***/ }),

/***/ "(rsc)/./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$typeof: () => (/* binding */ $$typeof),
/* harmony export */   __esModule: () => (/* binding */ __esModule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\Layout.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__default__);

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/d3-array","vendor-chunks/d3-shape","vendor-chunks/d3-geo","vendor-chunks/@supabase","vendor-chunks/d3-selection","vendor-chunks/d3-scale-chromatic","vendor-chunks/d3-hierarchy","vendor-chunks/d3-transition","vendor-chunks/d3-interpolate","vendor-chunks/d3-scale","vendor-chunks/d3-random","vendor-chunks/d3-format","vendor-chunks/d3-quadtree","vendor-chunks/ws","vendor-chunks/d3-sankey","vendor-chunks/d3-time","vendor-chunks/d3-force","vendor-chunks/d3-ease","vendor-chunks/d3-contour","vendor-chunks/d3-fetch","vendor-chunks/d3-polygon","vendor-chunks/robust-predicates","vendor-chunks/d3-zoom","vendor-chunks/d3-drag","vendor-chunks/d3-color","vendor-chunks/d3-chord","vendor-chunks/lucide-react","vendor-chunks/d3-time-format","vendor-chunks/d3-dsv","vendor-chunks/d3-delaunay","vendor-chunks/d3-brush","vendor-chunks/whatwg-url","vendor-chunks/jose","vendor-chunks/d3-timer","vendor-chunks/d3-axis","vendor-chunks/isows","vendor-chunks/d3-path","vendor-chunks/d3-dispatch","vendor-chunks/tr46","vendor-chunks/internmap","vendor-chunks/delaunator","vendor-chunks/d3","vendor-chunks/webidl-conversions","vendor-chunks/set-cookie-parser"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();