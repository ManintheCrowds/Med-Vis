/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/visualization/page";
exports.ids = ["app/visualization/page"];
exports.modules = {

/***/ "./action-async-storage.external":
/*!****************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external");

/***/ }),

/***/ "./request-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist\\client\\components\\action-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist\\client\\components\\request-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!*********************************************************************************************!*\
  !*** external "next/dist\\client\\components\\static-generation-async-storage.external.js" ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist\\client\\components\\static-generation-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?9d97\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\"TURBOPACK { transition: next-ssr }\";\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'visualization',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/visualization/page.tsx */ \"(rsc)/./src/app/visualization/page.tsx\")), \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\")), \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/visualization/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/visualization/page\",\n        pathname: \"/visualization\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZ2aXN1YWxpemF0aW9uJTJGcGFnZSZwYWdlPSUyRnZpc3VhbGl6YXRpb24lMkZwYWdlJmFwcFBhdGhzPSUyRnZpc3VhbGl6YXRpb24lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGdmlzdWFsaXphdGlvbiUyRnBhZ2UudHN4JmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsYUFBYSxzQkFBc0I7QUFDaUU7QUFDckM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLHVCQUF1Qiw0S0FBeUg7QUFDaEo7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx5QkFBeUIsb0pBQTRHO0FBQ3JJLG9CQUFvQiwwTkFBZ0Y7QUFDcEc7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ08sd0JBQXdCLDhHQUFrQjtBQUNqRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Lz84OWQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwiVFVSQk9QQUNLIHsgdHJhbnNpdGlvbjogbmV4dC1zc3IgfVwiO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXBhZ2UvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJ3Zpc3VhbGl6YXRpb24nLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHZpc3VhbGl6YXRpb25cXFxccGFnZS50c3hcIiksIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGFwcFxcXFx2aXN1YWxpemF0aW9uXFxcXHBhZ2UudHN4XCJdLFxuICAgICAgICAgIFxuICAgICAgICB9XVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXGxheW91dC50c3hcIiksIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGFwcFxcXFxsYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIiksIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHZpc3VhbGl6YXRpb25cXFxccGFnZS50c3hcIl07XG5leHBvcnQgeyB0cmVlLCBwYWdlcyB9O1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHbG9iYWxFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcnlcIjtcbmNvbnN0IF9fbmV4dF9hcHBfcmVxdWlyZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfX1xuY29uc3QgX19uZXh0X2FwcF9sb2FkX2NodW5rX18gPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoKVxuZXhwb3J0IGNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi92aXN1YWxpemF0aW9uL3BhZ2VcIjtcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvdmlzdWFsaXphdGlvbi9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi92aXN1YWxpemF0aW9uXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCIsXG4gICAgICAgIGFwcFBhdGhzOiBbXVxuICAgIH0sXG4gICAgdXNlcmxhbmQ6IHtcbiAgICAgICAgbG9hZGVyVHJlZTogdHJlZVxuICAgIH1cbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js */ \"(ssr)/./node_modules/next/dist/client/components/static-generation-searchparams-bailout-provider.js\", 23))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNhcHAtcm91dGVyLmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNlcnJvci1ib3VuZGFyeS5qcyZtb2R1bGVzPUMlM0ElNUNVc2VycyU1Q2FydGluJTVDRG93bmxvYWRzJTVDTUVEVFJPTklDJTVDTUVEVFJPTklDJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDbGF5b3V0LXJvdXRlci5qcyZtb2R1bGVzPUMlM0ElNUNVc2VycyU1Q2FydGluJTVDRG93bmxvYWRzJTVDTUVEVFJPTklDJTVDTUVEVFJPTklDJTVDbm9kZV9tb2R1bGVzJTVDbmV4dCU1Q2Rpc3QlNUNjbGllbnQlNUNjb21wb25lbnRzJTVDbm90LWZvdW5kLWJvdW5kYXJ5LmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZGlzdCU1Q2NsaWVudCU1Q2NvbXBvbmVudHMlNUNzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qcyZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQW1KO0FBQ25KLDBPQUF1SjtBQUN2Six3T0FBc0o7QUFDdEosa1BBQTJKO0FBQzNKLHNRQUFxSztBQUNySyIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvPzY5ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGFwcC1yb3V0ZXIuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxub3QtZm91bmQtYm91bmRhcnkuanNcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXGFydGluXFxcXERvd25sb2Fkc1xcXFxNRURUUk9OSUNcXFxcTUVEVFJPTklDXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxccmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxzdGF0aWMtZ2VuZXJhdGlvbi1zZWFyY2hwYXJhbXMtYmFpbG91dC1wcm92aWRlci5qc1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Capp-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cerror-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Clayout-router.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cnot-found-boundary.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Crender-from-template-context.js&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cdist%5Cclient%5Ccomponents%5Cstatic-generation-searchparams-bailout-provider.js&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/providers.tsx */ \"(ssr)/./src/app/providers.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNub2RlX21vZHVsZXMlNUNuZXh0JTVDZm9udCU1Q2dvb2dsZSU1Q3RhcmdldC5jc3MlM0YlN0IlMjJwYXRoJTIyJTNBJTIyc3JjJTVDJTVDYXBwJTVDJTVDbGF5b3V0LnRzeCUyMiUyQyUyMmltcG9ydCUyMiUzQSUyMkludGVyJTIyJTJDJTIyYXJndW1lbnRzJTIyJTNBJTVCJTdCJTIyc3Vic2V0cyUyMiUzQSU1QiUyMmxhdGluJTIyJTVEJTdEJTVEJTJDJTIydmFyaWFibGVOYW1lJTIyJTNBJTIyaW50ZXIlMjIlN0QmbW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2FwcCU1Q2dsb2JhbHMuY3NzJm1vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNzcmMlNUNhcHAlNUNwcm92aWRlcnMudHN4JnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvPzI0N2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcYXBwXFxcXHByb3ZpZGVycy50c3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Cnode_modules%5Cnext%5Cfont%5Cgoogle%5Ctarget.css%3F%7B%22path%22%3A%22src%5C%5Capp%5C%5Clayout.tsx%22%2C%22import%22%3A%22Inter%22%2C%22arguments%22%3A%5B%7B%22subsets%22%3A%5B%22latin%22%5D%7D%5D%2C%22variableName%22%3A%22inter%22%7D&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cglobals.css&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp%5Cproviders.tsx&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/DataVisualization/index.tsx */ \"(ssr)/./src/components/DataVisualization/index.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/Layout.tsx */ \"(ssr)/./src/components/Layout.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9QyUzQSU1Q1VzZXJzJTVDYXJ0aW4lNUNEb3dubG9hZHMlNUNNRURUUk9OSUMlNUNNRURUUk9OSUMlNUNzcmMlNUNjb21wb25lbnRzJTVDRGF0YVZpc3VhbGl6YXRpb24lNUNpbmRleC50c3gmbW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNhcnRpbiU1Q0Rvd25sb2FkcyU1Q01FRFRST05JQyU1Q01FRFRST05JQyU1Q3NyYyU1Q2NvbXBvbmVudHMlNUNMYXlvdXQudHN4JnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvTUFBcUk7QUFDckkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Lz8wOTNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcYXJ0aW5cXFxcRG93bmxvYWRzXFxcXE1FRFRST05JQ1xcXFxNRURUUk9OSUNcXFxcc3JjXFxcXGNvbXBvbmVudHNcXFxcRGF0YVZpc3VhbGl6YXRpb25cXFxcaW5kZXgudHN4XCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxhcnRpblxcXFxEb3dubG9hZHNcXFxcTUVEVFJPTklDXFxcXE1FRFRST05JQ1xcXFxzcmNcXFxcY29tcG9uZW50c1xcXFxMYXlvdXQudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CDataVisualization%5Cindex.tsx&modules=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Ccomponents%5CLayout.tsx&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClientProviders)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction ClientProviders({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_1__.AppProvider, {\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\providers.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL3Byb3ZpZGVycy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFdUQ7QUFFeEMsU0FBU0MsZ0JBQWdCLEVBQUVDLFFBQVEsRUFBaUM7SUFDakYscUJBQ0UsOERBQUNGLGdFQUFXQTtrQkFDVEU7Ozs7OztBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvcHJvdmlkZXJzLnRzeD85MzI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBBcHBQcm92aWRlciB9IGZyb20gJ0AvbGliL2NvbnRleHQvQXBwQ29udGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENsaWVudFByb3ZpZGVycyh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gIHJldHVybiAoXG4gICAgPEFwcFByb3ZpZGVyPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXBwUHJvdmlkZXI+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJBcHBQcm92aWRlciIsIkNsaWVudFByb3ZpZGVycyIsImNoaWxkcmVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/providers.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx":
/*!**************************************************************!*\
  !*** ./src/components/DataVisualization/AlluvialDiagram.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AlluvialDiagram)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n/* harmony import */ var d3_sankey__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-sankey */ \"(ssr)/./node_modules/d3-sankey/src/index.js\");\n/* harmony import */ var _shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/useVisualizationData */ \"(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\");\n/* harmony import */ var _shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/colorUtils */ \"(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* harmony import */ var _colorConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../colorConfig */ \"(ssr)/./src/components/colorConfig.ts\");\n/**\n * @fileoverview AlluvialDiagram Component - Interactive Sankey Flow Visualization\n * \n * This component creates an interactive Sankey (Alluvial) diagram using D3.js to visualize\n * flow relationships between different categories in survey data. It features:\n * \n * - Responsive design with ResizeObserver\n * - Dynamic node sizing based on data volume\n * - Animated transitions between different data views\n * - Interactive highlighting and filtering\n * - Theme-aware styling (dark/light mode)\n * - Accessibility features and error handling\n * \n * @author Medtronic WE Summit Team\n * @version 2.0.0\n * @since 1.0.0\n */ /* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n// import { QuestionSelector } from './shared/QuestionSelector'; // Temporarily disabled\n\n\n/**\n * Available survey fields for visualization\n */ const availableFields = [\n    {\n        value: \"years_at_medtronic\",\n        label: \"Years at Medtronic\"\n    },\n    {\n        value: \"learning_style\",\n        label: \"Learning Style\"\n    },\n    {\n        value: \"shaped_by\",\n        label: \"Shaped By\"\n    },\n    {\n        value: \"peak_performance\",\n        label: \"Peak Performance\"\n    },\n    {\n        value: \"motivation\",\n        label: \"Motivation\"\n    }\n];\n/**\n * Years at Medtronic category definitions\n */ const YEARS_CATEGORIES = [\n    \"0-5\",\n    \"6-10\",\n    \"11-15\",\n    \"16-20\",\n    \"20+\"\n];\n/**\n * Converts numeric years to category string with validation\n * @param years - Number of years at Medtronic\n * @returns Category string\n */ const getValidYearsCategory = (years)=>{\n    if (typeof years !== \"number\" || isNaN(years) || years < 0) return \"0-5\";\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n};\n/**\n * Custom wave path generator for Sankey links with bounds checking\n * Creates a wavy path between source and target nodes for visual appeal\n * \n * @param d - Link data with source/target coordinates\n * @param waveAmplitude - Amplitude of the wave effect (default: 8)\n * @param waveFrequency - Frequency of the wave (default: 1.1)\n * @param chartWidth - Chart width for bounds checking (default: 800)\n * @param chartHeight - Chart height for bounds checking (default: 600)\n * @returns SVG path string\n */ function sankeyLinkWave(d, waveAmplitude = 8, waveFrequency = 1.1, chartWidth = 800, chartHeight = 600) {\n    // Extract coordinates from link data\n    let x0 = d.source.x1;\n    let x1 = d.target.x0;\n    let y0 = d.y0;\n    let y1 = d.y1;\n    // Clamp coordinates to chart bounds to prevent overflow\n    x0 = Math.max(0, Math.min(chartWidth, x0));\n    x1 = Math.max(0, Math.min(chartWidth, x1));\n    y0 = Math.max(0, Math.min(chartHeight, y0));\n    y1 = Math.max(0, Math.min(chartHeight, y1));\n    const midX = (x0 + x1) / 2;\n    // Add a sine wave to the control points, but ensure they stay within bounds\n    const waveY0 = Math.max(0, Math.min(chartHeight, y0 + waveAmplitude * Math.sin(waveFrequency * Math.PI * 0.25)));\n    const waveY1 = Math.max(0, Math.min(chartHeight, y1 + waveAmplitude * Math.sin(waveFrequency * Math.PI * 0.75)));\n    return `M${x0},${y0}\n    C${midX},${waveY0} ${midX},${waveY1} ${x1},${y1}`;\n}\n/**\n * Custom horizontal link generator that clamps y0/y1 to node bounds\n * Prevents links from extending beyond their source/target nodes\n * \n * @returns Function that generates SVG path for a link\n */ function clampedSankeyLinkHorizontal() {\n    return function(d) {\n        // Clamp y0/y1 to node bounds\n        const sy = Math.max(d.source.y0, Math.min(d.source.y1, d.y0));\n        const ty = Math.max(d.target.y0, Math.min(d.target.y1, d.y1));\n        const x0 = d.source.x1;\n        const x1 = d.target.x0;\n        // Use a cubic Bezier for smoothness\n        const curvature = 0.5;\n        const xi = d3__WEBPACK_IMPORTED_MODULE_2__.interpolateNumber(x0, x1);\n        const x2 = xi(curvature);\n        const x3 = xi(1 - curvature);\n        return `M${x0},${sy}C${x2},${sy} ${x3},${ty} ${x1},${ty}`;\n    };\n}\n/**\n * AlluvialDiagram Component\n * \n * Main component that renders an interactive Sankey diagram showing flow relationships\n * between survey response categories. Features responsive design, animations, and\n * interactive controls.\n * \n * @param props - Component props\n * @returns JSX element\n */ function AlluvialDiagram({ width = 800, height = 600, autoPlay = true, onQuestionChange }) {\n    // Responsive: use state for width/height, fallback to props\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [containerWidth, setContainerWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(width);\n    const [containerHeight, setContainerHeight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(height);\n    // Responsive: observe container size\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        const observer = new window.ResizeObserver((entries)=>{\n            for (let entry of entries){\n                if (entry.contentRect) {\n                    setContainerWidth(entry.contentRect.width);\n                    setContainerHeight(entry.contentRect.height);\n                }\n            }\n        });\n        observer.observe(containerRef.current);\n        return ()=>observer.disconnect();\n    }, []);\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { data, isLoading, error } = (0,_shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_4__.useVisualizationData)();\n    const { settings, getCurrentThemeColors } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__.useAppContext)();\n    const [currentSource, setCurrentSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"years_at_medtronic\");\n    const [currentTarget, setCurrentTarget] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"learning_style\");\n    // Filter data based on test data setting\n    const filteredData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(data) || !data.length) return [];\n        return settings.useTestData ? data : data.filter((item)=>!item.test_data);\n    }, [\n        data,\n        settings.useTestData\n    ]);\n    // Compute sources and targets with validation\n    const sources = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(filteredData) || !filteredData.length) return [];\n        if (currentSource === \"years_at_medtronic\") {\n            return YEARS_CATEGORIES.filter((cat)=>filteredData.some((d)=>getValidYearsCategory(d.years_at_medtronic || 0) === cat));\n        } else {\n            return Array.from(new Set(filteredData.map((d)=>d[currentSource]))).filter((value)=>typeof value === \"string\" && value.length > 0);\n        }\n    }, [\n        filteredData,\n        currentSource\n    ]);\n    const targets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!Array.isArray(filteredData) || !filteredData.length) return [];\n        if (currentTarget === \"years_at_medtronic\") {\n            return YEARS_CATEGORIES.filter((cat)=>filteredData.some((d)=>getValidYearsCategory(d.years_at_medtronic || 0) === cat));\n        } else {\n            // Sort target nodes consistently to maintain fixed positions\n            return Array.from(new Set(filteredData.map((d)=>currentTarget === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentTarget]))).filter((value)=>typeof value === \"string\" && value.length > 0).sort(); // Add consistent sorting\n        }\n    }, [\n        filteredData,\n        currentTarget\n    ]);\n    // --- Responsive chart sizing based on data size ---\n    // Set sensible min/max chart dimensions\n    const MIN_CHART_HEIGHT = 180;\n    const MAX_CHART_HEIGHT = 700;\n    const MIN_CHART_WIDTH = 320;\n    const MAX_CHART_WIDTH = 1400;\n    // Calculate node count for sizing\n    const nodeCount = Math.max(sources.length, targets.length, 1);\n    // --- Dynamic margin calculation for full label visibility (moved up) ---\n    // Helper to measure text width in px\n    function measureTextWidth(text, font) {\n        if (true) return 100; // fallback for SSR\n        if (!measureTextWidth._canvas) {\n            measureTextWidth._canvas = document.createElement(\"canvas\");\n        }\n        const canvas = measureTextWidth._canvas;\n        const context = canvas.getContext(\"2d\");\n        if (!context) return 100;\n        context.font = font;\n        return context.measureText(text).width;\n    }\n    // Dynamically scale label font size with node height (clamp between 12px and 28px)\n    const labelFontSize = Math.max(12, Math.min(28, Math.floor(nodeCount > 0 ? containerHeight / nodeCount * 0.5 : 16)));\n    // Font for measuring\n    const labelFont = `bold ${labelFontSize}px Avenir Next World, -apple-system, BlinkMacSystemFont, 'SF Pro', 'Roboto', sans-serif`;\n    const allLabels = [\n        ...sources,\n        ...targets\n    ];\n    const labelWidths = allLabels.map((label)=>measureTextWidth(label, labelFont));\n    const maxLabelWidth = Math.max(...labelWidths, 80); // fallback min\n    const labelPadding = 24;\n    // Reduce margins to prevent excessive gaps\n    // Prioritize negative space for dropdowns and index data categories\n    // Minimum left margin for dropdowns: 120px, but allow more for long labels\n    const minDropdownMargin = 120;\n    // Increase left margin to always accommodate the longest label plus extra padding for clarity\n    const extraLabelSpace = 40; // Extra space for visual comfort\n    const maxLeftMargin = 260; // Cap to prevent excessive margin\n    const margin = {\n        top: 60,\n        right: Math.max(Math.min(maxLabelWidth + labelPadding, 150), minDropdownMargin),\n        bottom: 20,\n        left: Math.min(maxLabelWidth + labelPadding + extraLabelSpace, maxLeftMargin)\n    };\n    // --- Sparse Data Tuning ---\n    // For sparse data, shrink chart and cap node/link size\n    let availableHeight = Math.max(MIN_CHART_HEIGHT, Math.min(containerHeight - 40, MAX_CHART_HEIGHT));\n    let maxNodeHeight = 48;\n    let maxLinkWidth = 32;\n    if (nodeCount <= 3) {\n        availableHeight = Math.max(MIN_CHART_HEIGHT, Math.min(220, availableHeight)); // Shrink chart height\n        maxNodeHeight = 28; // Cap node height\n        maxLinkWidth = 16; // Cap link thickness\n    }\n    if (nodeCount >= 10) {\n        availableHeight = Math.min(MAX_CHART_HEIGHT, Math.max(availableHeight, 500));\n    }\n    // Node height and padding logic\n    const minNodeHeight = 16;\n    const minPadding = 8;\n    let nodeHeight = Math.floor((availableHeight - (nodeCount + 1) * minPadding) / nodeCount);\n    nodeHeight = Math.max(minNodeHeight, Math.min(nodeHeight, maxNodeHeight));\n    let nodePadding = (availableHeight - nodeCount * nodeHeight) / (nodeCount + 1);\n    // Clamp nodePadding to a maximum to prevent excessive vertical gaps\n    nodePadding = Math.max(minPadding, Math.min(nodePadding, 40));\n    // Responsive chart width\n    let chartWidth = Math.max(MIN_CHART_WIDTH, Math.min(containerWidth - margin.left - margin.right, MAX_CHART_WIDTH));\n    let chartHeight = availableHeight;\n    // If very sparse, shrink width too\n    if (nodeCount <= 3) {\n        chartWidth = Math.max(MIN_CHART_WIDTH, Math.min(chartWidth, 420));\n    }\n    // If very dense, allow more width\n    if (nodeCount >= 10) {\n        chartWidth = Math.min(MAX_CHART_WIDTH, Math.max(chartWidth, 900));\n    }\n    // --- Sankey layout: ensure leftmost nodes are flush with the left edge ---\n    // The sankey extent is [[0,0],[chartWidth,chartHeight]] and the group transform is translate(margin.left, margin.top)\n    // This ensures x0=0 for leftmost nodes, so connectors start flush with the left edge of the chart area\n    // (No code change needed here if extent and transform are correct)\n    // Debug logging\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (sources.length === 0 || targets.length === 0) return;\n        console.log(\"=== ALLUVIAL DIAGRAM DEBUG ===\");\n        console.log(\"\\uD83D\\uDDA5️  Container Dimensions:\", containerWidth, \"x\", containerHeight);\n        console.log(\"\\uD83D\\uDCCF Margin:\", margin);\n        console.log(\"\\uD83D\\uDCCA Chart Dimensions:\", chartHeight, \"x\", chartHeight);\n        console.log(\"\\uD83C\\uDFAF Available Chart Space:\", chartHeight, \"x\", chartHeight);\n        console.log(\"\\uD83D\\uDCC8 Node Count - Sources:\", sources.length, \"Targets:\", targets.length);\n        console.log(\"\\uD83D\\uDD22 Node Height:\", nodeHeight, \"Node Padding:\", nodePadding);\n        console.log(\"\\uD83D\\uDD24 Label Font Size:\", labelFontSize);\n        console.log(\"\\uD83D\\uDCD0 Max Label Width:\", Math.max(...[\n            ...sources,\n            ...targets\n        ].map((label)=>measureTextWidth(label, `bold ${labelFontSize}px Avenir Next World, sans-serif`)), 80));\n        console.log(\"================================\");\n    }, [\n        containerWidth,\n        containerHeight,\n        chartHeight,\n        margin,\n        sources.length,\n        targets.length,\n        nodeHeight,\n        nodePadding,\n        labelFontSize\n    ]);\n    // Use refs to track current values without triggering re-renders\n    const currentSourceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(currentSource);\n    const currentTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(currentTarget);\n    // Update refs when state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        currentSourceRef.current = currentSource;\n    }, [\n        currentSource\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        currentTargetRef.current = currentTarget;\n    }, [\n        currentTarget\n    ]);\n    const [insights, setInsights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [hoveredNode, setHoveredNode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredLink, setHoveredLink] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastCategoryChange, setLastCategoryChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        source: currentSource,\n        target: currentTarget\n    });\n    const [currentTargetIndex, setCurrentTargetIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [hoveredSourceIndex, setHoveredSourceIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredTargetIndex, setHoveredTargetIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isInFullOpacityState, setIsInFullOpacityState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [animationPhase, setAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentSourceIndex: 0,\n        currentTargetIndex: 0,\n        isPaused: false,\n        pausedAt: Date.now(),\n        resumeFrom: null,\n        cycleCount: 0\n    });\n    // Check for reduced motion preference\n    const prefersReducedMotion = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (true) return false;\n        return window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\n    }, []);\n    // Adjust animation durations based on motion preference\n    const animationDurations = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const baseSpeed = settings.autoPlaySpeed || 3000;\n        const reductionFactor = prefersReducedMotion ? 0.5 : 1;\n        return {\n            stepDuration: Math.max(800, baseSpeed / 8 * reductionFactor),\n            pauseDuration: Math.max(400, baseSpeed / 12 * reductionFactor),\n            categoryPauseDuration: Math.max(1500, baseSpeed / 3 * reductionFactor),\n            linkTransitionDuration: prefersReducedMotion ? 400 : 750\n        };\n    }, [\n        settings.autoPlaySpeed,\n        prefersReducedMotion\n    ]);\n    // Get visual order of source nodes (top-to-bottom as they appear)\n    const sortedSources = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        if (!filteredData.length || !chartHeight || !chartHeight) return sources;\n        const sourcesForNodes = [\n            ...sources\n        ];\n        if (currentSource === \"years_at_medtronic\") {\n            sourcesForNodes.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sourcesForNodes.sort();\n        }\n        // Create Sankey layout to get visual order\n        const nodes = [\n            ...sourcesForNodes.map((name)=>({\n                    id: `${currentSource}:${name}`,\n                    name,\n                    category: currentSource\n                })),\n            ...targets.map((name)=>({\n                    id: `${currentTarget}:${name}`,\n                    name,\n                    category: currentTarget\n                }))\n        ];\n        const linksMap = new Map();\n        filteredData.forEach((d)=>{\n            const source = currentSource === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentSource];\n            const target = currentTarget === \"years_at_medtronic\" ? getValidYearsCategory(d.years_at_medtronic || 0) : d[currentTarget];\n            if (!sourcesForNodes.includes(source) || !targets.includes(target)) return;\n            const sourceId = `${currentSource}:${source}`;\n            const targetId = `${currentTarget}:${target}`;\n            const key = `${sourceId}→${targetId}`;\n            if (!linksMap.has(key)) {\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 0\n                });\n            }\n            linksMap.get(key).value += 1;\n        });\n        const links = Array.from(linksMap.values());\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartHeight,\n                chartHeight\n            ]\n        ]);\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        // Get source nodes in visual order (top to bottom)\n        const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource).sort((a, b)=>a.y0 - b.y0);\n        return sourceNodes.map((d)=>d.name);\n    }, [\n        filteredData,\n        sources,\n        targets,\n        currentSource,\n        currentTarget,\n        chartHeight,\n        nodePadding\n    ]);\n    // Enhanced animation function with comprehensive debug tracking\n    const animate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        // Check if animation is paused\n        if (animationRef.current.isPaused) {\n            console.log(\"⏸️  Animation is paused, skipping cycle\");\n            return;\n        }\n        if (!animationRef.current.running || !filteredData.length) {\n            console.log(\"❌ Animation stopped:\", {\n                running: animationRef.current.running,\n                dataLength: filteredData.length\n            });\n            return;\n        }\n        // Safety check: prevent infinite loops\n        if (animationRef.current.cycleCount > 1000) {\n            console.log(\"\\uD83D\\uDED1 Animation cycle limit reached, resetting\");\n            animationRef.current.cycleCount = 0;\n            animationRef.current.currentSourceIndex = 0;\n            animationRef.current.currentTargetIndex = 0;\n        }\n        // Increment cycle counter\n        animationRef.current.cycleCount++;\n        // Set animation phase to highlighting\n        setAnimationPhase(\"highlighting\");\n        setIsInFullOpacityState(false);\n        // Set the hovered source index to match the animation\n        setHoveredSourceIndex(animationRef.current.currentSourceIndex);\n        const targetOptions = availableFields.filter((f)=>f.value !== currentSourceRef.current).map((f)=>f.value);\n        // Debug: Log the target options to verify they're correct\n        if (animationRef.current.currentSourceIndex === 0) {\n            console.log(\"\\uD83C\\uDFAF Available target options for\", currentSourceRef.current, \":\", targetOptions);\n        }\n        // COMPREHENSIVE DEBUG: Log current state with full detail\n        console.log(\"\\uD83D\\uDD0D ANIMATION CYCLE DEBUG:\", {\n            \"\\uD83D\\uDCCD Current Position\": {\n                sourceIndex: animationRef.current.currentSourceIndex,\n                targetIndex: animationRef.current.currentTargetIndex,\n                sourceName: sortedSources[animationRef.current.currentSourceIndex],\n                targetName: currentTargetRef.current\n            },\n            \"\\uD83D\\uDCCA Categories\": {\n                currentSource: currentSourceRef.current,\n                currentTarget: currentTargetRef.current,\n                sourceOptions: availableFields.map((f)=>f.value),\n                targetOptions\n            },\n            \"\\uD83D\\uDCC8 Progress\": {\n                sourceProgress: `${animationRef.current.currentSourceIndex + 1}/${sortedSources.length}`,\n                targetProgress: `${animationRef.current.currentTargetIndex + 1}/${targetOptions.length}`,\n                isLastSource: animationRef.current.currentSourceIndex >= sortedSources.length - 1,\n                hasMoreTargets: animationRef.current.currentTargetIndex < targetOptions.length - 1\n            },\n            \"\\uD83C\\uDFAF Sources\": sortedSources,\n            \"\\uD83C\\uDFAF Targets\": targetOptions,\n            \"⏱️  Timings\": animationDurations\n        });\n        if (animationRef.current.currentSourceIndex < sortedSources.length - 1) {\n            // Move to next source\n            const nextTimeout = animationDurations.stepDuration + animationDurations.pauseDuration;\n            const progress = `${animationRef.current.currentSourceIndex + 1}/${sortedSources.length}`;\n            console.log(`🎯 Source ${progress}: Highlighting '${sortedSources[animationRef.current.currentSourceIndex]}' → '${currentTargetRef.current}' for ${nextTimeout}ms`);\n            animationRef.current.timer = setTimeout(()=>{\n                if (!animationRef.current.running || animationRef.current.isPaused) return;\n                animationRef.current.currentSourceIndex++;\n                animate();\n            }, nextTimeout);\n        } else {\n            // After last source, check if we need to cycle targets or change source category\n            console.log(\"\\uD83D\\uDD0D END OF SOURCES - Checking target cycling:\", {\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                targetOptionsLength: targetOptions.length,\n                hasMoreTargets: animationRef.current.currentTargetIndex < targetOptions.length - 1,\n                availableTargets: targetOptions\n            });\n            if (animationRef.current.currentTargetIndex < targetOptions.length - 1) {\n                // Still have more target categories to cycle through\n                const targetProgress = `${animationRef.current.currentTargetIndex + 2}/${targetOptions.length}`;\n                console.log(`🔄 ✅ COMPLETED ALL SOURCES for '${currentTargetRef.current}', moving to next target (${targetProgress})`);\n                // Clear any existing timer to prevent conflicts\n                if (animationRef.current.timer) {\n                    clearTimeout(animationRef.current.timer);\n                    animationRef.current.timer = null;\n                }\n                animationRef.current.timer = setTimeout(()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    setAnimationPhase(\"transitioning\");\n                    // Move to next target category\n                    animationRef.current.currentTargetIndex++;\n                    const nextTarget = targetOptions[animationRef.current.currentTargetIndex];\n                    console.log(\"\\uD83C\\uDFAF ✨ NEW TARGET CATEGORY:\", nextTarget, `(${animationRef.current.currentTargetIndex + 1}/${targetOptions.length})`);\n                    console.log(\"\\uD83D\\uDD0D Target progression debug:\", {\n                        previousTarget: currentTargetRef.current,\n                        nextTarget,\n                        currentTargetIndex: animationRef.current.currentTargetIndex,\n                        allTargetOptions: targetOptions\n                    });\n                    setCurrentTarget(nextTarget);\n                    setLastCategoryChange({\n                        source: currentSourceRef.current,\n                        target: nextTarget\n                    });\n                    onQuestionChange?.(currentSourceRef.current, nextTarget);\n                    // Reset source index and restart with new target\n                    animationRef.current.currentSourceIndex = 0;\n                    // Start the next cycle after a brief pause\n                    setTimeout(()=>{\n                        if (animationRef.current.running && !animationRef.current.isPaused) {\n                            animate();\n                        }\n                    }, animationDurations.categoryPauseDuration);\n                }, animationDurations.categoryPauseDuration);\n            } else {\n                // We've cycled through all targets, now change the source category\n                console.log(`🔄 ✨ COMPLETED ALL TARGETS for '${currentSourceRef.current}' - Moving to next source category! ✨`);\n                // Clear any existing timer to prevent conflicts\n                if (animationRef.current.timer) {\n                    clearTimeout(animationRef.current.timer);\n                    animationRef.current.timer = null;\n                }\n                animationRef.current.timer = setTimeout(()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    setAnimationPhase(\"transitioning\");\n                    // Move to next source category\n                    const sourceOptions = availableFields.map((f)=>f.value);\n                    const currentSourceIndex = sourceOptions.indexOf(currentSourceRef.current);\n                    const nextSourceIndex = (currentSourceIndex + 1) % sourceOptions.length;\n                    const nextSource = sourceOptions[nextSourceIndex];\n                    console.log(\"\\uD83C\\uDFAF \\uD83C\\uDD95 NEW SOURCE CATEGORY:\", nextSource, \"- Starting fresh cycle with all targets\");\n                    // Calculate target options for the NEW source (including years_at_medtronic)\n                    const newTargetOptions = availableFields.filter((f)=>f.value !== nextSource).map((f)=>f.value);\n                    console.log(\"\\uD83D\\uDD0D New target options for\", nextSource, \":\", newTargetOptions);\n                    setCurrentSource(nextSource);\n                    // Reset both indices and start with first target again\n                    animationRef.current.currentSourceIndex = 0;\n                    animationRef.current.currentTargetIndex = 0;\n                    const firstTarget = newTargetOptions[0];\n                    setCurrentTarget(firstTarget);\n                    setLastCategoryChange({\n                        source: nextSource,\n                        target: firstTarget\n                    });\n                    onQuestionChange?.(nextSource, firstTarget);\n                    // Start the next cycle after a longer pause\n                    setTimeout(()=>{\n                        if (animationRef.current.running && !animationRef.current.isPaused) {\n                            animate();\n                        }\n                    }, animationDurations.categoryPauseDuration * 1.5); // Longer pause for source category change\n                }, animationDurations.categoryPauseDuration);\n            }\n        }\n    }, [\n        data.length,\n        sortedSources.length,\n        onQuestionChange,\n        animationDurations,\n        availableFields\n    ]);\n    // Animation effect - restart when settings change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFAC Animation useEffect triggered:\", {\n            autoPlay,\n            isAutoPlayEnabled: settings.isAutoPlayEnabled,\n            dataLength: data.length,\n            svgRefExists: !!svgRef.current,\n            currentSource,\n            currentTarget,\n            autoPlaySpeed: settings.autoPlaySpeed,\n            isRunning: animationRef.current.running\n        });\n        if (!autoPlay || !settings.isAutoPlayEnabled) {\n            console.log(\"❌ Animation disabled\");\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setIsInFullOpacityState(true);\n            return;\n        }\n        if (!filteredData.length) {\n            console.log(\"❌ No data available for animation\");\n            return;\n        }\n        if (!svgRef.current) {\n            console.log(\"❌ SVG ref not available\");\n            return;\n        }\n        // Restart animation when speed changes or on major changes\n        if (animationRef.current.running) {\n            console.log(\"\\uD83D\\uDD04 Restarting animation with new settings:\", {\n                sourceCategory: currentSource,\n                totalSources: sortedSources.length,\n                totalTargets: availableFields.filter((f)=>f.value !== currentSource).length,\n                speed: settings.autoPlaySpeed + \"ms\"\n            });\n            // Stop current animation\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n        }\n        // Start new animation cycle\n        console.log(\"✅ Starting animation cycle:\", {\n            sourceCategory: currentSource,\n            totalSources: sortedSources.length,\n            totalTargets: availableFields.filter((f)=>f.value !== currentSource).length,\n            speed: settings.autoPlaySpeed + \"ms\"\n        });\n        // Initialize animation state\n        animationRef.current.running = true;\n        animationRef.current.currentSourceIndex = 0;\n        animationRef.current.currentTargetIndex = 0;\n        animationRef.current.cycleCount = 0; // Reset cycle counter\n        // Start animation\n        animate();\n        return ()=>{\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setIsInFullOpacityState(true);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        settings.autoPlaySpeed,\n        filteredData.length,\n        currentSource // Only restart on source changes, not target changes\n    ]);\n    const nodeLabelFontSize = 18; // larger for readability\n    const nodeLabelFontWeight = 700;\n    const nodeLabelColor = settings.isDarkMode ? \"#FFFFFF\" : \"#170F5F\";\n    const nodeLabelFontFamily = 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif';\n    const nodeLabelOffset = 24;\n    // Local debug toggle for this component if no global admin context\n    const [localDebug, setLocalDebug] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showThemeToggle, setShowThemeToggle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const debugOn = localDebug;\n    // Debug Sankey data for outlines\n    const [debugSankeyData, setDebugSankeyData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!Array.isArray(sources) || !Array.isArray(targets)) return;\n        const nodes = [\n            ...sources.map((name)=>({\n                    id: `source:${name}`,\n                    name,\n                    category: \"source\"\n                })),\n            ...targets.map((name)=>({\n                    id: `target:${name}`,\n                    name,\n                    category: \"target\"\n                }))\n        ];\n        // Only create links if both sides have at least one node\n        const links = sources.length && targets.length ? [\n            {\n                source: `source:${sources[0]}`,\n                target: `target:${targets[0]}`,\n                value: 1\n            }\n        ] : [];\n        if (nodes.length < 2 || links.length < 1) return; // Prevent invalid array length\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartHeight,\n                chartHeight\n            ]\n        ]);\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        setDebugSankeyData(sankeyData);\n    }, [\n        sources,\n        targets,\n        chartHeight,\n        nodePadding\n    ]);\n    // Render Sankey diagram\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !filteredData.length) return;\n        // --- Persistent SVG structure ---\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        svg.selectAll(\"*\").remove(); // Clear previous content\n        svg.attr(\"width\", containerWidth).attr(\"height\", containerHeight).attr(\"viewBox\", `0 0 ${containerWidth} ${containerHeight}`);\n        // --- Sankey node/link creation and vertical centering (deduplicated) ---\n        // Sort source nodes to maintain a fixed order (same as animation)\n        const sortedSources = [\n            ...sources\n        ];\n        if (currentSource === \"years_at_medtronic\") {\n            sortedSources.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sortedSources.sort();\n        }\n        // Sort target nodes to maintain a fixed order\n        const sortedTargets = [\n            ...targets\n        ];\n        if (currentTarget === \"years_at_medtronic\") {\n            sortedTargets.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else {\n            sortedTargets.sort();\n        }\n        // Sankey transformation accessors\n        const sourceAccessor = (d)=>currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n        const targetAccessor = (d)=>currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n        // Filter data to only include valid values\n        const validData = filteredData.filter((d)=>(currentSource !== \"years_at_medtronic\" || d.years_at_medtronic !== null) && (currentTarget !== \"years_at_medtronic\" || d.years_at_medtronic !== null));\n        // Debug data\n        console.log(\"\\uD83D\\uDCCA DATA DEBUG:\");\n        console.log(\"  Current source:\", currentSource, \"Current target:\", currentTarget);\n        console.log(\"  Filtered data count:\", filteredData.length);\n        console.log(\"  Valid data count:\", validData.length);\n        console.log(\"  Sources:\", sources);\n        console.log(\"  Targets:\", targets);\n        // Build nodes array with unique ids\n        const nodes = [\n            ...sortedSources.map((name)=>({\n                    id: `${currentSource}:${name}`,\n                    name,\n                    category: currentSource\n                })),\n            ...sortedTargets.map((name)=>({\n                    id: `${currentTarget}:${name}`,\n                    name,\n                    category: currentTarget\n                }))\n        ];\n        // Build links array (aggregate counts for each source-target pair)\n        const linksMap = new Map();\n        // 1. For every possible source-target pair, create a link (dummy if no data)\n        sortedSources.forEach((source)=>{\n            sortedTargets.forEach((target)=>{\n                const sourceId = `${currentSource}:${source}`;\n                const targetId = `${currentTarget}:${target}`;\n                const key = `${sourceId}→${targetId}`;\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 0,\n                    isDummy: true\n                });\n            });\n        });\n        // 2. Fill in real data, marking links as not dummy\n        validData.forEach((d)=>{\n            const source = sourceAccessor(d);\n            const target = targetAccessor(d);\n            if (!sortedSources.includes(source) || !sortedTargets.includes(target)) return;\n            const sourceId = `${currentSource}:${source}`;\n            const targetId = `${currentTarget}:${target}`;\n            const key = `${sourceId}→${targetId}`;\n            if (!linksMap.has(key)) {\n                linksMap.set(key, {\n                    source: sourceId,\n                    target: targetId,\n                    value: 1,\n                    isDummy: false\n                });\n            } else {\n                const link = linksMap.get(key);\n                link.value += 1;\n                link.isDummy = false;\n            }\n        });\n        // 3. Set dummy links to a very small value if still dummy\n        Array.from(linksMap.values()).forEach((link)=>{\n            if (link.isDummy) link.value = 0.0001;\n        });\n        // --- COLUMN HEIGHT NORMALIZATION ---\n        // Calculate total value for each side\n        const leftTotals = sortedSources.map((source)=>{\n            const sourceId = `${currentSource}:${source}`;\n            return Array.from(linksMap.values()).filter((l)=>l.source === sourceId).reduce((sum, l)=>sum + l.value, 0);\n        });\n        const rightTotals = sortedTargets.map((target)=>{\n            const targetId = `${currentTarget}:${target}`;\n            return Array.from(linksMap.values()).filter((l)=>l.target === targetId).reduce((sum, l)=>sum + l.value, 0);\n        });\n        const leftSum = leftTotals.reduce((a, b)=>a + b, 0);\n        const rightSum = rightTotals.reduce((a, b)=>a + b, 0);\n        // If sums are different, scale the smaller side's node values and link values\n        let leftScale = 1, rightScale = 1;\n        if (leftSum > 0 && rightSum > 0 && leftSum !== rightSum) {\n            if (leftSum > rightSum) {\n                rightScale = leftSum / rightSum;\n            } else {\n                leftScale = rightSum / leftSum;\n            }\n        }\n        // Scale links\n        Array.from(linksMap.values()).forEach((link)=>{\n            const sourceId = link.source;\n            const targetId = link.target;\n            if (leftScale !== 1 && sortedSources.some((s)=>`${currentSource}:${s}` === sourceId)) {\n                link.value *= leftScale;\n            }\n            if (rightScale !== 1 && sortedTargets.some((t)=>`${currentTarget}:${t}` === targetId)) {\n                link.value *= rightScale;\n            }\n        });\n        const links = Array.from(linksMap.values());\n        // Debug links\n        console.log(\"\\uD83D\\uDD17 LINKS DEBUG:\");\n        console.log(\"  Total links created:\", links.length);\n        console.log(\"  Non-dummy links:\", links.filter((l)=>!l.isDummy).length);\n        console.log(\"  Dummy links:\", links.filter((l)=>l.isDummy).length);\n        console.log(\"  Sample links:\", links.slice(0, 5).map((l)=>({\n                source: l.source,\n                target: l.target,\n                value: l.value,\n                isDummy: l.isDummy\n            })));\n        // --- DYNAMIC NODE PADDING ---\n        // Reduce nodePadding for sparse data\n        let dynamicNodePadding = nodePadding;\n        if (sortedSources.length <= 4 && sortedTargets.length <= 4) {\n            dynamicNodePadding = Math.max(8, nodePadding / 2);\n        }\n        // Sankey layout - ensure it uses the full available chart space and leftmost nodes are flush\n        const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(dynamicNodePadding).extent([\n            [\n                0,\n                0\n            ],\n            [\n                chartWidth,\n                chartHeight\n            ]\n        ]); // left edge is 0\n        const sankeyData = sankeyGenerator({\n            nodes: nodes.map((d)=>({\n                    ...d\n                })),\n            links: links.map((d)=>({\n                    ...d\n                }))\n        });\n        // Debug Sankey layout\n        console.log(\"\\uD83D\\uDD0D SANKEY LAYOUT DEBUG:\");\n        console.log(\"  Sankey extent:\", [\n            [\n                0,\n                0\n            ],\n            [\n                chartWidth,\n                chartHeight\n            ]\n        ]);\n        console.log(\"  Input nodes:\", nodes.length, \"Input links:\", links.length);\n        console.log(\"  Output nodes:\", sankeyData.nodes.length, \"Output links:\", sankeyData.links.length);\n        console.log(\"  Sample nodes:\", sankeyData.nodes.slice(0, 3).map((n)=>({\n                id: n.id,\n                x0: n.x0,\n                x1: n.x1,\n                y0: n.y0,\n                y1: n.y1\n            })));\n        console.log(\"  Sample links:\", sankeyData.links.slice(0, 3).map((l)=>({\n                source: l.source.id,\n                target: l.target.id,\n                value: l.value\n            })));\n        // --- FORCE ROW ALIGNMENT IF NODE SETS MATCH ---\n        // If left and right node sets have the same length and order, align their y0/y1\n        const leftNodes = sankeyData.nodes.filter((n)=>n.category === currentSource);\n        const rightNodes = sankeyData.nodes.filter((n)=>n.category === currentTarget);\n        if (leftNodes.length === rightNodes.length && leftNodes.every((n, i)=>rightNodes[i] && n.name === rightNodes[i].name)) {\n            // Force y0/y1 of right nodes to match left nodes\n            rightNodes.forEach((n, i)=>{\n                n.y0 = leftNodes[i].y0;\n                n.y1 = leftNodes[i].y1;\n            });\n        }\n        // --- VISUAL GUIDES: Render horizontal bands for each row ---\n        svg.selectAll(\"rect.row-guide\").data(leftNodes).enter().append(\"rect\").attr(\"class\", \"row-guide\").attr(\"x\", -margin.left).attr(\"y\", (d)=>d.y0).attr(\"width\", chartWidth + margin.left + margin.right).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"fill\", (d, i)=>settings.isDarkMode ? i % 2 === 0 ? \"#18191d\" : \"#141416\" // colors closer to background\n             : i % 2 === 0 ? \"#f5f7fa\" : \"#e9eef5\").attr(\"opacity\", settings.isDarkMode ? 0.15 : 0.25) // reduced opacity for dark mode\n        .lower();\n        // Compute vertical offset to center the diagram\n        const nodeYs = sankeyData.nodes.map((d)=>[\n                d.y0,\n                d.y1\n            ]).flat();\n        const minY = Math.min(...nodeYs);\n        const maxY = Math.max(...nodeYs);\n        const usedHeight = maxY - minY;\n        const offsetY = Math.max(0, (chartHeight - usedHeight) / 2 - minY);\n        // Debug positioning\n        console.log(\"\\uD83D\\uDCCD POSITIONING DEBUG:\");\n        console.log(\"  Node Y range:\", minY, \"to\", maxY, \"(used height:\", usedHeight, \")\");\n        console.log(\"  Chart height:\", chartHeight);\n        console.log(\"  Vertical offset:\", offsetY);\n        console.log(\"  Group transform:\", `translate(${margin.left},${margin.top + offsetY})`);\n        // Create a group for the chart area with margin translation and vertical centering\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top + offsetY})`); // left margin only for labels/dropdowns\n        // Debug the actual transform\n        console.log(\"\\uD83C\\uDFAD SVG Transform:\", `translate(${margin.left},${margin.top + offsetY})`);\n        console.log(\"\\uD83D\\uDCD0 Actual SVG dimensions:\", svg.attr(\"width\"), \"x\", svg.attr(\"height\"));\n        console.log(\"\\uD83D\\uDCCA Chart area after margins:\", chartHeight, \"x\", chartHeight);\n        let defs = svg.select(\"defs\");\n        if (defs.empty()) defs = svg.append(\"defs\");\n        let linksG = g.append(\"g\").attr(\"class\", \"links\");\n        let nodesG = g.append(\"g\").attr(\"class\", \"nodes\");\n        // Remove old gradients (no longer needed)\n        defs.selectAll(\"linearGradient.link-gradient\").remove();\n        // --- Add clipPath for links group with tighter bounds ---\n        svg.select(\"defs\").selectAll(\"#link-clip\").remove();\n        defs.append(\"clipPath\").attr(\"id\", \"link-clip\").append(\"rect\").attr(\"x\", margin.left).attr(\"y\", margin.top).attr(\"width\", chartWidth).attr(\"height\", chartHeight);\n        linksG.attr(\"clip-path\", \"url(#link-clip)\");\n        // Add glow filter for dark mode\n        defs.selectAll(\"#dark-mode-glow\").remove();\n        if (settings.isDarkMode) {\n            const glowFilter = defs.append(\"filter\").attr(\"id\", \"dark-mode-glow\").attr(\"x\", \"-50%\").attr(\"y\", \"-50%\").attr(\"width\", \"200%\").attr(\"height\", \"200%\");\n            glowFilter.append(\"feGaussianBlur\").attr(\"stdDeviation\", \"1.5\").attr(\"result\", \"coloredBlur\");\n            const feMerge = glowFilter.append(\"feMerge\");\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"coloredBlur\");\n            feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\");\n        }\n        // --- Links update pattern ---\n        // All links are now between real nodes, with isDummy property for visual distinction\n        const filteredLinks = sankeyData.links;\n        // Remove mix-blend-mode in dark mode to prevent color washing out\n        linksG.style(\"mix-blend-mode\", settings.isDarkMode ? \"normal\" : \"multiply\");\n        const linkKey = (d)=>`${d.source.id}→${d.target.id}`;\n        const linkSel = linksG.selectAll(\"path\").data(filteredLinks, linkKey);\n        // EXIT: fade out and remove all old links\n        linkSel.exit().transition().duration(400).attr(\"opacity\", 0).remove();\n        // Check if this is a category change that should trigger animation\n        const isCategoryChange = lastCategoryChange.source !== currentSource || lastCategoryChange.target !== currentTarget;\n        // ENTER: draw in all new links with improved animation\n        const newLinks = linksG.selectAll(\"path\").data(filteredLinks, linkKey).enter().append(\"path\").attr(\"d\", clampedSankeyLinkHorizontal()).attr(\"stroke\", (d)=>{\n            // Use shared color config if available\n            if (_colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.source.name]) return _colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.source.name];\n            const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d.source, getCurrentThemeColors(), settings.isDarkMode);\n            // Enhanced fallback color logic for dark mode links and unmapped categories\n            if (!color || color === \"#000000\" || color === \"black\" || color === \"#000\") {\n                // D3 categorical palette (same as above)\n                const d3Palette = [\n                    \"#1f77b4\",\n                    \"#ff7f0e\",\n                    \"#2ca02c\",\n                    \"#d62728\",\n                    \"#9467bd\",\n                    \"#8c564b\",\n                    \"#e377c2\",\n                    \"#7f7f7f\",\n                    \"#bcbd22\",\n                    \"#17becf\",\n                    \"#393b79\",\n                    \"#637939\",\n                    \"#8c6d31\",\n                    \"#843c39\",\n                    \"#7b4173\",\n                    \"#5254a3\",\n                    \"#9c9ede\",\n                    \"#cedb9c\",\n                    \"#e7ba52\",\n                    \"#ad494a\",\n                    \"#a55194\",\n                    \"#6b6ecf\",\n                    \"#b5cf6b\",\n                    \"#bd9e39\",\n                    \"#ce6dbd\",\n                    \"#de9ed6\",\n                    \"#3182bd\",\n                    \"#f33e52\",\n                    \"#bdbdbd\",\n                    \"#6baed6\",\n                    \"#fd8d3c\",\n                    \"#e6550d\",\n                    \"#31a354\",\n                    \"#756bb1\",\n                    \"#636363\",\n                    \"#969696\",\n                    \"#e41a1c\",\n                    \"#377eb8\",\n                    \"#4daf4a\",\n                    \"#984ea3\",\n                    \"#ff7f00\",\n                    \"#ffff33\",\n                    \"#a65628\",\n                    \"#f781bf\",\n                    \"#999999\"\n                ];\n                const index = Math.abs(d.source.name.split(\"\").reduce((acc, c)=>acc + c.charCodeAt(0), 0)) % d3Palette.length;\n                return d3Palette[index];\n            }\n            return color;\n        }).attr(\"stroke-width\", (d)=>Math.min(Math.max(settings.isDarkMode ? 2 : 1, d.width), maxLinkWidth)).attr(\"fill\", \"none\").attr(\"filter\", (d)=>{\n            if (hoveredLink === d) return \"url(#glow)\";\n            return settings.isDarkMode ? \"url(#dark-mode-glow)\" : null;\n        }).attr(\"pointer-events\", \"all\").attr(\"stroke-linecap\", \"round\").attr(\"opacity\", (d)=>{\n            // Dummy links: very low opacity\n            if (d.isDummy) return 0.08;\n            // Adjust opacity based on dark mode for better visibility\n            const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n            const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n            const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n            // Default opacity when no highlighting\n            if (animationPhase !== \"highlighting\") return baseOpacity;\n            // Highlight links from the active source\n            if (hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n            }\n            // Highlight links to the active target\n            if (hoveredTargetIndex !== null) {\n                const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n            }\n            return baseOpacity;\n        }).attr(\"stroke-dasharray\", (d)=>d.isDummy ? \"4,4\" : null); // Dashed for dummy links\n        // Apply drawing animation only on category changes to prevent flickering\n        if (isCategoryChange) {\n            newLinks.each(function(d) {\n                const path = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n                const totalLength = this.getTotalLength();\n                // Start with invisible path\n                path.attr(\"stroke-dasharray\", totalLength).attr(\"stroke-dashoffset\", totalLength).attr(\"opacity\", 0).transition().delay((d, i)=>i * 25) // Reduced stagger delay\n                .duration(600) // Reduced from 1200ms to 600ms\n                .ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut).attr(\"opacity\", (d)=>{\n                    // Adjust opacity based on dark mode for better visibility\n                    const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n                    const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n                    const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n                    // Highlight links from the active source or to the active target\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        const hoveredSource = sortedSources[hoveredSourceIndex];\n                        return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n                    }\n                    if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                        const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                        return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n                    }\n                    return baseOpacity;\n                }).attr(\"stroke-dashoffset\", 0).on(\"end\", function() {\n                    d3__WEBPACK_IMPORTED_MODULE_2__.select(this).attr(\"stroke-linecap\", \"butt\") // crisp edge after animation\n                    .attr(\"stroke-dasharray\", null).attr(\"stroke-dashoffset\", null);\n                });\n            });\n        } else {\n            // For non-category changes, just set the opacity directly\n            newLinks.attr(\"opacity\", (d)=>{\n                // Adjust opacity based on dark mode for better visibility\n                const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n                const highlightOpacity = settings.isDarkMode ? 1.0 : 0.9;\n                const dimOpacity = settings.isDarkMode ? 0.4 : 0.1;\n                // Highlight links from the active source or to the active target\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n                }\n                return baseOpacity;\n            });\n        }\n        // Add hover interactions\n        newLinks.on(\"mousemove\", function(event, d) {\n            setHoveredLink(d);\n            setTooltip({\n                x: event.offsetX,\n                y: event.offsetY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"font-bold\",\n                            children: [\n                                d.source.name,\n                                \" → \",\n                                d.target.name\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 1233,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                d.value,\n                                \" attendees\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 1234,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                    lineNumber: 1232,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function() {\n            setHoveredLink(null);\n            setTooltip(null);\n        });\n        // --- Nodes update pattern (rects) ---\n        const filteredNodes = sankeyData.nodes;\n        const nodeSel = nodesG.selectAll(\"rect\").data(filteredNodes, (d)=>d.id);\n        nodeSel.exit().remove();\n        nodeSel.join((enter)=>enter.append(\"rect\").attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>{\n                // Use shared color config if available\n                if (_colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name]) return _colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name];\n                const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode);\n                // Enhanced fallback color logic for dark mode and unmapped categories\n                if (!color || color === \"#000000\" || color === \"black\" || color === \"#000\") {\n                    // D3 categorical palette (20+ colors, high contrast)\n                    const d3Palette = [\n                        \"#1f77b4\",\n                        \"#ff7f0e\",\n                        \"#2ca02c\",\n                        \"#d62728\",\n                        \"#9467bd\",\n                        \"#8c564b\",\n                        \"#e377c2\",\n                        \"#7f7f7f\",\n                        \"#bcbd22\",\n                        \"#17becf\",\n                        \"#393b79\",\n                        \"#637939\",\n                        \"#8c6d31\",\n                        \"#843c39\",\n                        \"#7b4173\",\n                        \"#5254a3\",\n                        \"#9c9ede\",\n                        \"#cedb9c\",\n                        \"#e7ba52\",\n                        \"#ad494a\",\n                        \"#a55194\",\n                        \"#6b6ecf\",\n                        \"#b5cf6b\",\n                        \"#bd9e39\",\n                        \"#ce6dbd\",\n                        \"#de9ed6\",\n                        \"#3182bd\",\n                        \"#f33e52\",\n                        \"#bdbdbd\",\n                        \"#6baed6\",\n                        \"#fd8d3c\",\n                        \"#e6550d\",\n                        \"#31a354\",\n                        \"#756bb1\",\n                        \"#636363\",\n                        \"#969696\",\n                        \"#e41a1c\",\n                        \"#377eb8\",\n                        \"#4daf4a\",\n                        \"#984ea3\",\n                        \"#ff7f00\",\n                        \"#ffff33\",\n                        \"#a65628\",\n                        \"#f781bf\",\n                        \"#999999\"\n                    ];\n                    const index = Math.abs(d.name.split(\"\").reduce((acc, c)=>acc + c.charCodeAt(0), 0)) % d3Palette.length;\n                    return d3Palette[index];\n                }\n                return color;\n            }).attr(\"stroke\", settings.isDarkMode ? \"#444\" : \"#22223b\").attr(\"opacity\", (d)=>{\n                // Source nodes: only the highlighted one is bright\n                if (d.category === currentSource) {\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.3;\n                    }\n                    return 0.9; // Increased from 0.6 to 0.9 for more prominence\n                }\n                // Target nodes: only those connected to the highlighted source or hovered target are bright\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    const isConnected = filteredLinks.some((l)=>l.source.name === hoveredSource && l.target.name === d.name);\n                    return isConnected ? 1 : 0.3;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.name === hoveredTarget ? 1 : 0.3;\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }).on(\"mousemove\", function(event, d) {\n                setHoveredNode(d);\n                setTooltip({\n                    x: event.offsetX,\n                    y: event.offsetY,\n                    content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-bold\",\n                                children: d.name\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1305,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Category: \",\n                                    d.category\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1306,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Responses: \",\n                                    d.value\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                lineNumber: 1307,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1304,\n                        columnNumber: 15\n                    }, this)\n                });\n            }).on(\"mouseleave\", function() {\n                setHoveredNode(null);\n                setTooltip(null);\n            }).on(\"mouseenter\", function(event, d) {\n                if (d.category === currentSource) {\n                    const idx = sortedSources.indexOf(d.name);\n                    setHoveredSourceIndex(idx);\n                    setAnimationPhase(\"highlighting\");\n                }\n                if (d.category === currentTarget) {\n                    const idx = sortedTargets.indexOf(d.name);\n                    setHoveredTargetIndex(idx);\n                    setAnimationPhase(\"highlighting\");\n                }\n            }).on(\"mouseleave\", function(event, d) {\n                if (d.category === currentSource) {\n                    setHoveredSourceIndex(null);\n                    setAnimationPhase(\"full\");\n                }\n                if (d.category === currentTarget) {\n                    setHoveredTargetIndex(null);\n                    setAnimationPhase(\"full\");\n                }\n            }), (update)=>update.transition(d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(750).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut)).attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>{\n                // Use shared color config if available\n                if (_colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name]) return _colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name];\n                const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode);\n                // Enhanced fallback color logic for dark mode and unmapped categories\n                if (!color || color === \"#000000\" || color === \"black\" || color === \"#000\") {\n                    // D3 categorical palette (20+ colors, high contrast)\n                    const d3Palette = [\n                        \"#1f77b4\",\n                        \"#ff7f0e\",\n                        \"#2ca02c\",\n                        \"#d62728\",\n                        \"#9467bd\",\n                        \"#8c564b\",\n                        \"#e377c2\",\n                        \"#7f7f7f\",\n                        \"#bcbd22\",\n                        \"#17becf\",\n                        \"#393b79\",\n                        \"#637939\",\n                        \"#8c6d31\",\n                        \"#843c39\",\n                        \"#7b4173\",\n                        \"#5254a3\",\n                        \"#9c9ede\",\n                        \"#cedb9c\",\n                        \"#e7ba52\",\n                        \"#ad494a\",\n                        \"#a55194\",\n                        \"#6b6ecf\",\n                        \"#b5cf6b\",\n                        \"#bd9e39\",\n                        \"#ce6dbd\",\n                        \"#de9ed6\",\n                        \"#3182bd\",\n                        \"#f33e52\",\n                        \"#bdbdbd\",\n                        \"#6baed6\",\n                        \"#fd8d3c\",\n                        \"#e6550d\",\n                        \"#31a354\",\n                        \"#756bb1\",\n                        \"#636363\",\n                        \"#969696\",\n                        \"#e41a1c\",\n                        \"#377eb8\",\n                        \"#4daf4a\",\n                        \"#984ea3\",\n                        \"#ff7f00\",\n                        \"#ffff33\",\n                        \"#a65628\",\n                        \"#f781bf\",\n                        \"#999999\"\n                    ];\n                    const index = Math.abs(d.name.split(\"\").reduce((acc, c)=>acc + c.charCodeAt(0), 0)) % d3Palette.length;\n                    return d3Palette[index];\n                }\n                return color;\n            }).attr(\"opacity\", (d)=>{\n                // Source nodes: only the highlighted one is bright\n                if (d.category === currentSource) {\n                    if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                        return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.3;\n                    }\n                    return 0.9; // Increased from 0.6 to 0.9 for more prominence\n                }\n                // Target nodes: only those connected to the highlighted source or hovered target are bright\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredSource = sortedSources[hoveredSourceIndex];\n                    const isConnected = filteredLinks.some((l)=>l.source.name === hoveredSource && l.target.name === d.name);\n                    return isConnected ? 1 : 0.3;\n                }\n                if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                    const hoveredTarget = sortedTargets[hoveredTargetIndex];\n                    return d.name === hoveredTarget ? 1 : 0.3;\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }));\n        // --- Node labels (re-render as before) ---\n        g.selectAll(\"g.label-layer\").remove();\n        const labelLayer = g.append(\"g\").attr(\"class\", \"label-layer\");\n        const sourceNodeSet = new Set(sortedSources);\n        const targetNodeSet = new Set(sortedTargets);\n        const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource);\n        const targetNodes = sankeyData.nodes.filter((d)=>d.category === currentTarget);\n        sourceNodes.forEach((node)=>{\n            if (sourceNodeSet.has(node.name)) {\n                labelLayer.append(\"text\").attr(\"x\", -labelPadding).attr(\"y\", (node.y0 + node.y1) / 2).attr(\"text-anchor\", \"end\").attr(\"alignment-baseline\", \"middle\").attr(\"font-family\", nodeLabelFontFamily).attr(\"font-weight\", nodeLabelFontWeight).attr(\"font-size\", labelFontSize).attr(\"fill\", nodeLabelColor).attr(\"aria-label\", node.name).attr(\"opacity\", node.value === 0 ? 0.5 : 1).text(node.name);\n            }\n        });\n        targetNodes.forEach((node)=>{\n            if (targetNodeSet.has(node.name)) {\n                labelLayer.append(\"text\").attr(\"x\", chartWidth + labelPadding).attr(\"y\", (node.y0 + node.y1) / 2).attr(\"text-anchor\", \"start\").attr(\"alignment-baseline\", \"middle\").attr(\"font-family\", nodeLabelFontFamily).attr(\"font-weight\", nodeLabelFontWeight).attr(\"font-size\", labelFontSize).attr(\"fill\", nodeLabelColor).attr(\"aria-label\", node.name).attr(\"opacity\", node.value === 0 ? 0.5 : 1).text(node.name);\n            }\n        });\n        // 6. Update insights\n        let mostCommon = links.length > 0 ? links.reduce((a, b)=>b.value > a.value ? b : a, links[0]) : undefined;\n        setInsights([\n            {\n                title: \"Total Responses\",\n                value: data.length\n            },\n            {\n                title: \"Current View\",\n                value: `${currentSource} → ${currentTarget}`\n            },\n            mostCommon ? {\n                title: \"Most Common Flow\",\n                value: `${mostCommon.source.split(\":\")[1]} → ${mostCommon.target.split(\":\")[1]}`,\n                description: `${mostCommon.value} attendees`\n            } : {\n                title: \"Most Common Flow\",\n                value: \"N/A\",\n                description: \"\"\n            }\n        ]);\n        // 7. Automatic animation on question change only\n        const transition = d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(750).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut);\n        // Animate nodes\n        nodeSel.transition(transition).attr(\"x\", (d)=>d.x0).attr(\"y\", (d)=>d.y0).attr(\"height\", (d)=>d.y1 - d.y0).attr(\"width\", (d)=>d.x1 - d.x0).attr(\"fill\", (d)=>{\n            // Use shared color config if available\n            if (_colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name]) return _colorConfig__WEBPACK_IMPORTED_MODULE_7__.CATEGORY_COLORS[d.name];\n            const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getNodeColor)(d, getCurrentThemeColors(), settings.isDarkMode);\n            // Enhanced fallback color logic for dark mode and unmapped categories\n            if (!color || color === \"#000000\" || color === \"black\" || color === \"#000\") {\n                // D3 categorical palette (20+ colors, high contrast)\n                const d3Palette = [\n                    \"#1f77b4\",\n                    \"#ff7f0e\",\n                    \"#2ca02c\",\n                    \"#d62728\",\n                    \"#9467bd\",\n                    \"#8c564b\",\n                    \"#e377c2\",\n                    \"#7f7f7f\",\n                    \"#bcbd22\",\n                    \"#17becf\",\n                    \"#393b79\",\n                    \"#637939\",\n                    \"#8c6d31\",\n                    \"#843c39\",\n                    \"#7b4173\",\n                    \"#5254a3\",\n                    \"#9c9ede\",\n                    \"#cedb9c\",\n                    \"#e7ba52\",\n                    \"#ad494a\",\n                    \"#a55194\",\n                    \"#6b6ecf\",\n                    \"#b5cf6b\",\n                    \"#bd9e39\",\n                    \"#ce6dbd\",\n                    \"#de9ed6\",\n                    \"#3182bd\",\n                    \"#f33e52\",\n                    \"#bdbdbd\",\n                    \"#6baed6\",\n                    \"#fd8d3c\",\n                    \"#e6550d\",\n                    \"#31a354\",\n                    \"#756bb1\",\n                    \"#636363\",\n                    \"#969696\",\n                    \"#e41a1c\",\n                    \"#377eb8\",\n                    \"#4daf4a\",\n                    \"#984ea3\",\n                    \"#ff7f00\",\n                    \"#ffff33\",\n                    \"#a65628\",\n                    \"#f781bf\",\n                    \"#999999\"\n                ];\n                const index = Math.abs(d.name.split(\"\").reduce((acc, c)=>acc + c.charCodeAt(0), 0)) % d3Palette.length;\n                return d3Palette[index];\n            }\n            return color;\n        });\n    }, [\n        filteredData,\n        currentSource,\n        currentTarget,\n        containerWidth,\n        containerHeight,\n        settings.categoryColors,\n        settings.isDarkMode,\n        lastCategoryChange,\n        getCurrentThemeColors\n    ]);\n    // Create sorted targets for consistent highlighting\n    const sortedTargetsForHighlight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const sorted = [\n            ...targets\n        ];\n        if (currentTarget === \"years_at_medtronic\") {\n            // Sort years in chronological order\n            sorted.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n        } else if (currentTarget === \"learning_style\") {\n            // Sort learning styles in a consistent order\n            const learningStyleOrder = [\n                \"Visual\",\n                \"Auditory\",\n                \"Kinesthetic\",\n                \"Reading/Writing\",\n                \"Mixed\"\n            ];\n            sorted.sort((a, b)=>{\n                const aIndex = learningStyleOrder.indexOf(a);\n                const bIndex = learningStyleOrder.indexOf(b);\n                if (aIndex === -1 && bIndex === -1) return a.localeCompare(b);\n                if (aIndex === -1) return 1;\n                if (bIndex === -1) return -1;\n                return aIndex - bIndex;\n            });\n        } else {\n            // Alphabetical sort for other categories\n            sorted.sort();\n        }\n        return sorted;\n    }, [\n        targets,\n        currentTarget\n    ]);\n    // Separate effect to update visual highlighting during animation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        const g = svg.select(\"g\");\n        // Update node opacity based on animation state\n        g.selectAll(\"rect\").transition().duration(200).attr(\"opacity\", function(d) {\n            // Source nodes: only the highlighted one is bright\n            if (d.category === currentSource) {\n                if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                    return d.name === sortedSources[hoveredSourceIndex] ? 1 : 0.2; // Slightly higher for better visibility\n                }\n                return 0.9; // Increased from 0.6 to 0.9 for more prominence\n            }\n            // Target nodes: highlight those connected to the highlighted source\n            if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                // Check if this target node is connected to the highlighted source\n                const isConnected = svg.selectAll(\"path\").data().some((link)=>link.source.name === hoveredSource && link.target.name === d.name);\n                return isConnected ? 1 : 0.2; // Slightly higher for better visibility\n            }\n            if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n                const hoveredTarget = sortedTargetsForHighlight[hoveredTargetIndex];\n                return d.name === hoveredTarget ? 1 : 0.2;\n            }\n            return 0.9; // Increased from 0.6 to 0.9 for more prominence\n        }).attr(\"stroke-width\", function(d) {\n            // Add thicker stroke to highlighted source node\n            if (d.category === currentSource && hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n                return d.name === sortedSources[hoveredSourceIndex] ? 3 : 1;\n            }\n            return 1;\n        });\n        // Update link opacity based on animation state\n        g.selectAll(\"path\").transition().duration(200).attr(\"opacity\", function(d) {\n            // Adjust opacity based on dark mode for better visibility\n            const baseOpacity = settings.isDarkMode ? 0.85 : 0.4;\n            const highlightOpacity = settings.isDarkMode ? 1.0 : 0.95;\n            const dimOpacity = settings.isDarkMode ? 0.35 : 0.05;\n            // Default opacity when no highlighting\n            if (animationPhase !== \"highlighting\") return baseOpacity;\n            // Highlight links from the active source\n            if (hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? highlightOpacity : dimOpacity;\n            }\n            // Highlight links to the active target\n            if (hoveredTargetIndex !== null) {\n                const hoveredTarget = sortedTargetsForHighlight[hoveredTargetIndex];\n                return d.target.name === hoveredTarget ? highlightOpacity : dimOpacity;\n            }\n            return baseOpacity;\n        }).attr(\"stroke-width\", function(d) {\n            // Make highlighted links thicker\n            if (animationPhase === \"highlighting\" && hoveredSourceIndex !== null) {\n                const hoveredSource = sortedSources[hoveredSourceIndex];\n                return d.source.name === hoveredSource ? Math.max(2, d.width * 1.2) : Math.max(1, d.width);\n            }\n            return Math.max(1, d.width);\n        });\n        console.log(\"\\uD83C\\uDFA8 Visual highlighting updated:\", {\n            hoveredSourceIndex,\n            sourceName: hoveredSourceIndex !== null ? sortedSources[hoveredSourceIndex] : null,\n            hoveredTargetIndex,\n            targetName: hoveredTargetIndex !== null ? sortedTargetsForHighlight[hoveredTargetIndex] : null,\n            animationPhase\n        });\n    }, [\n        hoveredSourceIndex,\n        hoveredTargetIndex,\n        animationPhase,\n        sortedSources,\n        sortedTargetsForHighlight,\n        currentSource,\n        currentTarget\n    ]);\n    // Separate effect for hover interactions (doesn't re-render the whole visualization)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        const g = svg.select(\"g\");\n        // Update link hover effects\n        g.selectAll(\"path\").each(function(d) {\n            const path = d3__WEBPACK_IMPORTED_MODULE_2__.select(this);\n            const isHovered = hoveredLink === d;\n            path.attr(\"filter\", isHovered ? \"url(#glow)\" : null);\n        });\n    }, [\n        hoveredNode,\n        hoveredLink\n    ]);\n    // Tooltip fadeout logic\n    const [tooltipVisible, setTooltipVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const tooltipTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (tooltip) {\n            setTooltipVisible(true);\n            if (tooltipTimeoutRef.current) clearTimeout(tooltipTimeoutRef.current);\n            tooltipTimeoutRef.current = setTimeout(()=>{\n                setTooltipVisible(false);\n                setTimeout(()=>setTooltip(null), 400); // Wait for fadeout\n            }, 5000);\n        } else {\n            setTooltipVisible(false);\n            if (tooltipTimeoutRef.current) clearTimeout(tooltipTimeoutRef.current);\n        }\n        return ()=>{\n            if (tooltipTimeoutRef.current) clearTimeout(tooltipTimeoutRef.current);\n        };\n    }, [\n        tooltip\n    ]);\n    const tooltipEl = tooltip ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            left: tooltip.x + 16,\n            top: tooltip.y + 16,\n            background: settings.isDarkMode ? \"rgba(20,20,30,0.98)\" : \"rgba(255,255,255,0.98)\",\n            color: settings.isDarkMode ? \"#fff\" : \"#170F5F\",\n            padding: \"8px 12px\",\n            borderRadius: 6,\n            pointerEvents: \"none\",\n            zIndex: 100,\n            fontFamily: \"Avenir Next World, sans-serif\",\n            fontWeight: 600,\n            fontSize: 14,\n            boxShadow: settings.isDarkMode ? \"0 4px 24px 0 rgba(16, 16, 235, 0.12)\" : \"0 4px 24px 0 rgba(0, 0, 0, 0.15)\",\n            border: settings.isDarkMode ? \"1px solid rgba(255,255,255,0.1)\" : \"1px solid rgba(0,0,0,0.1)\",\n            maxWidth: 280,\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            opacity: tooltipVisible ? 1 : 0,\n            transition: \"opacity 0.4s\"\n        },\n        role: \"tooltip\",\n        \"aria-live\": \"polite\",\n        children: tooltip.content\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n        lineNumber: 1622,\n        columnNumber: 5\n    }, this) : null;\n    // Create sorted sources array for highlighting (same as rendering and animation)\n    const sortedSourcesForHighlight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        let visualOrder = [];\n        if (filteredData.length && chartHeight > 0 && chartHeight > 0) {\n            const sourcesForNodes = [\n                ...sources\n            ];\n            if (currentSource === \"years_at_medtronic\") {\n                sourcesForNodes.sort((a, b)=>YEARS_CATEGORIES.indexOf(a) - YEARS_CATEGORIES.indexOf(b));\n            } else {\n                sourcesForNodes.sort();\n            }\n            const nodes = [\n                ...sourcesForNodes.map((name)=>({\n                        id: `${currentSource}:${name}`,\n                        name,\n                        category: currentSource\n                    })),\n                ...targets.map((name)=>({\n                        id: `${currentTarget}:${name}`,\n                        name,\n                        category: currentTarget\n                    }))\n            ];\n            const linksMap = new Map();\n            filteredData.forEach((d)=>{\n                const source = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                const target = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_5__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                const sourceId = `${currentSource}:${source}`;\n                const targetId = `${currentTarget}:${target}`;\n                if (!sourcesForNodes.includes(source) || !targets.includes(target)) return;\n                const key = `${sourceId}→${targetId}`;\n                if (!linksMap.has(key)) {\n                    linksMap.set(key, {\n                        source: sourceId,\n                        target: targetId,\n                        value: 0\n                    });\n                }\n                linksMap.get(key).value += 1;\n            });\n            const links = Array.from(linksMap.values());\n            const sankeyGenerator = (0,d3_sankey__WEBPACK_IMPORTED_MODULE_3__.sankey)().nodeId((d)=>d.id).nodeWidth(12).nodePadding(nodePadding).extent([\n                [\n                    0,\n                    0\n                ],\n                [\n                    chartHeight,\n                    chartHeight\n                ]\n            ]);\n            const sankeyData = sankeyGenerator({\n                nodes: nodes.map((d)=>({\n                        ...d\n                    })),\n                links: links.map((d)=>({\n                        ...d\n                    }))\n            });\n            const sourceNodes = sankeyData.nodes.filter((d)=>d.category === currentSource);\n            visualOrder = sourceNodes.slice().sort((a, b)=>a.y0 - b.y0).map((d)=>d.name);\n        }\n        return visualOrder.length ? visualOrder : [\n            ...sources\n        ];\n    }, [\n        filteredData,\n        currentSource,\n        currentTarget,\n        sources,\n        targets,\n        chartHeight,\n        nodePadding\n    ]);\n    // Determine which source or target to highlight based on animation state\n    let highlightSourceName = null;\n    let highlightTargetName = null;\n    if (isInFullOpacityState) {\n        highlightSourceName = null;\n        highlightTargetName = null;\n    } else if (hoveredSourceIndex !== null && animationPhase === \"highlighting\") {\n        highlightSourceName = sortedSourcesForHighlight[hoveredSourceIndex];\n    } else if (hoveredTargetIndex !== null && animationPhase === \"highlighting\") {\n        highlightTargetName = targets[hoveredTargetIndex];\n    }\n    // Enhanced animation pause/resume with debug tracking\n    const pauseAnimation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((reason)=>{\n        if (animationRef.current.running && !animationRef.current.isPaused) {\n            console.log(\"⏸️  PAUSING ANIMATION:\", reason, {\n                currentSourceIndex: animationRef.current.currentSourceIndex,\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                currentSource,\n                currentTarget\n            });\n            animationRef.current.isPaused = true;\n            animationRef.current.pausedAt = Date.now();\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n        }\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    const resumeAnimation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((reason)=>{\n        if (animationRef.current.running && animationRef.current.isPaused) {\n            console.log(\"▶️  RESUMING ANIMATION:\", reason, {\n                currentSourceIndex: animationRef.current.currentSourceIndex,\n                currentTargetIndex: animationRef.current.currentTargetIndex,\n                pausedDuration: Date.now() - animationRef.current.pausedAt\n            });\n            animationRef.current.isPaused = false;\n            animationRef.current.resumeFrom = \"source\";\n            // Resume animation from current position with a small delay to ensure state is updated\n            setTimeout(()=>{\n                if (animationRef.current.running && !animationRef.current.isPaused) {\n                    animate();\n                }\n            }, 100);\n        }\n    }, [\n        animate\n    ]);\n    // Update hover handlers with proper state management\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Update link hover behavior\n        svg.selectAll(\"path\").on(\"mouseenter\", function(event, d) {\n            // Pause animation during hover\n            pauseAnimation(\"link hover\");\n            // Set hover states\n            setHoveredLink(d);\n            setAnimationPhase(\"highlighting\");\n            // Handle source node hover\n            if (d.source && d.source.category === currentSource) {\n                const idx = sortedSources.indexOf(d.source.name);\n                setHoveredSourceIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual source highlight:\", d.source.name, \"index:\", idx);\n            }\n            // Handle target node hover\n            if (d.target && d.target.category === currentTarget) {\n                const idx = sortedTargetsForHighlight.indexOf(d.target.name);\n                setHoveredTargetIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual target highlight:\", d.target.name, \"index:\", idx);\n            }\n        }).on(\"mouseleave\", function() {\n            // Resume animation\n            resumeAnimation(\"link hover end\");\n            // Clear hover states\n            setHoveredLink(null);\n            setHoveredSourceIndex(null);\n            setHoveredTargetIndex(null);\n            setAnimationPhase(\"full\");\n        });\n        // Update node hover behavior\n        svg.selectAll(\"rect\").on(\"mouseenter\", function(event, d) {\n            // Pause animation during hover\n            pauseAnimation(\"node hover\");\n            setAnimationPhase(\"highlighting\");\n            // Handle source node hover\n            if (d.category === currentSource) {\n                const idx = sortedSources.indexOf(d.name);\n                setHoveredSourceIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual source node highlight:\", d.name, \"index:\", idx);\n            }\n            // Handle target node hover\n            if (d.category === currentTarget) {\n                const idx = sortedTargetsForHighlight.indexOf(d.name);\n                setHoveredTargetIndex(idx);\n                console.log(\"\\uD83C\\uDFAF Manual target node highlight:\", d.name, \"index:\", idx);\n            }\n        }).on(\"mouseleave\", function() {\n            // Resume animation\n            resumeAnimation(\"node hover end\");\n            // Clear hover states\n            setHoveredSourceIndex(null);\n            setHoveredTargetIndex(null);\n            setAnimationPhase(\"full\");\n        });\n        return ()=>{\n            // Clean up all event listeners\n            svg.selectAll(\"path, rect\").on(\"mouseenter\", null).on(\"mouseleave\", null);\n        };\n    }, [\n        sortedSources,\n        sortedTargetsForHighlight,\n        currentSource,\n        currentTarget,\n        pauseAnimation,\n        resumeAnimation\n    ]);\n    // Main rendering effect\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !data.length) return;\n    // The main rendering logic handles all opacity updates\n    // This ensures data binding is correct and prevents the undefined error\n    }, [\n        filteredData,\n        hoveredSourceIndex,\n        hoveredTargetIndex,\n        animationPhase,\n        sortedSources,\n        targets,\n        currentSource,\n        currentTarget\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        style: {\n            width: \"100%\",\n            height: \"100%\",\n            minHeight: 220,\n            minWidth: 320,\n            position: \"relative\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: 10,\n                    left: 10,\n                    right: 10,\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    zIndex: 20,\n                    pointerEvents: \"none\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            pointerEvents: \"auto\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            value: currentSource,\n                            onChange: (e)=>setCurrentSource(e.target.value),\n                            style: {\n                                padding: \"8px 12px\",\n                                borderRadius: \"6px\",\n                                border: settings.isDarkMode ? \"1px solid #444\" : \"1px solid #ccc\",\n                                background: settings.isDarkMode ? \"#2a2a2a\" : \"#fff\",\n                                color: settings.isDarkMode ? \"#fff\" : \"#000\",\n                                fontSize: \"14px\",\n                                fontFamily: \"Avenir Next World, sans-serif\"\n                            },\n                            children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: field.value,\n                                    children: field.label\n                                }, field.value, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1870,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 1856,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1855,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            pointerEvents: \"auto\"\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                            value: currentTarget,\n                            onChange: (e)=>setCurrentTarget(e.target.value),\n                            style: {\n                                padding: \"8px 12px\",\n                                borderRadius: \"6px\",\n                                border: settings.isDarkMode ? \"1px solid #444\" : \"1px solid #ccc\",\n                                background: settings.isDarkMode ? \"#2a2a2a\" : \"#fff\",\n                                color: settings.isDarkMode ? \"#fff\" : \"#000\",\n                                fontSize: \"14px\",\n                                fontFamily: \"Avenir Next World, sans-serif\"\n                            },\n                            children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                    value: field.value,\n                                    children: field.label\n                                }, field.value, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1891,\n                                    columnNumber: 15\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                            lineNumber: 1877,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1876,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                lineNumber: 1844,\n                columnNumber: 7\n            }, this),\n            (nodeCount <= 2 || sources.length <= 1 || targets.length <= 1) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: 80,\n                    left: \"50%\",\n                    transform: \"translateX(-50%)\",\n                    background: \"rgba(255,255,200,0.95)\",\n                    color: \"#170F5F\",\n                    padding: \"12px 24px\",\n                    borderRadius: 8,\n                    fontWeight: 600,\n                    fontSize: 18,\n                    zIndex: 10,\n                    boxShadow: \"0 2px 12px 0 rgba(0,0,0,0.08)\"\n                },\n                children: \"Not enough data to show a meaningful flow diagram.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                lineNumber: 1901,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                width: containerWidth,\n                height: containerHeight,\n                viewBox: `0 0 ${containerWidth} ${containerHeight}`,\n                style: {\n                    display: \"block\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    background: \"transparent\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: `translate(${margin.left},${margin.top})`\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1926,\n                        columnNumber: 9\n                    }, this),\n                    debugOn && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: `translate(${margin.left},${margin.top})`,\n                        children: [\n                            Array.isArray(debugSankeyData?.nodes) && debugSankeyData.nodes.map((d, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                    x: d.x0,\n                                    y: d.y0,\n                                    width: d.x1 - d.x0,\n                                    height: d.y1 - d.y0,\n                                    fill: \"none\",\n                                    stroke: \"magenta\",\n                                    strokeDasharray: \"4 2\",\n                                    pointerEvents: \"none\"\n                                }, `debug-node-${i}`, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1934,\n                                    columnNumber: 15\n                                }, this)),\n                            Array.isArray(debugSankeyData?.links) && debugSankeyData.links.map((d, i)=>{\n                                const path = clampedSankeyLinkHorizontal()(d) || \"\";\n                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    d: path,\n                                    fill: \"none\",\n                                    stroke: \"cyan\",\n                                    strokeWidth: 2,\n                                    pointerEvents: \"none\"\n                                }, `debug-link-${i}`, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                                    lineNumber: 1950,\n                                    columnNumber: 17\n                                }, this);\n                            })\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                        lineNumber: 1931,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n                lineNumber: 1918,\n                columnNumber: 7\n            }, this),\n            tooltipEl\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\AlluvialDiagram.tsx\",\n        lineNumber: 1842,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9BbGx1dmlhbERpYWdyYW0udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FnQkM7QUFJNEY7QUFDcEU7QUFDZ0M7QUFHWTtBQUdvQjtBQUN6Rix3RkFBd0Y7QUFDL0I7QUFFUjtBQWlHakQ7O0NBRUMsR0FDRCxNQUFNYSxrQkFBa0I7SUFDdEI7UUFBRUMsT0FBTztRQUFzQkMsT0FBTztJQUFxQjtJQUMzRDtRQUFFRCxPQUFPO1FBQWtCQyxPQUFPO0lBQWlCO0lBQ25EO1FBQUVELE9BQU87UUFBYUMsT0FBTztJQUFZO0lBQ3pDO1FBQUVELE9BQU87UUFBb0JDLE9BQU87SUFBbUI7SUFDdkQ7UUFBRUQsT0FBTztRQUFjQyxPQUFPO0lBQWE7Q0FFNUM7QUFFRDs7Q0FFQyxHQUNELE1BQU1DLG1CQUFtQjtJQUFDO0lBQU87SUFBUTtJQUFTO0lBQVM7Q0FBTTtBQUVqRTs7OztDQUlDLEdBQ0QsTUFBTUMsd0JBQXdCLENBQUNDO0lBQzdCLElBQUksT0FBT0EsVUFBVSxZQUFZQyxNQUFNRCxVQUFVQSxRQUFRLEdBQUcsT0FBTztJQUNuRSxJQUFJQSxTQUFTLEdBQUcsT0FBTztJQUN2QixJQUFJQSxTQUFTLElBQUksT0FBTztJQUN4QixJQUFJQSxTQUFTLElBQUksT0FBTztJQUN4QixJQUFJQSxTQUFTLElBQUksT0FBTztJQUN4QixPQUFPO0FBQ1Q7QUFFQTs7Ozs7Ozs7OztDQVVDLEdBQ0QsU0FBU0UsZUFBZUMsQ0FBTSxFQUFFQyxnQkFBZ0IsQ0FBQyxFQUFFQyxnQkFBZ0IsR0FBRyxFQUFFQyxhQUFhLEdBQUcsRUFBRUMsY0FBYyxHQUFHO0lBQ3pHLHFDQUFxQztJQUNyQyxJQUFJQyxLQUFLTCxFQUFFTSxNQUFNLENBQUNDLEVBQUU7SUFDcEIsSUFBSUEsS0FBS1AsRUFBRVEsTUFBTSxDQUFDSCxFQUFFO0lBQ3BCLElBQUlJLEtBQUtULEVBQUVTLEVB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LE9BQU9JLElBQUksQ0FBQyxDQUFDLEVBQUVKLE9BQU9DLEdBQUcsQ0FBQyxDQUFDLENBQUM7Ozs7OztvQkFJdERnSSx5QkFDQyw4REFBQ3lDO3dCQUFFMkcsV0FBVyxDQUFDLFVBQVUsRUFBRXJSLE9BQU9JLElBQUksQ0FBQyxDQUFDLEVBQUVKLE9BQU9DLEdBQUcsQ0FBQyxDQUFDLENBQUM7OzRCQUVwRDFDLE1BQU1DLE9BQU8sQ0FBQzBLLGlCQUFpQmxFLFVBQVVrRSxnQkFBZ0JsRSxLQUFLLENBQUM1RixHQUFHLENBQUMsQ0FBQ3RFLEdBQVFrUSxrQkFDM0UsOERBQUN1SDtvQ0FFQ3ZFLEdBQUdsVCxFQUFFSyxFQUFFO29DQUNQK1MsR0FBR3BULEVBQUVTLEVBQUU7b0NBQ1BtQixPQUFPNUIsRUFBRU8sRUFBRSxHQUFHUCxFQUFFSyxFQUFFO29DQUNsQndCLFFBQVE3QixFQUFFVSxFQUFFLEdBQUdWLEVBQUVTLEVBQUU7b0NBQ25CaVgsTUFBSztvQ0FDTEMsUUFBTztvQ0FDUEMsaUJBQWdCO29DQUNoQnJDLGVBQWM7bUNBUlQsQ0FBQyxXQUFXLEVBQUVyRixFQUFFLENBQUM7Ozs7OzRCQVl6QnpNLE1BQU1DLE9BQU8sQ0FBQzBLLGlCQUFpQnBELFVBQVVvRCxnQkFBZ0JwRCxLQUFLLENBQUMxRyxHQUFHLENBQUMsQ0FBQ3RFLEdBQVFrUTtnQ0FDM0UsTUFBTXdDLE9BQU92Uiw4QkFBOEJuQixNQUFNO2dDQUNqRCxxQkFDRSw4REFBQzBTO29DQUVDMVMsR0FBRzBTO29DQUNIZ0YsTUFBSztvQ0FDTEMsUUFBTztvQ0FDUEUsYUFBYTtvQ0FDYnRDLGVBQWM7bUNBTFQsQ0FBQyxXQUFXLEVBQUVyRixFQUFFLENBQUM7Ozs7OzRCQVE1Qjs7Ozs7Ozs7Ozs7OztZQUlMZ0Y7Ozs7Ozs7QUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9BbGx1dmlhbERpYWdyYW0udHN4P2I5NmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IEFsbHV2aWFsRGlhZ3JhbSBDb21wb25lbnQgLSBJbnRlcmFjdGl2ZSBTYW5rZXkgRmxvdyBWaXN1YWxpemF0aW9uXG4gKiBcbiAqIFRoaXMgY29tcG9uZW50IGNyZWF0ZXMgYW4gaW50ZXJhY3RpdmUgU2Fua2V5IChBbGx1dmlhbCkgZGlhZ3JhbSB1c2luZyBEMy5qcyB0byB2aXN1YWxpemVcbiAqIGZsb3cgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIGRpZmZlcmVudCBjYXRlZ29yaWVzIGluIHN1cnZleSBkYXRhLiBJdCBmZWF0dXJlczpcbiAqIFxuICogLSBSZXNwb25zaXZlIGRlc2lnbiB3aXRoIFJlc2l6ZU9ic2VydmVyXG4gKiAtIER5bmFtaWMgbm9kZSBzaXppbmcgYmFzZWQgb24gZGF0YSB2b2x1bWVcbiAqIC0gQW5pbWF0ZWQgdHJhbnNpdGlvbnMgYmV0d2VlbiBkaWZmZXJlbnQgZGF0YSB2aWV3c1xuICogLSBJbnRlcmFjdGl2ZSBoaWdobGlnaHRpbmcgYW5kIGZpbHRlcmluZ1xuICogLSBUaGVtZS1hd2FyZSBzdHlsaW5nIChkYXJrL2xpZ2h0IG1vZGUpXG4gKiAtIEFjY2Vzc2liaWxpdHkgZmVhdHVyZXMgYW5kIGVycm9yIGhhbmRsaW5nXG4gKiBcbiAqIEBhdXRob3IgTWVkdHJvbmljIFdFIFN1bW1pdCBUZWFtXG4gKiBAdmVyc2lvbiAyLjAuMFxuICogQHNpbmNlIDEuMC4wXG4gKi9cblxuJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlLCB1c2VNZW1vLCB1c2VDYWxsYmFjaywgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJztcbmltcG9ydCB7IHNhbmtleSwgc2Fua2V5TGlua0hvcml6b250YWwgfSBmcm9tICdkMy1zYW5rZXknO1xuLy8gQHRzLWV4cGVjdC1lcnJvcjogTm8gdHlwZXMgZm9yIGQzLWludGVycG9sYXRlLXBhdGhcbmltcG9ydCB7IGludGVycG9sYXRlUGF0aCB9IGZyb20gJ2QzLWludGVycG9sYXRlLXBhdGgnO1xuaW1wb3J0IHsgdXNlVmlzdWFsaXphdGlvbkRhdGEgfSBmcm9tICcuL3NoYXJlZC91c2VWaXN1YWxpemF0aW9uRGF0YSc7XG5pbXBvcnQgeyBWaXN1YWxpemF0aW9uQ29udGFpbmVyIH0gZnJvbSAnLi9zaGFyZWQvVmlzdWFsaXphdGlvbkNvbnRhaW5lcic7XG5pbXBvcnQgeyBEYXRhSW5zaWdodFBhbmVsIH0gZnJvbSAnLi9zaGFyZWQvRGF0YUluc2lnaHRQYW5lbCc7XG5pbXBvcnQgeyBnZXRZZWFyc0NvbG9yU2NhbGUsIGdldFllYXJzQ2F0ZWdvcnksIGdldE5vZGVDb2xvciB9IGZyb20gJy4vc2hhcmVkL2NvbG9yVXRpbHMnO1xuLy8gaW1wb3J0IHsgUXVlc3Rpb25TZWxlY3RvciB9IGZyb20gJy4vc2hhcmVkL1F1ZXN0aW9uU2VsZWN0b3InOyAvLyBUZW1wb3JhcmlseSBkaXNhYmxlZFxuaW1wb3J0IHsgdXNlQXBwQ29udGV4dCB9IGZyb20gJ0AvbGliL2NvbnRleHQvQXBwQ29udGV4dCc7XG5pbXBvcnQgdHlwZSB7IERhdGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UvdHlwZXMnO1xuaW1wb3J0IHsgQ0FURUdPUllfQ09MT1JTIH0gZnJvbSAnLi4vY29sb3JDb25maWcnO1xuXG4vKipcbiAqIFByb3BzIGludGVyZmFjZSBmb3IgdGhlIEFsbHV2aWFsRGlhZ3JhbSBjb21wb25lbnRcbiAqL1xuaW50ZXJmYWNlIEFsbHV2aWFsRGlhZ3JhbVByb3BzIHtcbiAgLyoqIFdpZHRoIG9mIHRoZSB2aXN1YWxpemF0aW9uIGluIHBpeGVscyAoZGVmYXVsdDogODAwKSAqL1xuICB3aWR0aD86IG51bWJlcjtcbiAgLyoqIEhlaWdodCBvZiB0aGUgdmlzdWFsaXphdGlvbiBpbiBwaXhlbHMgKGRlZmF1bHQ6IDYwMCkgKi9cbiAgaGVpZ2h0PzogbnVtYmVyO1xuICAvKiogV2hldGhlciB0byBlbmFibGUgYXV0b21hdGljIGFuaW1hdGlvbiBjeWNsaW5nIChkZWZhdWx0OiB0cnVlKSAqL1xuICBhdXRvUGxheT86IGJvb2xlYW47XG4gIC8qKiBDYWxsYmFjayBmaXJlZCB3aGVuIHRoZSB1c2VyIGNoYW5nZXMgc291cmNlL3RhcmdldCBjYXRlZ29yaWVzICovXG4gIG9uUXVlc3Rpb25DaGFuZ2U/OiAoc291cmNlOiBzdHJpbmcsIHRhcmdldDogc3RyaW5nKSA9PiB2b2lkO1xufVxuXG4vKipcbiAqIFN1cnZleSByZXNwb25zZSB0eXBlIHdpdGggYXR0ZW5kZWUgaW5mb3JtYXRpb25cbiAqL1xudHlwZSBTdXJ2ZXlSZXNwb25zZSA9IERhdGFiYXNlWydwdWJsaWMnXVsnVGFibGVzJ11bJ3N1cnZleV9yZXNwb25zZXMnXVsnUm93J10gJiB7XG4gIGF0dGVuZGVlOiBEYXRhYmFzZVsncHVibGljJ11bJ1RhYmxlcyddWydhdHRlbmRlZXMnXVsnUm93J107XG59O1xuXG4vKipcbiAqIFNhbmtleSBub2RlIGludGVyZmFjZSByZXByZXNlbnRpbmcgYSBjYXRlZ29yeSBpbiB0aGUgZmxvdyBkaWFncmFtXG4gKi9cbmludGVyZmFjZSBTYW5rZXlOb2RlIHtcbiAgLyoqIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgbm9kZSAqL1xuICBpZDogc3RyaW5nO1xuICAvKiogRGlzcGxheSBuYW1lIG9mIHRoZSBub2RlICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqIENhdGVnb3J5IHRoaXMgbm9kZSBiZWxvbmdzIHRvIChzb3VyY2Ugb3IgdGFyZ2V0KSAqL1xuICBjYXRlZ29yeTogc3RyaW5nO1xuICAvKiogTGVmdCBlZGdlIHgtY29vcmRpbmF0ZSAqL1xuICB4MDogbnVtYmVyO1xuICAvKiogUmlnaHQgZWRnZSB4LWNvb3JkaW5hdGUgKi9cbiAgeDE6IG51bWJlcjtcbiAgLyoqIFRvcCBlZGdlIHktY29vcmRpbmF0ZSAqL1xuICB5MDogbnVtYmVyO1xuICAvKiogQm90dG9tIGVkZ2UgeS1jb29yZGluYXRlICovXG4gIHkxOiBudW1iZXI7XG4gIC8qKiBOdW1lcmljIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgbm9kZSdzIHNpemUgKi9cbiAgdmFsdWU6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBTYW5rZXkgbGluayBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIGEgZmxvdyBiZXR3ZWVuIHR3byBub2Rlc1xuICovXG5pbnRlcmZhY2UgU2Fua2V5TGluayB7XG4gIC8qKiBTb3VyY2Ugbm9kZSAqL1xuICBzb3VyY2U6IFNhbmtleU5vZGU7XG4gIC8qKiBUYXJnZXQgbm9kZSAqL1xuICB0YXJnZXQ6IFNhbmtleU5vZGU7XG4gIC8qKiBGbG93IHZhbHVlIGJldHdlZW4gbm9kZXMgKi9cbiAgdmFsdWU6IG51bWJlcjtcbiAgLyoqIFZpc3VhbCB3aWR0aCBvZiB0aGUgbGluayAqL1xuICB3aWR0aDogbnVtYmVyO1xuICAvKiogWS1jb29yZGluYXRlIGF0IHNvdXJjZSBub2RlICovXG4gIHkwOiBudW1iZXI7XG4gIC8qKiBZLWNvb3JkaW5hdGUgYXQgdGFyZ2V0IG5vZGUgKi9cbiAgeTE6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBBbmltYXRpb24gc3RhdGUgbWFuYWdlbWVudCBpbnRlcmZhY2VcbiAqL1xuaW50ZXJmYWNlIEFuaW1hdGlvblN0YXRlIHtcbiAgLyoqIFRpbWVyIHJlZmVyZW5jZSBmb3IgYW5pbWF0aW9uIGludGVydmFscyAqL1xuICB0aW1lcjogTm9kZUpTLlRpbWVvdXQgfCBudWxsO1xuICAvKiogV2hldGhlciBhbmltYXRpb24gaXMgY3VycmVudGx5IHJ1bm5pbmcgKi9cbiAgcnVubmluZzogYm9vbGVhbjtcbiAgLyoqIEN1cnJlbnQgaGlnaGxpZ2h0ZWQgc291cmNlIGluZGV4ICovXG4gIGN1cnJlbnRTb3VyY2VJbmRleDogbnVtYmVyO1xuICAvKiogQ3VycmVudCBoaWdobGlnaHRlZCB0YXJnZXQgaW5kZXggKi9cbiAgY3VycmVudFRhcmdldEluZGV4OiBudW1iZXI7XG4gIC8qKiBXaGV0aGVyIGFuaW1hdGlvbiBpcyBwYXVzZWQgKi9cbiAgaXNQYXVzZWQ6IGJvb2xlYW47XG4gIC8qKiBUaW1lc3RhbXAgd2hlbiBhbmltYXRpb24gd2FzIHBhdXNlZCAqL1xuICBwYXVzZWRBdDogbnVtYmVyO1xuICAvKiogV2hlcmUgdG8gcmVzdW1lIGFuaW1hdGlvbiBmcm9tICovXG4gIHJlc3VtZUZyb206ICdzb3VyY2UnIHwgJ3RhcmdldCcgfCBudWxsO1xuICAvKiogTnVtYmVyIG9mIGFuaW1hdGlvbiBjeWNsZXMgY29tcGxldGVkICovXG4gIGN5Y2xlQ291bnQ6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBUb29sdGlwIHN0YXRlIGludGVyZmFjZVxuICovXG5pbnRlcmZhY2UgVG9vbHRpcFN0YXRlIHtcbiAgLyoqIFggcG9zaXRpb24gb2YgdG9vbHRpcCAqL1xuICB4OiBudW1iZXI7XG4gIC8qKiBZIHBvc2l0aW9uIG9mIHRvb2x0aXAgKi9cbiAgeTogbnVtYmVyO1xuICAvKiogVG9vbHRpcCBjb250ZW50IHRvIGRpc3BsYXkgKi9cbiAgY29udGVudDogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG4vKipcbiAqIEF2YWlsYWJsZSBzdXJ2ZXkgZmllbGRzIGZvciB2aXN1YWxpemF0aW9uXG4gKi9cbmNvbnN0IGF2YWlsYWJsZUZpZWxkcyA9IFtcbiAgeyB2YWx1ZTogJ3llYXJzX2F0X21lZHRyb25pYycsIGxhYmVsOiAnWWVhcnMgYXQgTWVkdHJvbmljJyB9LFxuICB7IHZhbHVlOiAnbGVhcm5pbmdfc3R5bGUnLCBsYWJlbDogJ0xlYXJuaW5nIFN0eWxlJyB9LFxuICB7IHZhbHVlOiAnc2hhcGVkX2J5JywgbGFiZWw6ICdTaGFwZWQgQnknIH0sXG4gIHsgdmFsdWU6ICdwZWFrX3BlcmZvcm1hbmNlJywgbGFiZWw6ICdQZWFrIFBlcmZvcm1hbmNlJyB9LFxuICB7IHZhbHVlOiAnbW90aXZhdGlvbicsIGxhYmVsOiAnTW90aXZhdGlvbicgfSxcbiAgLy8gQWRkIG1vcmUgZmllbGRzIGFzIG5lZWRlZFxuXTtcblxuLyoqXG4gKiBZZWFycyBhdCBNZWR0cm9uaWMgY2F0ZWdvcnkgZGVmaW5pdGlvbnNcbiAqL1xuY29uc3QgWUVBUlNfQ0FURUdPUklFUyA9IFsnMC01JywgJzYtMTAnLCAnMTEtMTUnLCAnMTYtMjAnLCAnMjArJ107XG5cbi8qKlxuICogQ29udmVydHMgbnVtZXJpYyB5ZWFycyB0byBjYXRlZ29yeSBzdHJpbmcgd2l0aCB2YWxpZGF0aW9uXG4gKiBAcGFyYW0geWVhcnMgLSBOdW1iZXIgb2YgeWVhcnMgYXQgTWVkdHJvbmljXG4gKiBAcmV0dXJucyBDYXRlZ29yeSBzdHJpbmdcbiAqL1xuY29uc3QgZ2V0VmFsaWRZZWFyc0NhdGVnb3J5ID0gKHllYXJzOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICBpZiAodHlwZW9mIHllYXJzICE9PSAnbnVtYmVyJyB8fCBpc05hTih5ZWFycykgfHwgeWVhcnMgPCAwKSByZXR1cm4gJzAtNSc7XG4gIGlmICh5ZWFycyA8PSA1KSByZXR1cm4gJzAtNSc7XG4gIGlmICh5ZWFycyA8PSAxMCkgcmV0dXJuICc2LTEwJztcbiAgaWYgKHllYXJzIDw9IDE1KSByZXR1cm4gJzExLTE1JztcbiAgaWYgKHllYXJzIDw9IDIwKSByZXR1cm4gJzE2LTIwJztcbiAgcmV0dXJuICcyMCsnO1xufTtcblxuLyoqXG4gKiBDdXN0b20gd2F2ZSBwYXRoIGdlbmVyYXRvciBmb3IgU2Fua2V5IGxpbmtzIHdpdGggYm91bmRzIGNoZWNraW5nXG4gKiBDcmVhdGVzIGEgd2F2eSBwYXRoIGJldHdlZW4gc291cmNlIGFuZCB0YXJnZXQgbm9kZXMgZm9yIHZpc3VhbCBhcHBlYWxcbiAqIFxuICogQHBhcmFtIGQgLSBMaW5rIGRhdGEgd2l0aCBzb3VyY2UvdGFyZ2V0IGNvb3JkaW5hdGVzXG4gKiBAcGFyYW0gd2F2ZUFtcGxpdHVkZSAtIEFtcGxpdHVkZSBvZiB0aGUgd2F2ZSBlZmZlY3QgKGRlZmF1bHQ6IDgpXG4gKiBAcGFyYW0gd2F2ZUZyZXF1ZW5jeSAtIEZyZXF1ZW5jeSBvZiB0aGUgd2F2ZSAoZGVmYXVsdDogMS4xKVxuICogQHBhcmFtIGNoYXJ0V2lkdGggLSBDaGFydCB3aWR0aCBmb3IgYm91bmRzIGNoZWNraW5nIChkZWZhdWx0OiA4MDApXG4gKiBAcGFyYW0gY2hhcnRIZWlnaHQgLSBDaGFydCBoZWlnaHQgZm9yIGJvdW5kcyBjaGVja2luZyAoZGVmYXVsdDogNjAwKVxuICogQHJldHVybnMgU1ZHIHBhdGggc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHNhbmtleUxpbmtXYXZlKGQ6IGFueSwgd2F2ZUFtcGxpdHVkZSA9IDgsIHdhdmVGcmVxdWVuY3kgPSAxLjEsIGNoYXJ0V2lkdGggPSA4MDAsIGNoYXJ0SGVpZ2h0ID0gNjAwKSB7XG4gIC8vIEV4dHJhY3QgY29vcmRpbmF0ZXMgZnJvbSBsaW5rIGRhdGFcbiAgbGV0IHgwID0gZC5zb3VyY2UueDE7XG4gIGxldCB4MSA9IGQudGFyZ2V0LngwO1xuICBsZXQgeTAgPSBkLnkwO1xuICBsZXQgeTEgPSBkLnkxO1xuICBcbiAgLy8gQ2xhbXAgY29vcmRpbmF0ZXMgdG8gY2hhcnQgYm91bmRzIHRvIHByZXZlbnQgb3ZlcmZsb3dcbiAgeDAgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihjaGFydFdpZHRoLCB4MCkpO1xuICB4MSA9IE1hdGgubWF4KDAsIE1hdGgubWluKGNoYXJ0V2lkdGgsIHgxKSk7XG4gIHkwID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oY2hhcnRIZWlnaHQsIHkwKSk7XG4gIHkxID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oY2hhcnRIZWlnaHQsIHkxKSk7XG4gIFxuICBjb25zdCBtaWRYID0gKHgwICsgeDEpIC8gMjtcbiAgXG4gIC8vIEFkZCBhIHNpbmUgd2F2ZSB0byB0aGUgY29udHJvbCBwb2ludHMsIGJ1dCBlbnN1cmUgdGhleSBzdGF5IHdpdGhpbiBib3VuZHNcbiAgY29uc3Qgd2F2ZVkwID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oY2hhcnRIZWlnaHQsIHkwICsgd2F2ZUFtcGxpdHVkZSAqIE1hdGguc2luKHdhdmVGcmVxdWVuY3kgKiBNYXRoLlBJICogMC4yNSkpKTtcbiAgY29uc3Qgd2F2ZVkxID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oY2hhcnRIZWlnaHQsIHkxICsgd2F2ZUFtcGxpdHVkZSAqIE1hdGguc2luKHdhdmVGcmVxdWVuY3kgKiBNYXRoLlBJICogMC43NSkpKTtcbiAgXG4gIHJldHVybiBgTSR7eDB9LCR7eTB9XG4gICAgQyR7bWlkWH0sJHt3YXZlWTB9ICR7bWlkWH0sJHt3YXZlWTF9ICR7eDF9LCR7eTF9YDtcbn1cblxuLyoqXG4gKiBDdXN0b20gaG9yaXpvbnRhbCBsaW5rIGdlbmVyYXRvciB0aGF0IGNsYW1wcyB5MC95MSB0byBub2RlIGJvdW5kc1xuICogUHJldmVudHMgbGlua3MgZnJvbSBleHRlbmRpbmcgYmV5b25kIHRoZWlyIHNvdXJjZS90YXJnZXQgbm9kZXNcbiAqIFxuICogQHJldHVybnMgRnVuY3Rpb24gdGhhdCBnZW5lcmF0ZXMgU1ZHIHBhdGggZm9yIGEgbGlua1xuICovXG5mdW5jdGlvbiBjbGFtcGVkU2Fua2V5TGlua0hvcml6b250YWwoKSB7XG4gIHJldHVybiBmdW5jdGlvbihkOiBhbnkpIHtcbiAgICAvLyBDbGFtcCB5MC95MSB0byBub2RlIGJvdW5kc1xuICAgIGNvbnN0IHN5ID0gTWF0aC5tYXgoZC5zb3VyY2UueTAsIE1hdGgubWluKGQuc291cmNlLnkxLCBkLnkwKSk7XG4gICAgY29uc3QgdHkgPSBNYXRoLm1heChkLnRhcmdldC55MCwgTWF0aC5taW4oZC50YXJnZXQueTEsIGQueTEpKTtcbiAgICBjb25zdCB4MCA9IGQuc291cmNlLngxO1xuICAgIGNvbnN0IHgxID0gZC50YXJnZXQueDA7XG4gICAgLy8gVXNlIGEgY3ViaWMgQmV6aWVyIGZvciBzbW9vdGhuZXNzXG4gICAgY29uc3QgY3VydmF0dXJlID0gMC41O1xuICAgIGNvbnN0IHhpID0gZDMuaW50ZXJwb2xhdGVOdW1iZXIoeDAsIHgxKTtcbiAgICBjb25zdCB4MiA9IHhpKGN1cnZhdHVyZSk7XG4gICAgY29uc3QgeDMgPSB4aSgxIC0gY3VydmF0dXJlKTtcbiAgICByZXR1cm4gYE0ke3gwfSwke3N5fUMke3gyfSwke3N5fSAke3gzfSwke3R5fSAke3gxfSwke3R5fWA7XG4gIH07XG59XG5cbi8qKlxuICogQWxsdXZpYWxEaWFncmFtIENvbXBvbmVudFxuICogXG4gKiBNYWluIGNvbXBvbmVudCB0aGF0IHJlbmRlcnMgYW4gaW50ZXJhY3RpdmUgU2Fua2V5IGRpYWdyYW0gc2hvd2luZyBmbG93IHJlbGF0aW9uc2hpcHNcbiAqIGJldHdlZW4gc3VydmV5IHJlc3BvbnNlIGNhdGVnb3JpZXMuIEZlYXR1cmVzIHJlc3BvbnNpdmUgZGVzaWduLCBhbmltYXRpb25zLCBhbmRcbiAqIGludGVyYWN0aXZlIGNvbnRyb2xzLlxuICogXG4gKiBAcGFyYW0gcHJvcHMgLSBDb21wb25lbnQgcHJvcHNcbiAqIEByZXR1cm5zIEpTWCBlbGVtZW50XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFsbHV2aWFsRGlhZ3JhbSh7XG4gIHdpZHRoID0gODAwLFxuICBoZWlnaHQgPSA2MDAsXG4gIGF1dG9QbGF5ID0gdHJ1ZSxcbiAgb25RdWVzdGlvbkNoYW5nZSxcbn06IEFsbHV2aWFsRGlhZ3JhbVByb3BzKSB7XG4gIC8vIFJlc3BvbnNpdmU6IHVzZSBzdGF0ZSBmb3Igd2lkdGgvaGVpZ2h0LCBmYWxsYmFjayB0byBwcm9wc1xuICBjb25zdCBjb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBbY29udGFpbmVyV2lkdGgsIHNldENvbnRhaW5lcldpZHRoXSA9IHVzZVN0YXRlKHdpZHRoKTtcbiAgY29uc3QgW2NvbnRhaW5lckhlaWdodCwgc2V0Q29udGFpbmVySGVpZ2h0XSA9IHVzZVN0YXRlKGhlaWdodCk7XG5cbiAgLy8gUmVzcG9uc2l2ZTogb2JzZXJ2ZSBjb250YWluZXIgc2l6ZVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghY29udGFpbmVyUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyB3aW5kb3cuUmVzaXplT2JzZXJ2ZXIoZW50cmllcyA9PiB7XG4gICAgICBmb3IgKGxldCBlbnRyeSBvZiBlbnRyaWVzKSB7XG4gICAgICAgIGlmIChlbnRyeS5jb250ZW50UmVjdCkge1xuICAgICAgICAgIHNldENvbnRhaW5lcldpZHRoKGVudHJ5LmNvbnRlbnRSZWN0LndpZHRoKTtcbiAgICAgICAgICBzZXRDb250YWluZXJIZWlnaHQoZW50cnkuY29udGVudFJlY3QuaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIG9ic2VydmVyLm9ic2VydmUoY29udGFpbmVyUmVmLmN1cnJlbnQpO1xuICAgIHJldHVybiAoKSA9PiBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBzdmdSZWYgPSB1c2VSZWY8U1ZHU1ZHRWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IHsgZGF0YSwgaXNMb2FkaW5nLCBlcnJvciB9ID0gdXNlVmlzdWFsaXphdGlvbkRhdGEoKTtcbiAgY29uc3QgeyBzZXR0aW5ncywgZ2V0Q3VycmVudFRoZW1lQ29sb3JzIH0gPSB1c2VBcHBDb250ZXh0KCk7XG4gIGNvbnN0IFtjdXJyZW50U291cmNlLCBzZXRDdXJyZW50U291cmNlXSA9IHVzZVN0YXRlKCd5ZWFyc19hdF9tZWR0cm9uaWMnKTtcbiAgY29uc3QgW2N1cnJlbnRUYXJnZXQsIHNldEN1cnJlbnRUYXJnZXRdID0gdXNlU3RhdGUoJ2xlYXJuaW5nX3N0eWxlJyk7XG5cbiAgLy8gRmlsdGVyIGRhdGEgYmFzZWQgb24gdGVzdCBkYXRhIHNldHRpbmdcbiAgY29uc3QgZmlsdGVyZWREYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGRhdGEpIHx8ICFkYXRhLmxlbmd0aCkgcmV0dXJuIFtdO1xuICAgIHJldHVybiBzZXR0aW5ncy51c2VUZXN0RGF0YSA/IGRhdGEgOiBkYXRhLmZpbHRlcihpdGVtID0+ICEoaXRlbSBhcyBhbnkpLnRlc3RfZGF0YSk7XG4gIH0sIFtkYXRhLCBzZXR0aW5ncy51c2VUZXN0RGF0YV0pO1xuXG4gIC8vIENvbXB1dGUgc291cmNlcyBhbmQgdGFyZ2V0cyB3aXRoIHZhbGlkYXRpb25cbiAgY29uc3Qgc291cmNlczogc3RyaW5nW10gPSB1c2VNZW1vKCgpID0+IHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZmlsdGVyZWREYXRhKSB8fCAhZmlsdGVyZWREYXRhLmxlbmd0aCkgcmV0dXJuIFtdO1xuICAgIGlmIChjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgcmV0dXJuIFlFQVJTX0NBVEVHT1JJRVMuZmlsdGVyKGNhdCA9PiBcbiAgICAgICAgZmlsdGVyZWREYXRhLnNvbWUoZCA9PiBnZXRWYWxpZFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgPT09IGNhdClcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBBcnJheS5mcm9tKG5ldyBTZXQoXG4gICAgICAgIGZpbHRlcmVkRGF0YS5tYXAoKGQ6IFN1cnZleVJlc3BvbnNlKSA9PiBkW2N1cnJlbnRTb3VyY2UgYXMga2V5b2YgU3VydmV5UmVzcG9uc2VdKVxuICAgICAgKSkuZmlsdGVyKCh2YWx1ZSk6IHZhbHVlIGlzIHN0cmluZyA9PiBcbiAgICAgICAgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5sZW5ndGggPiAwXG4gICAgICApO1xuICAgIH1cbiAgfSwgW2ZpbHRlcmVkRGF0YSwgY3VycmVudFNvdXJjZV0pO1xuXG4gIGNvbnN0IHRhcmdldHM6IHN0cmluZ1tdID0gdXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGZpbHRlcmVkRGF0YSkgfHwgIWZpbHRlcmVkRGF0YS5sZW5ndGgpIHJldHVybiBbXTtcbiAgICBpZiAoY3VycmVudFRhcmdldCA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycpIHtcbiAgICAgIHJldHVybiBZRUFSU19DQVRFR09SSUVTLmZpbHRlcihjYXQgPT4gXG4gICAgICAgIGZpbHRlcmVkRGF0YS5zb21lKGQgPT4gZ2V0VmFsaWRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApID09PSBjYXQpXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb3J0IHRhcmdldCBub2RlcyBjb25zaXN0ZW50bHkgdG8gbWFpbnRhaW4gZml4ZWQgcG9zaXRpb25zXG4gICAgICByZXR1cm4gQXJyYXkuZnJvbShuZXcgU2V0KFxuICAgICAgICBmaWx0ZXJlZERhdGEubWFwKChkOiBTdXJ2ZXlSZXNwb25zZSkgPT4gXG4gICAgICAgIGN1cnJlbnRUYXJnZXQgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnIFxuICAgICAgICAgICAgPyBnZXRWYWxpZFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMClcbiAgICAgICAgICAgIDogZFtjdXJyZW50VGFyZ2V0IGFzIGtleW9mIFN1cnZleVJlc3BvbnNlXVxuICAgICAgICApXG4gICAgICApKS5maWx0ZXIoKHZhbHVlKTogdmFsdWUgaXMgc3RyaW5nID0+IFxuICAgICAgICB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHZhbHVlLmxlbmd0aCA+IDBcbiAgICAgICkuc29ydCgpOyAvLyBBZGQgY29uc2lzdGVudCBzb3J0aW5nXG4gICAgfVxuICB9LCBbZmlsdGVyZWREYXRhLCBjdXJyZW50VGFyZ2V0XSk7XG5cbiAgLy8gLS0tIFJlc3BvbnNpdmUgY2hhcnQgc2l6aW5nIGJhc2VkIG9uIGRhdGEgc2l6ZSAtLS1cbiAgLy8gU2V0IHNlbnNpYmxlIG1pbi9tYXggY2hhcnQgZGltZW5zaW9uc1xuICBjb25zdCBNSU5fQ0hBUlRfSEVJR0hUID0gMTgwO1xuICBjb25zdCBNQVhfQ0hBUlRfSEVJR0hUID0gNzAwO1xuICBjb25zdCBNSU5fQ0hBUlRfV0lEVEggPSAzMjA7XG4gIGNvbnN0IE1BWF9DSEFSVF9XSURUSCA9IDE0MDA7XG5cbiAgLy8gQ2FsY3VsYXRlIG5vZGUgY291bnQgZm9yIHNpemluZ1xuICBjb25zdCBub2RlQ291bnQgPSBNYXRoLm1heChzb3VyY2VzLmxlbmd0aCwgdGFyZ2V0cy5sZW5ndGgsIDEpO1xuXG4gIC8vIC0tLSBEeW5hbWljIG1hcmdpbiBjYWxjdWxhdGlvbiBmb3IgZnVsbCBsYWJlbCB2aXNpYmlsaXR5IChtb3ZlZCB1cCkgLS0tXG4gIC8vIEhlbHBlciB0byBtZWFzdXJlIHRleHQgd2lkdGggaW4gcHhcbiAgZnVuY3Rpb24gbWVhc3VyZVRleHRXaWR0aCh0ZXh0OiBzdHJpbmcsIGZvbnQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gMTAwOyAvLyBmYWxsYmFjayBmb3IgU1NSXG4gICAgaWYgKCEobWVhc3VyZVRleHRXaWR0aCBhcyBhbnkpLl9jYW52YXMpIHtcbiAgICAgIChtZWFzdXJlVGV4dFdpZHRoIGFzIGFueSkuX2NhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuICAgIH1cbiAgICBjb25zdCBjYW52YXMgPSAobWVhc3VyZVRleHRXaWR0aCBhcyBhbnkpLl9jYW52YXMgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XG4gICAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgIGlmICghY29udGV4dCkgcmV0dXJuIDEwMDtcbiAgICBjb250ZXh0LmZvbnQgPSBmb250O1xuICAgIHJldHVybiBjb250ZXh0Lm1lYXN1cmVUZXh0KHRleHQpLndpZHRoO1xuICB9XG5cbiAgLy8gRHluYW1pY2FsbHkgc2NhbGUgbGFiZWwgZm9udCBzaXplIHdpdGggbm9kZSBoZWlnaHQgKGNsYW1wIGJldHdlZW4gMTJweCBhbmQgMjhweClcbiAgY29uc3QgbGFiZWxGb250U2l6ZSA9IE1hdGgubWF4KDEyLCBNYXRoLm1pbigyOCwgTWF0aC5mbG9vcihub2RlQ291bnQgPiAwID8gKGNvbnRhaW5lckhlaWdodCAvIG5vZGVDb3VudCkgKiAwLjUgOiAxNikpKTtcblxuICAvLyBGb250IGZvciBtZWFzdXJpbmdcbiAgY29uc3QgbGFiZWxGb250ID0gYGJvbGQgJHtsYWJlbEZvbnRTaXplfXB4IEF2ZW5pciBOZXh0IFdvcmxkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTRiBQcm8nLCAnUm9ib3RvJywgc2Fucy1zZXJpZmA7XG4gIGNvbnN0IGFsbExhYmVscyA9IFsuLi5zb3VyY2VzLCAuLi50YXJnZXRzXTtcbiAgY29uc3QgbGFiZWxXaWR0aHMgPSBhbGxMYWJlbHMubWFwKGxhYmVsID0+IG1lYXN1cmVUZXh0V2lkdGgobGFiZWwsIGxhYmVsRm9udCkpO1xuICBjb25zdCBtYXhMYWJlbFdpZHRoID0gTWF0aC5tYXgoLi4ubGFiZWxXaWR0aHMsIDgwKTsgLy8gZmFsbGJhY2sgbWluXG4gIGNvbnN0IGxhYmVsUGFkZGluZyA9IDI0O1xuICAvLyBSZWR1Y2UgbWFyZ2lucyB0byBwcmV2ZW50IGV4Y2Vzc2l2ZSBnYXBzXG4gIC8vIFByaW9yaXRpemUgbmVnYXRpdmUgc3BhY2UgZm9yIGRyb3Bkb3ducyBhbmQgaW5kZXggZGF0YSBjYXRlZ29yaWVzXG4gIC8vIE1pbmltdW0gbGVmdCBtYXJnaW4gZm9yIGRyb3Bkb3duczogMTIwcHgsIGJ1dCBhbGxvdyBtb3JlIGZvciBsb25nIGxhYmVsc1xuICBjb25zdCBtaW5Ecm9wZG93bk1hcmdpbiA9IDEyMDtcbiAgLy8gSW5jcmVhc2UgbGVmdCBtYXJnaW4gdG8gYWx3YXlzIGFjY29tbW9kYXRlIHRoZSBsb25nZXN0IGxhYmVsIHBsdXMgZXh0cmEgcGFkZGluZyBmb3IgY2xhcml0eVxuICBjb25zdCBleHRyYUxhYmVsU3BhY2UgPSA0MDsgLy8gRXh0cmEgc3BhY2UgZm9yIHZpc3VhbCBjb21mb3J0XG4gIGNvbnN0IG1heExlZnRNYXJnaW4gPSAyNjA7IC8vIENhcCB0byBwcmV2ZW50IGV4Y2Vzc2l2ZSBtYXJnaW5cbiAgY29uc3QgbWFyZ2luID0ge1xuICAgIHRvcDogNjAsIC8vIEluY3JlYXNlZCBmb3IgZHJvcGRvd25zXG4gICAgcmlnaHQ6IE1hdGgubWF4KE1hdGgubWluKG1heExhYmVsV2lkdGggKyBsYWJlbFBhZGRpbmcsIDE1MCksIG1pbkRyb3Bkb3duTWFyZ2luKSxcbiAgICBib3R0b206IDIwLFxuICAgIGxlZnQ6IE1hdGgubWluKG1heExhYmVsV2lkdGggKyBsYWJlbFBhZGRpbmcgKyBleHRyYUxhYmVsU3BhY2UsIG1heExlZnRNYXJnaW4pXG4gIH07XG5cbiAgLy8gLS0tIFNwYXJzZSBEYXRhIFR1bmluZyAtLS1cbiAgLy8gRm9yIHNwYXJzZSBkYXRhLCBzaHJpbmsgY2hhcnQgYW5kIGNhcCBub2RlL2xpbmsgc2l6ZVxuICBsZXQgYXZhaWxhYmxlSGVpZ2h0ID0gTWF0aC5tYXgoTUlOX0NIQVJUX0hFSUdIVCwgTWF0aC5taW4oY29udGFpbmVySGVpZ2h0IC0gNDAsIE1BWF9DSEFSVF9IRUlHSFQpKTtcbiAgbGV0IG1heE5vZGVIZWlnaHQgPSA0ODtcbiAgbGV0IG1heExpbmtXaWR0aCA9IDMyO1xuICBpZiAobm9kZUNvdW50IDw9IDMpIHtcbiAgICBhdmFpbGFibGVIZWlnaHQgPSBNYXRoLm1heChNSU5fQ0hBUlRfSEVJR0hULCBNYXRoLm1pbigyMjAsIGF2YWlsYWJsZUhlaWdodCkpOyAvLyBTaHJpbmsgY2hhcnQgaGVpZ2h0XG4gICAgbWF4Tm9kZUhlaWdodCA9IDI4OyAvLyBDYXAgbm9kZSBoZWlnaHRcbiAgICBtYXhMaW5rV2lkdGggPSAxNjsgIC8vIENhcCBsaW5rIHRoaWNrbmVzc1xuICB9XG4gIGlmIChub2RlQ291bnQgPj0gMTApIHtcbiAgICBhdmFpbGFibGVIZWlnaHQgPSBNYXRoLm1pbihNQVhfQ0hBUlRfSEVJR0hULCBNYXRoLm1heChhdmFpbGFibGVIZWlnaHQsIDUwMCkpO1xuICB9XG5cbiAgLy8gTm9kZSBoZWlnaHQgYW5kIHBhZGRpbmcgbG9naWNcbiAgY29uc3QgbWluTm9kZUhlaWdodCA9IDE2O1xuICBjb25zdCBtaW5QYWRkaW5nID0gODtcbiAgbGV0IG5vZGVIZWlnaHQgPSBNYXRoLmZsb29yKChhdmFpbGFibGVIZWlnaHQgLSAobm9kZUNvdW50ICsgMSkgKiBtaW5QYWRkaW5nKSAvIG5vZGVDb3VudCk7XG4gIG5vZGVIZWlnaHQgPSBNYXRoLm1heChtaW5Ob2RlSGVpZ2h0LCBNYXRoLm1pbihub2RlSGVpZ2h0LCBtYXhOb2RlSGVpZ2h0KSk7XG4gIGxldCBub2RlUGFkZGluZyA9IChhdmFpbGFibGVIZWlnaHQgLSBub2RlQ291bnQgKiBub2RlSGVpZ2h0KSAvIChub2RlQ291bnQgKyAxKTtcbiAgLy8gQ2xhbXAgbm9kZVBhZGRpbmcgdG8gYSBtYXhpbXVtIHRvIHByZXZlbnQgZXhjZXNzaXZlIHZlcnRpY2FsIGdhcHNcbiAgbm9kZVBhZGRpbmcgPSBNYXRoLm1heChtaW5QYWRkaW5nLCBNYXRoLm1pbihub2RlUGFkZGluZywgNDApKTtcblxuICAvLyBSZXNwb25zaXZlIGNoYXJ0IHdpZHRoXG4gIGxldCBjaGFydFdpZHRoID0gTWF0aC5tYXgoTUlOX0NIQVJUX1dJRFRILCBNYXRoLm1pbihjb250YWluZXJXaWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0LCBNQVhfQ0hBUlRfV0lEVEgpKTtcbiAgbGV0IGNoYXJ0SGVpZ2h0ID0gYXZhaWxhYmxlSGVpZ2h0O1xuXG4gIC8vIElmIHZlcnkgc3BhcnNlLCBzaHJpbmsgd2lkdGggdG9vXG4gIGlmIChub2RlQ291bnQgPD0gMykge1xuICAgIGNoYXJ0V2lkdGggPSBNYXRoLm1heChNSU5fQ0hBUlRfV0lEVEgsIE1hdGgubWluKGNoYXJ0V2lkdGgsIDQyMCkpO1xuICB9XG5cbiAgLy8gSWYgdmVyeSBkZW5zZSwgYWxsb3cgbW9yZSB3aWR0aFxuICBpZiAobm9kZUNvdW50ID49IDEwKSB7XG4gICAgY2hhcnRXaWR0aCA9IE1hdGgubWluKE1BWF9DSEFSVF9XSURUSCwgTWF0aC5tYXgoY2hhcnRXaWR0aCwgOTAwKSk7XG4gIH1cblxuICAvLyAtLS0gU2Fua2V5IGxheW91dDogZW5zdXJlIGxlZnRtb3N0IG5vZGVzIGFyZSBmbHVzaCB3aXRoIHRoZSBsZWZ0IGVkZ2UgLS0tXG4gIC8vIFRoZSBzYW5rZXkgZXh0ZW50IGlzIFtbMCwwXSxbY2hhcnRXaWR0aCxjaGFydEhlaWdodF1dIGFuZCB0aGUgZ3JvdXAgdHJhbnNmb3JtIGlzIHRyYW5zbGF0ZShtYXJnaW4ubGVmdCwgbWFyZ2luLnRvcClcbiAgLy8gVGhpcyBlbnN1cmVzIHgwPTAgZm9yIGxlZnRtb3N0IG5vZGVzLCBzbyBjb25uZWN0b3JzIHN0YXJ0IGZsdXNoIHdpdGggdGhlIGxlZnQgZWRnZSBvZiB0aGUgY2hhcnQgYXJlYVxuICAvLyAoTm8gY29kZSBjaGFuZ2UgbmVlZGVkIGhlcmUgaWYgZXh0ZW50IGFuZCB0cmFuc2Zvcm0gYXJlIGNvcnJlY3QpXG5cbiAgLy8gRGVidWcgbG9nZ2luZ1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzb3VyY2VzLmxlbmd0aCA9PT0gMCB8fCB0YXJnZXRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCc9PT0gQUxMVVZJQUwgRElBR1JBTSBERUJVRyA9PT0nKTtcbiAgICBjb25zb2xlLmxvZygn8J+Wpe+4jyAgQ29udGFpbmVyIERpbWVuc2lvbnM6JywgY29udGFpbmVyV2lkdGgsICd4JywgY29udGFpbmVySGVpZ2h0KTtcbiAgICBjb25zb2xlLmxvZygn8J+TjyBNYXJnaW46JywgbWFyZ2luKTtcbiAgICBjb25zb2xlLmxvZygn8J+TiiBDaGFydCBEaW1lbnNpb25zOicsIGNoYXJ0SGVpZ2h0LCAneCcsIGNoYXJ0SGVpZ2h0KTtcbiAgICBjb25zb2xlLmxvZygn8J+OryBBdmFpbGFibGUgQ2hhcnQgU3BhY2U6JywgY2hhcnRIZWlnaHQsICd4JywgY2hhcnRIZWlnaHQpO1xuICAgIGNvbnNvbGUubG9nKCfwn5OIIE5vZGUgQ291bnQgLSBTb3VyY2VzOicsIHNvdXJjZXMubGVuZ3RoLCAnVGFyZ2V0czonLCB0YXJnZXRzLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coJ/CflKIgTm9kZSBIZWlnaHQ6Jywgbm9kZUhlaWdodCwgJ05vZGUgUGFkZGluZzonLCBub2RlUGFkZGluZyk7XG4gICAgY29uc29sZS5sb2coJ/CflKQgTGFiZWwgRm9udCBTaXplOicsIGxhYmVsRm9udFNpemUpO1xuICAgIGNvbnNvbGUubG9nKCfwn5OQIE1heCBMYWJlbCBXaWR0aDonLCBNYXRoLm1heCguLi5bLi4uc291cmNlcywgLi4udGFyZ2V0c10ubWFwKGxhYmVsID0+IG1lYXN1cmVUZXh0V2lkdGgobGFiZWwsIGBib2xkICR7bGFiZWxGb250U2l6ZX1weCBBdmVuaXIgTmV4dCBXb3JsZCwgc2Fucy1zZXJpZmApKSwgODApKTtcbiAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcbiAgfSwgW2NvbnRhaW5lcldpZHRoLCBjb250YWluZXJIZWlnaHQsIGNoYXJ0SGVpZ2h0LCBtYXJnaW4sIHNvdXJjZXMubGVuZ3RoLCB0YXJnZXRzLmxlbmd0aCwgbm9kZUhlaWdodCwgbm9kZVBhZGRpbmcsIGxhYmVsRm9udFNpemVdKTtcblxuICAvLyBVc2UgcmVmcyB0byB0cmFjayBjdXJyZW50IHZhbHVlcyB3aXRob3V0IHRyaWdnZXJpbmcgcmUtcmVuZGVyc1xuICBjb25zdCBjdXJyZW50U291cmNlUmVmID0gdXNlUmVmKGN1cnJlbnRTb3VyY2UpO1xuICBjb25zdCBjdXJyZW50VGFyZ2V0UmVmID0gdXNlUmVmKGN1cnJlbnRUYXJnZXQpO1xuICBcbiAgLy8gVXBkYXRlIHJlZnMgd2hlbiBzdGF0ZSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY3VycmVudFNvdXJjZVJlZi5jdXJyZW50ID0gY3VycmVudFNvdXJjZTtcbiAgfSwgW2N1cnJlbnRTb3VyY2VdKTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY3VycmVudFRhcmdldFJlZi5jdXJyZW50ID0gY3VycmVudFRhcmdldDtcbiAgfSwgW2N1cnJlbnRUYXJnZXRdKTtcbiAgY29uc3QgW2luc2lnaHRzLCBzZXRJbnNpZ2h0c10gPSB1c2VTdGF0ZTxBcnJheTx7IHRpdGxlOiBzdHJpbmc7IHZhbHVlOiBzdHJpbmcgfCBudW1iZXI7IGRlc2NyaXB0aW9uPzogc3RyaW5nIH0+PihbXSk7XG4gIGNvbnN0IFtob3ZlcmVkTm9kZSwgc2V0SG92ZXJlZE5vZGVdID0gdXNlU3RhdGU8U2Fua2V5Tm9kZSB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaG92ZXJlZExpbmssIHNldEhvdmVyZWRMaW5rXSA9IHVzZVN0YXRlPFNhbmtleUxpbmsgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3Rvb2x0aXAsIHNldFRvb2x0aXBdID0gdXNlU3RhdGU8VG9vbHRpcFN0YXRlIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsYXN0Q2F0ZWdvcnlDaGFuZ2UsIHNldExhc3RDYXRlZ29yeUNoYW5nZV0gPSB1c2VTdGF0ZTx7IHNvdXJjZTogc3RyaW5nOyB0YXJnZXQ6IHN0cmluZyB9Pih7IHNvdXJjZTogY3VycmVudFNvdXJjZSwgdGFyZ2V0OiBjdXJyZW50VGFyZ2V0IH0pO1xuICBjb25zdCBbY3VycmVudFRhcmdldEluZGV4LCBzZXRDdXJyZW50VGFyZ2V0SW5kZXhdID0gdXNlU3RhdGU8bnVtYmVyPigwKTtcbiAgY29uc3QgW2lzQW5pbWF0aW5nLCBzZXRJc0FuaW1hdGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW2hvdmVyZWRTb3VyY2VJbmRleCwgc2V0SG92ZXJlZFNvdXJjZUluZGV4XSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaG92ZXJlZFRhcmdldEluZGV4LCBzZXRIb3ZlcmVkVGFyZ2V0SW5kZXhdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0luRnVsbE9wYWNpdHlTdGF0ZSwgc2V0SXNJbkZ1bGxPcGFjaXR5U3RhdGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYW5pbWF0aW9uUGhhc2UsIHNldEFuaW1hdGlvblBoYXNlXSA9IHVzZVN0YXRlPCdmdWxsJyB8ICdoaWdobGlnaHRpbmcnIHwgJ3RyYW5zaXRpb25pbmcnPignZnVsbCcpO1xuXG4gIGNvbnN0IGFuaW1hdGlvblJlZiA9IHVzZVJlZjxBbmltYXRpb25TdGF0ZT4oe1xuICAgIHRpbWVyOiBudWxsLFxuICAgIHJ1bm5pbmc6IGZhbHNlLFxuICAgIGN1cnJlbnRTb3VyY2VJbmRleDogMCxcbiAgICBjdXJyZW50VGFyZ2V0SW5kZXg6IDAsXG4gICAgaXNQYXVzZWQ6IGZhbHNlLFxuICAgIHBhdXNlZEF0OiBEYXRlLm5vdygpLFxuICAgIHJlc3VtZUZyb206IG51bGwsXG4gICAgY3ljbGVDb3VudDogMFxuICB9KTtcblxuICAvLyBDaGVjayBmb3IgcmVkdWNlZCBtb3Rpb24gcHJlZmVyZW5jZVxuICBjb25zdCBwcmVmZXJzUmVkdWNlZE1vdGlvbiA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSknKS5tYXRjaGVzO1xuICB9LCBbXSk7XG5cbiAgLy8gQWRqdXN0IGFuaW1hdGlvbiBkdXJhdGlvbnMgYmFzZWQgb24gbW90aW9uIHByZWZlcmVuY2VcbiAgY29uc3QgYW5pbWF0aW9uRHVyYXRpb25zID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgYmFzZVNwZWVkID0gc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCB8fCAzMDAwO1xuICAgIGNvbnN0IHJlZHVjdGlvbkZhY3RvciA9IHByZWZlcnNSZWR1Y2VkTW90aW9uID8gMC41IDogMTtcbiAgICByZXR1cm4ge1xuICAgICAgc3RlcER1cmF0aW9uOiBNYXRoLm1heCg4MDAsIChiYXNlU3BlZWQgLyA4KSAqIHJlZHVjdGlvbkZhY3RvciksXG4gICAgICBwYXVzZUR1cmF0aW9uOiBNYXRoLm1heCg0MDAsIChiYXNlU3BlZWQgLyAxMikgKiByZWR1Y3Rpb25GYWN0b3IpLFxuICAgICAgY2F0ZWdvcnlQYXVzZUR1cmF0aW9uOiBNYXRoLm1heCgxNTAwLCAoYmFzZVNwZWVkIC8gMykgKiByZWR1Y3Rpb25GYWN0b3IpLFxuICAgICAgbGlua1RyYW5zaXRpb25EdXJhdGlvbjogcHJlZmVyc1JlZHVjZWRNb3Rpb24gPyA0MDAgOiA3NTBcbiAgICB9O1xuICB9LCBbc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCwgcHJlZmVyc1JlZHVjZWRNb3Rpb25dKTtcblxuICAvLyBHZXQgdmlzdWFsIG9yZGVyIG9mIHNvdXJjZSBub2RlcyAodG9wLXRvLWJvdHRvbSBhcyB0aGV5IGFwcGVhcilcbiAgY29uc3Qgc29ydGVkU291cmNlcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICghZmlsdGVyZWREYXRhLmxlbmd0aCB8fCAhY2hhcnRIZWlnaHQgfHwgIWNoYXJ0SGVpZ2h0KSByZXR1cm4gc291cmNlcztcblxuICAgIGNvbnN0IHNvdXJjZXNGb3JOb2RlcyA9IFsuLi5zb3VyY2VzXTtcbiAgICBpZiAoY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycpIHtcbiAgICAgIHNvdXJjZXNGb3JOb2Rlcy5zb3J0KChhLCBiKSA9PiBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYSkgLSBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYikpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzb3VyY2VzRm9yTm9kZXMuc29ydCgpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBTYW5rZXkgbGF5b3V0IHRvIGdldCB2aXN1YWwgb3JkZXJcbiAgICBjb25zdCBub2RlcyA9IFtcbiAgICAgIC4uLnNvdXJjZXNGb3JOb2Rlcy5tYXAoKG5hbWUpID0+ICh7IGlkOiBgJHtjdXJyZW50U291cmNlfToke25hbWV9YCwgbmFtZSwgY2F0ZWdvcnk6IGN1cnJlbnRTb3VyY2UgfSkpLFxuICAgICAgLi4udGFyZ2V0cy5tYXAoKG5hbWUpID0+ICh7IGlkOiBgJHtjdXJyZW50VGFyZ2V0fToke25hbWV9YCwgbmFtZSwgY2F0ZWdvcnk6IGN1cnJlbnRUYXJnZXQgfSkpLFxuICAgIF07XG5cbiAgICBjb25zdCBsaW5rc01hcCA9IG5ldyBNYXA8c3RyaW5nLCB7IHNvdXJjZTogc3RyaW5nOyB0YXJnZXQ6IHN0cmluZzsgdmFsdWU6IG51bWJlciB9PigpOyBcbiAgICBmaWx0ZXJlZERhdGEuZm9yRWFjaCgoZCkgPT4ge1xuICAgICAgY29uc3Qgc291cmNlID0gY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycgXG4gICAgICAgID8gZ2V0VmFsaWRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApIFxuICAgICAgICA6IChkIGFzIGFueSlbY3VycmVudFNvdXJjZV07XG4gICAgICBjb25zdCB0YXJnZXQgPSBjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJ1xuICAgICAgICA/IGdldFZhbGlkWWVhcnNDYXRlZ29yeShkLnllYXJzX2F0X21lZHRyb25pYyB8fCAwKVxuICAgICAgICA6IChkIGFzIGFueSlbY3VycmVudFRhcmdldF07XG4gICAgICBcbiAgICAgIGlmICghc291cmNlc0Zvck5vZGVzLmluY2x1ZGVzKHNvdXJjZSkgfHwgIXRhcmdldHMuaW5jbHVkZXModGFyZ2V0KSkgcmV0dXJuO1xuICAgICAgXG4gICAgICBjb25zdCBzb3VyY2VJZCA9IGAke2N1cnJlbnRTb3VyY2V9OiR7c291cmNlfWA7XG4gICAgICBjb25zdCB0YXJnZXRJZCA9IGAke2N1cnJlbnRUYXJnZXR9OiR7dGFyZ2V0fWA7XG4gICAgICBjb25zdCBrZXkgPSBgJHtzb3VyY2VJZH3ihpIke3RhcmdldElkfWA7XG4gICAgICBcbiAgICAgIGlmICghbGlua3NNYXAuaGFzKGtleSkpIHtcbiAgICAgICAgbGlua3NNYXAuc2V0KGtleSwgeyBzb3VyY2U6IHNvdXJjZUlkLCB0YXJnZXQ6IHRhcmdldElkLCB2YWx1ZTogMCB9KTtcbiAgICAgIH1cbiAgICAgIGxpbmtzTWFwLmdldChrZXkpIS52YWx1ZSArPSAxO1xuICAgIH0pO1xuXG4gICAgY29uc3QgbGlua3MgPSBBcnJheS5mcm9tKGxpbmtzTWFwLnZhbHVlcygpKTtcbiAgICBjb25zdCBzYW5rZXlHZW5lcmF0b3IgPSBzYW5rZXk8YW55LCBhbnk+KClcbiAgICAgIC5ub2RlSWQoKGQ6IGFueSkgPT4gZC5pZClcbiAgICAgIC5ub2RlV2lkdGgoMTIpXG4gICAgICAubm9kZVBhZGRpbmcobm9kZVBhZGRpbmcpXG4gICAgICAuZXh0ZW50KFtbMCwgMF0sIFtjaGFydEhlaWdodCwgY2hhcnRIZWlnaHRdXSk7XG5cbiAgICBjb25zdCBzYW5rZXlEYXRhID0gc2Fua2V5R2VuZXJhdG9yKHtcbiAgICAgIG5vZGVzOiBub2Rlcy5tYXAoKGQpID0+ICh7IC4uLmQgfSkpLFxuICAgICAgbGlua3M6IGxpbmtzLm1hcCgoZCkgPT4gKHsgLi4uZCB9KSksXG4gICAgfSk7XG5cbiAgICAvLyBHZXQgc291cmNlIG5vZGVzIGluIHZpc3VhbCBvcmRlciAodG9wIHRvIGJvdHRvbSlcbiAgICBjb25zdCBzb3VyY2VOb2RlcyA9IHNhbmtleURhdGEubm9kZXNcbiAgICAgIC5maWx0ZXIoKGQ6IGFueSkgPT4gZC5jYXRlZ29yeSA9PT0gY3VycmVudFNvdXJjZSlcbiAgICAgIC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4gYS55MCAtIGIueTApO1xuXG4gICAgcmV0dXJuIHNvdXJjZU5vZGVzLm1hcCgoZDogYW55KSA9PiBkLm5hbWUpO1xuICB9LCBbZmlsdGVyZWREYXRhLCBzb3VyY2VzLCB0YXJnZXRzLCBjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0LCBjaGFydEhlaWdodCwgbm9kZVBhZGRpbmddKTtcblxuICAvLyBFbmhhbmNlZCBhbmltYXRpb24gZnVuY3Rpb24gd2l0aCBjb21wcmVoZW5zaXZlIGRlYnVnIHRyYWNraW5nXG4gIGNvbnN0IGFuaW1hdGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgLy8gQ2hlY2sgaWYgYW5pbWF0aW9uIGlzIHBhdXNlZFxuICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgY29uc29sZS5sb2coJ+KPuO+4jyAgQW5pbWF0aW9uIGlzIHBhdXNlZCwgc2tpcHBpbmcgY3ljbGUnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgfHwgIWZpbHRlcmVkRGF0YS5sZW5ndGgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinYwgQW5pbWF0aW9uIHN0b3BwZWQ6Jywge1xuICAgICAgICBydW5uaW5nOiBhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nLFxuICAgICAgICBkYXRhTGVuZ3RoOiBmaWx0ZXJlZERhdGEubGVuZ3RoXG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTYWZldHkgY2hlY2s6IHByZXZlbnQgaW5maW5pdGUgbG9vcHNcbiAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3ljbGVDb3VudCA+IDEwMDApIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5uRIEFuaW1hdGlvbiBjeWNsZSBsaW1pdCByZWFjaGVkLCByZXNldHRpbmcnKTtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN5Y2xlQ291bnQgPSAwO1xuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4ID0gMDtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCA9IDA7XG4gICAgfVxuXG4gICAgLy8gSW5jcmVtZW50IGN5Y2xlIGNvdW50ZXJcbiAgICBhbmltYXRpb25SZWYuY3VycmVudC5jeWNsZUNvdW50Kys7XG5cbiAgICAvLyBTZXQgYW5pbWF0aW9uIHBoYXNlIHRvIGhpZ2hsaWdodGluZ1xuICAgIHNldEFuaW1hdGlvblBoYXNlKCdoaWdobGlnaHRpbmcnKTtcbiAgICAgICAgc2V0SXNJbkZ1bGxPcGFjaXR5U3RhdGUoZmFsc2UpO1xuICAgIFxuICAgIC8vIFNldCB0aGUgaG92ZXJlZCBzb3VyY2UgaW5kZXggdG8gbWF0Y2ggdGhlIGFuaW1hdGlvblxuICAgIHNldEhvdmVyZWRTb3VyY2VJbmRleChhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U291cmNlSW5kZXgpO1xuXG4gICAgY29uc3QgdGFyZ2V0T3B0aW9ucyA9IGF2YWlsYWJsZUZpZWxkc1xuICAgICAgLmZpbHRlcihmID0+IGYudmFsdWUgIT09IGN1cnJlbnRTb3VyY2VSZWYuY3VycmVudClcbiAgICAgIC5tYXAoZiA9PiBmLnZhbHVlKTtcbiAgICBcbiAgICAvLyBEZWJ1ZzogTG9nIHRoZSB0YXJnZXQgb3B0aW9ucyB0byB2ZXJpZnkgdGhleSdyZSBjb3JyZWN0XG4gICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTb3VyY2VJbmRleCA9PT0gMCkge1xuICAgICAgY29uc29sZS5sb2coJ/Cfjq8gQXZhaWxhYmxlIHRhcmdldCBvcHRpb25zIGZvcicsIGN1cnJlbnRTb3VyY2VSZWYuY3VycmVudCwgJzonLCB0YXJnZXRPcHRpb25zKTtcbiAgICB9XG5cbiAgICAgICAgICAvLyBDT01QUkVIRU5TSVZFIERFQlVHOiBMb2cgY3VycmVudCBzdGF0ZSB3aXRoIGZ1bGwgZGV0YWlsXG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBBTklNQVRJT04gQ1lDTEUgREVCVUc6Jywge1xuICAgICAgICAn8J+TjSBDdXJyZW50IFBvc2l0aW9uJzoge1xuICAgICAgICAgIHNvdXJjZUluZGV4OiBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U291cmNlSW5kZXgsXG4gICAgICAgICAgdGFyZ2V0SW5kZXg6IGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCxcbiAgICAgICAgICBzb3VyY2VOYW1lOiBzb3J0ZWRTb3VyY2VzW2FuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTb3VyY2VJbmRleF0sXG4gICAgICAgICAgdGFyZ2V0TmFtZTogY3VycmVudFRhcmdldFJlZi5jdXJyZW50XG4gICAgICAgIH0sXG4gICAgICAgICfwn5OKIENhdGVnb3JpZXMnOiB7XG4gICAgICAgICAgY3VycmVudFNvdXJjZTogY3VycmVudFNvdXJjZVJlZi5jdXJyZW50LFxuICAgICAgICAgIGN1cnJlbnRUYXJnZXQ6IGN1cnJlbnRUYXJnZXRSZWYuY3VycmVudCxcbiAgICAgICAgICBzb3VyY2VPcHRpb25zOiBhdmFpbGFibGVGaWVsZHMubWFwKGYgPT4gZi52YWx1ZSksXG4gICAgICAgICAgdGFyZ2V0T3B0aW9uc1xuICAgICAgICB9LFxuICAgICAgJ/Cfk4ggUHJvZ3Jlc3MnOiB7XG4gICAgICAgIHNvdXJjZVByb2dyZXNzOiBgJHthbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U291cmNlSW5kZXggKyAxfS8ke3NvcnRlZFNvdXJjZXMubGVuZ3RofWAsXG4gICAgICAgIHRhcmdldFByb2dyZXNzOiBgJHthbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50VGFyZ2V0SW5kZXggKyAxfS8ke3RhcmdldE9wdGlvbnMubGVuZ3RofWAsXG4gICAgICAgIGlzTGFzdFNvdXJjZTogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4ID49IHNvcnRlZFNvdXJjZXMubGVuZ3RoIC0gMSxcbiAgICAgICAgaGFzTW9yZVRhcmdldHM6IGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCA8IHRhcmdldE9wdGlvbnMubGVuZ3RoIC0gMVxuICAgICAgfSxcbiAgICAgICfwn46vIFNvdXJjZXMnOiBzb3J0ZWRTb3VyY2VzLFxuICAgICAgJ/Cfjq8gVGFyZ2V0cyc6IHRhcmdldE9wdGlvbnMsXG4gICAgICAn4o+x77iPICBUaW1pbmdzJzogYW5pbWF0aW9uRHVyYXRpb25zXG4gICAgfSk7XG5cbiAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4IDwgc29ydGVkU291cmNlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIC8vIE1vdmUgdG8gbmV4dCBzb3VyY2VcbiAgICAgICAgY29uc3QgbmV4dFRpbWVvdXQgPSBhbmltYXRpb25EdXJhdGlvbnMuc3RlcER1cmF0aW9uICsgYW5pbWF0aW9uRHVyYXRpb25zLnBhdXNlRHVyYXRpb247XG4gICAgICAgIGNvbnN0IHByb2dyZXNzID0gYCR7YW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4ICsgMX0vJHtzb3J0ZWRTb3VyY2VzLmxlbmd0aH1gO1xuICAgICAgICBjb25zb2xlLmxvZyhg8J+OryBTb3VyY2UgJHtwcm9ncmVzc306IEhpZ2hsaWdodGluZyAnJHtzb3J0ZWRTb3VyY2VzW2FuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTb3VyY2VJbmRleF19JyDihpIgJyR7Y3VycmVudFRhcmdldFJlZi5jdXJyZW50fScgZm9yICR7bmV4dFRpbWVvdXR9bXNgKTtcbiAgICAgIFxuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKCFhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nIHx8IGFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkKSByZXR1cm47XG4gICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTb3VyY2VJbmRleCsrO1xuICAgICAgICBhbmltYXRlKCk7XG4gICAgICB9LCBuZXh0VGltZW91dCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgLy8gQWZ0ZXIgbGFzdCBzb3VyY2UsIGNoZWNrIGlmIHdlIG5lZWQgdG8gY3ljbGUgdGFyZ2V0cyBvciBjaGFuZ2Ugc291cmNlIGNhdGVnb3J5XG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBFTkQgT0YgU09VUkNFUyAtIENoZWNraW5nIHRhcmdldCBjeWNsaW5nOicsIHtcbiAgICAgICAgY3VycmVudFRhcmdldEluZGV4OiBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50VGFyZ2V0SW5kZXgsXG4gICAgICAgIHRhcmdldE9wdGlvbnNMZW5ndGg6IHRhcmdldE9wdGlvbnMubGVuZ3RoLFxuICAgICAgICBoYXNNb3JlVGFyZ2V0czogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFRhcmdldEluZGV4IDwgdGFyZ2V0T3B0aW9ucy5sZW5ndGggLSAxLFxuICAgICAgICBhdmFpbGFibGVUYXJnZXRzOiB0YXJnZXRPcHRpb25zXG4gICAgICB9KTtcblxuICAgICAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFRhcmdldEluZGV4IDwgdGFyZ2V0T3B0aW9ucy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgLy8gU3RpbGwgaGF2ZSBtb3JlIHRhcmdldCBjYXRlZ29yaWVzIHRvIGN5Y2xlIHRocm91Z2hcbiAgICAgICAgICBjb25zdCB0YXJnZXRQcm9ncmVzcyA9IGAke2FuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCArIDJ9LyR7dGFyZ2V0T3B0aW9ucy5sZW5ndGh9YDtcbiAgICAgICAgICBjb25zb2xlLmxvZyhg8J+UhCDinIUgQ09NUExFVEVEIEFMTCBTT1VSQ0VTIGZvciAnJHtjdXJyZW50VGFyZ2V0UmVmLmN1cnJlbnR9JywgbW92aW5nIHRvIG5leHQgdGFyZ2V0ICgke3RhcmdldFByb2dyZXNzfSlgKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDbGVhciBhbnkgZXhpc3RpbmcgdGltZXIgdG8gcHJldmVudCBjb25mbGljdHNcbiAgICAgICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcik7XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC50aW1lciA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgfHwgYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHJldHVybjtcbiAgICAgICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCd0cmFuc2l0aW9uaW5nJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIE1vdmUgdG8gbmV4dCB0YXJnZXQgY2F0ZWdvcnlcbiAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCsrO1xuICAgICAgICAgICAgY29uc3QgbmV4dFRhcmdldCA9IHRhcmdldE9wdGlvbnNbYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFRhcmdldEluZGV4XTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn46vIOKcqCBORVcgVEFSR0VUIENBVEVHT1JZOicsIG5leHRUYXJnZXQsIGAoJHthbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50VGFyZ2V0SW5kZXggKyAxfS8ke3RhcmdldE9wdGlvbnMubGVuZ3RofSlgKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFRhcmdldCBwcm9ncmVzc2lvbiBkZWJ1ZzonLCB7XG4gICAgICAgICAgICAgIHByZXZpb3VzVGFyZ2V0OiBjdXJyZW50VGFyZ2V0UmVmLmN1cnJlbnQsXG4gICAgICAgICAgICAgIG5leHRUYXJnZXQsXG4gICAgICAgICAgICAgIGN1cnJlbnRUYXJnZXRJbmRleDogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFRhcmdldEluZGV4LFxuICAgICAgICAgICAgICBhbGxUYXJnZXRPcHRpb25zOiB0YXJnZXRPcHRpb25zXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNldEN1cnJlbnRUYXJnZXQobmV4dFRhcmdldCk7XG4gICAgICAgICAgICBzZXRMYXN0Q2F0ZWdvcnlDaGFuZ2UoeyBzb3VyY2U6IGN1cnJlbnRTb3VyY2VSZWYuY3VycmVudCwgdGFyZ2V0OiBuZXh0VGFyZ2V0IH0pO1xuICAgICAgICAgICAgb25RdWVzdGlvbkNoYW5nZT8uKGN1cnJlbnRTb3VyY2VSZWYuY3VycmVudCwgbmV4dFRhcmdldCk7XG4gICAgICAgICAgXG4gICAgICAgICAgICAvLyBSZXNldCBzb3VyY2UgaW5kZXggYW5kIHJlc3RhcnQgd2l0aCBuZXcgdGFyZ2V0XG4gICAgICAgICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U291cmNlSW5kZXggPSAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdGFydCB0aGUgbmV4dCBjeWNsZSBhZnRlciBhIGJyaWVmIHBhdXNlXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgJiYgIWFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkKSB7XG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBhbmltYXRpb25EdXJhdGlvbnMuY2F0ZWdvcnlQYXVzZUR1cmF0aW9uKTtcbiAgICAgICAgICB9LCBhbmltYXRpb25EdXJhdGlvbnMuY2F0ZWdvcnlQYXVzZUR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBXZSd2ZSBjeWNsZWQgdGhyb3VnaCBhbGwgdGFyZ2V0cywgbm93IGNoYW5nZSB0aGUgc291cmNlIGNhdGVnb3J5XG4gICAgICAgICAgY29uc29sZS5sb2coYPCflIQg4pyoIENPTVBMRVRFRCBBTEwgVEFSR0VUUyBmb3IgJyR7Y3VycmVudFNvdXJjZVJlZi5jdXJyZW50fScgLSBNb3ZpbmcgdG8gbmV4dCBzb3VyY2UgY2F0ZWdvcnkhIOKcqGApO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENsZWFyIGFueSBleGlzdGluZyB0aW1lciB0byBwcmV2ZW50IGNvbmZsaWN0c1xuICAgICAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcikge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGlmICghYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyB8fCBhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkgcmV0dXJuO1xuICAgICAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ3RyYW5zaXRpb25pbmcnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gTW92ZSB0byBuZXh0IHNvdXJjZSBjYXRlZ29yeVxuICAgICAgICAgICAgY29uc3Qgc291cmNlT3B0aW9ucyA9IGF2YWlsYWJsZUZpZWxkcy5tYXAoZiA9PiBmLnZhbHVlKTtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRTb3VyY2VJbmRleCA9IHNvdXJjZU9wdGlvbnMuaW5kZXhPZihjdXJyZW50U291cmNlUmVmLmN1cnJlbnQpO1xuICAgICAgICAgICAgY29uc3QgbmV4dFNvdXJjZUluZGV4ID0gKGN1cnJlbnRTb3VyY2VJbmRleCArIDEpICUgc291cmNlT3B0aW9ucy5sZW5ndGg7XG4gICAgICAgICAgICBjb25zdCBuZXh0U291cmNlID0gc291cmNlT3B0aW9uc1tuZXh0U291cmNlSW5kZXhdO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+OryDwn4aVIE5FVyBTT1VSQ0UgQ0FURUdPUlk6JywgbmV4dFNvdXJjZSwgJy0gU3RhcnRpbmcgZnJlc2ggY3ljbGUgd2l0aCBhbGwgdGFyZ2V0cycpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDYWxjdWxhdGUgdGFyZ2V0IG9wdGlvbnMgZm9yIHRoZSBORVcgc291cmNlIChpbmNsdWRpbmcgeWVhcnNfYXRfbWVkdHJvbmljKVxuICAgICAgICAgICAgY29uc3QgbmV3VGFyZ2V0T3B0aW9ucyA9IGF2YWlsYWJsZUZpZWxkc1xuICAgICAgICAgICAgICAuZmlsdGVyKGYgPT4gZi52YWx1ZSAhPT0gbmV4dFNvdXJjZSlcbiAgICAgICAgICAgICAgLm1hcChmID0+IGYudmFsdWUpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+UjSBOZXcgdGFyZ2V0IG9wdGlvbnMgZm9yJywgbmV4dFNvdXJjZSwgJzonLCBuZXdUYXJnZXRPcHRpb25zKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc2V0Q3VycmVudFNvdXJjZShuZXh0U291cmNlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gUmVzZXQgYm90aCBpbmRpY2VzIGFuZCBzdGFydCB3aXRoIGZpcnN0IHRhcmdldCBhZ2FpblxuICAgICAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4ID0gMDtcbiAgICAgICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCA9IDA7XG4gICAgICAgICAgICBjb25zdCBmaXJzdFRhcmdldCA9IG5ld1RhcmdldE9wdGlvbnNbMF07XG4gICAgICAgICAgICBzZXRDdXJyZW50VGFyZ2V0KGZpcnN0VGFyZ2V0KTtcbiAgICAgICAgICAgIHNldExhc3RDYXRlZ29yeUNoYW5nZSh7IHNvdXJjZTogbmV4dFNvdXJjZSwgdGFyZ2V0OiBmaXJzdFRhcmdldCB9KTtcbiAgICAgICAgICAgIG9uUXVlc3Rpb25DaGFuZ2U/LihuZXh0U291cmNlLCBmaXJzdFRhcmdldCk7XG4gICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdGFydCB0aGUgbmV4dCBjeWNsZSBhZnRlciBhIGxvbmdlciBwYXVzZVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nICYmICFhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgICAgICAgICAgIGFuaW1hdGUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgYW5pbWF0aW9uRHVyYXRpb25zLmNhdGVnb3J5UGF1c2VEdXJhdGlvbiAqIDEuNSk7IC8vIExvbmdlciBwYXVzZSBmb3Igc291cmNlIGNhdGVnb3J5IGNoYW5nZVxuICAgICAgICAgIH0sIGFuaW1hdGlvbkR1cmF0aW9ucy5jYXRlZ29yeVBhdXNlRHVyYXRpb24pO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW1xuICAgIGRhdGEubGVuZ3RoLFxuICAgIHNvcnRlZFNvdXJjZXMubGVuZ3RoLFxuICAgIG9uUXVlc3Rpb25DaGFuZ2UsXG4gICAgYW5pbWF0aW9uRHVyYXRpb25zLFxuICAgIGF2YWlsYWJsZUZpZWxkc1xuICAgIC8vIFJlbW92ZWQgc29ydGVkU291cmNlcyB0byBwcmV2ZW50IGRlcGVuZGVuY3kgbG9vcHNcbiAgXSk7XG5cblxuXG4gIC8vIEFuaW1hdGlvbiBlZmZlY3QgLSByZXN0YXJ0IHdoZW4gc2V0dGluZ3MgY2hhbmdlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ/CfjqwgQW5pbWF0aW9uIHVzZUVmZmVjdCB0cmlnZ2VyZWQ6Jywge1xuICAgICAgYXV0b1BsYXksXG4gICAgICBpc0F1dG9QbGF5RW5hYmxlZDogc2V0dGluZ3MuaXNBdXRvUGxheUVuYWJsZWQsXG4gICAgICBkYXRhTGVuZ3RoOiBkYXRhLmxlbmd0aCxcbiAgICAgIHN2Z1JlZkV4aXN0czogISFzdmdSZWYuY3VycmVudCxcbiAgICAgIGN1cnJlbnRTb3VyY2UsXG4gICAgICBjdXJyZW50VGFyZ2V0LFxuICAgICAgYXV0b1BsYXlTcGVlZDogc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCxcbiAgICAgIGlzUnVubmluZzogYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZ1xuICAgIH0pO1xuXG4gICAgaWYgKCFhdXRvUGxheSB8fCAhc2V0dGluZ3MuaXNBdXRvUGxheUVuYWJsZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinYwgQW5pbWF0aW9uIGRpc2FibGVkJyk7XG4gICAgICBpZiAoYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKTtcbiAgICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQudGltZXIgPSBudWxsO1xuICAgICAgfVxuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQucnVubmluZyA9IGZhbHNlO1xuICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgIHNldElzSW5GdWxsT3BhY2l0eVN0YXRlKHRydWUpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBpZiAoIWZpbHRlcmVkRGF0YS5sZW5ndGgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfinYwgTm8gZGF0YSBhdmFpbGFibGUgZm9yIGFuaW1hdGlvbicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXN2Z1JlZi5jdXJyZW50KSB7XG4gICAgICBjb25zb2xlLmxvZygn4p2MIFNWRyByZWYgbm90IGF2YWlsYWJsZScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFJlc3RhcnQgYW5pbWF0aW9uIHdoZW4gc3BlZWQgY2hhbmdlcyBvciBvbiBtYWpvciBjaGFuZ2VzXG4gICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SEIFJlc3RhcnRpbmcgYW5pbWF0aW9uIHdpdGggbmV3IHNldHRpbmdzOicsIHtcbiAgICAgICAgc291cmNlQ2F0ZWdvcnk6IGN1cnJlbnRTb3VyY2UsXG4gICAgICAgIHRvdGFsU291cmNlczogc29ydGVkU291cmNlcy5sZW5ndGgsXG4gICAgICAgIHRvdGFsVGFyZ2V0czogYXZhaWxhYmxlRmllbGRzLmZpbHRlcihmID0+IGYudmFsdWUgIT09IGN1cnJlbnRTb3VyY2UpLmxlbmd0aCxcbiAgICAgICAgc3BlZWQ6IHNldHRpbmdzLmF1dG9QbGF5U3BlZWQgKyAnbXMnXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gU3RvcCBjdXJyZW50IGFuaW1hdGlvblxuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcik7XG4gICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBTdGFydCBuZXcgYW5pbWF0aW9uIGN5Y2xlXG4gICAgICBjb25zb2xlLmxvZygn4pyFIFN0YXJ0aW5nIGFuaW1hdGlvbiBjeWNsZTonLCB7XG4gICAgICAgIHNvdXJjZUNhdGVnb3J5OiBjdXJyZW50U291cmNlLFxuICAgICAgICB0b3RhbFNvdXJjZXM6IHNvcnRlZFNvdXJjZXMubGVuZ3RoLFxuICAgICAgICB0b3RhbFRhcmdldHM6IGF2YWlsYWJsZUZpZWxkcy5maWx0ZXIoZiA9PiBmLnZhbHVlICE9PSBjdXJyZW50U291cmNlKS5sZW5ndGgsXG4gICAgICAgIHNwZWVkOiBzZXR0aW5ncy5hdXRvUGxheVNwZWVkICsgJ21zJ1xuICAgICAgfSk7XG5cbiAgICAgIC8vIEluaXRpYWxpemUgYW5pbWF0aW9uIHN0YXRlXG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nID0gdHJ1ZTtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRTb3VyY2VJbmRleCA9IDA7XG4gICAgICBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50VGFyZ2V0SW5kZXggPSAwO1xuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3ljbGVDb3VudCA9IDA7IC8vIFJlc2V0IGN5Y2xlIGNvdW50ZXJcblxuICAgICAgLy8gU3RhcnQgYW5pbWF0aW9uXG4gICAgICBhbmltYXRlKCk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcik7XG4gICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgPSBmYWxzZTtcbiAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdmdWxsJyk7XG4gICAgICBzZXRJc0luRnVsbE9wYWNpdHlTdGF0ZSh0cnVlKTtcbiAgICB9O1xuICB9LCBbXG4gICAgYXV0b1BsYXksXG4gICAgc2V0dGluZ3MuaXNBdXRvUGxheUVuYWJsZWQsXG4gICAgc2V0dGluZ3MuYXV0b1BsYXlTcGVlZCwgLy8gQWRkIHRoaXMgdG8gcmVzdGFydCB3aGVuIHNwZWVkIGNoYW5nZXNcbiAgICBmaWx0ZXJlZERhdGEubGVuZ3RoLFxuICAgIGN1cnJlbnRTb3VyY2UgLy8gT25seSByZXN0YXJ0IG9uIHNvdXJjZSBjaGFuZ2VzLCBub3QgdGFyZ2V0IGNoYW5nZXNcbiAgXSk7XG5cbiAgY29uc3Qgbm9kZUxhYmVsRm9udFNpemUgPSAxODsgLy8gbGFyZ2VyIGZvciByZWFkYWJpbGl0eVxuICBjb25zdCBub2RlTGFiZWxGb250V2VpZ2h0ID0gNzAwO1xuICBjb25zdCBub2RlTGFiZWxDb2xvciA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAnI0ZGRkZGRicgOiAnIzE3MEY1Ric7XG4gIGNvbnN0IG5vZGVMYWJlbEZvbnRGYW1pbHkgPSAnQXZlbmlyIE5leHQgV29ybGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTRiBQcm9cIiwgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZic7XG4gIGNvbnN0IG5vZGVMYWJlbE9mZnNldCA9IDI0O1xuXG4gIC8vIExvY2FsIGRlYnVnIHRvZ2dsZSBmb3IgdGhpcyBjb21wb25lbnQgaWYgbm8gZ2xvYmFsIGFkbWluIGNvbnRleHRcbiAgY29uc3QgW2xvY2FsRGVidWcsIHNldExvY2FsRGVidWddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd1RoZW1lVG9nZ2xlLCBzZXRTaG93VGhlbWVUb2dnbGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBkZWJ1Z09uID0gbG9jYWxEZWJ1ZztcblxuICAvLyBEZWJ1ZyBTYW5rZXkgZGF0YSBmb3Igb3V0bGluZXNcbiAgY29uc3QgW2RlYnVnU2Fua2V5RGF0YSwgc2V0RGVidWdTYW5rZXlEYXRhXSA9IHVzZVN0YXRlPGFueT4obnVsbCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHNvdXJjZXMpIHx8ICFBcnJheS5pc0FycmF5KHRhcmdldHMpKSByZXR1cm47XG4gICAgY29uc3Qgbm9kZXMgPSBbXG4gICAgICAuLi5zb3VyY2VzLm1hcCgobmFtZSkgPT4gKHsgaWQ6IGBzb3VyY2U6JHtuYW1lfWAsIG5hbWUsIGNhdGVnb3J5OiAnc291cmNlJyB9KSksXG4gICAgICAuLi50YXJnZXRzLm1hcCgobmFtZSkgPT4gKHsgaWQ6IGB0YXJnZXQ6JHtuYW1lfWAsIG5hbWUsIGNhdGVnb3J5OiAndGFyZ2V0JyB9KSksXG4gICAgXTtcbiAgICAvLyBPbmx5IGNyZWF0ZSBsaW5rcyBpZiBib3RoIHNpZGVzIGhhdmUgYXQgbGVhc3Qgb25lIG5vZGVcbiAgICBjb25zdCBsaW5rcyA9IChzb3VyY2VzLmxlbmd0aCAmJiB0YXJnZXRzLmxlbmd0aClcbiAgICAgID8gW3sgc291cmNlOiBgc291cmNlOiR7c291cmNlc1swXX1gLCB0YXJnZXQ6IGB0YXJnZXQ6JHt0YXJnZXRzWzBdfWAsIHZhbHVlOiAxIH1dXG4gICAgICA6IFtdO1xuICAgIGlmIChub2Rlcy5sZW5ndGggPCAyIHx8IGxpbmtzLmxlbmd0aCA8IDEpIHJldHVybjsgLy8gUHJldmVudCBpbnZhbGlkIGFycmF5IGxlbmd0aFxuICAgIGNvbnN0IHNhbmtleUdlbmVyYXRvciA9IHNhbmtleTxhbnksIGFueT4oKVxuICAgICAgLm5vZGVJZCgoZDogYW55KSA9PiBkLmlkKVxuICAgICAgLm5vZGVXaWR0aCgxMilcbiAgICAgIC5ub2RlUGFkZGluZyhub2RlUGFkZGluZylcbiAgICAgIC5leHRlbnQoW1swLCAwXSwgW2NoYXJ0SGVpZ2h0LCBjaGFydEhlaWdodF1dKTtcbiAgICBjb25zdCBzYW5rZXlEYXRhID0gc2Fua2V5R2VuZXJhdG9yKHsgbm9kZXM6IG5vZGVzLm1hcCgoZCkgPT4gKHsgLi4uZCB9KSksIGxpbmtzOiBsaW5rcy5tYXAoKGQpID0+ICh7IC4uLmQgfSkpIH0pO1xuICAgIHNldERlYnVnU2Fua2V5RGF0YShzYW5rZXlEYXRhKTtcbiAgfSwgW3NvdXJjZXMsIHRhcmdldHMsIGNoYXJ0SGVpZ2h0LCBub2RlUGFkZGluZ10pO1xuXG4gIC8vIFJlbmRlciBTYW5rZXkgZGlhZ3JhbVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghc3ZnUmVmLmN1cnJlbnQgfHwgIWZpbHRlcmVkRGF0YS5sZW5ndGgpIHJldHVybjtcblxuICAgIC8vIC0tLSBQZXJzaXN0ZW50IFNWRyBzdHJ1Y3R1cmUgLS0tXG4gICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0PFNWR1NWR0VsZW1lbnQsIHVua25vd24+KHN2Z1JlZi5jdXJyZW50KTtcbiAgICBzdmcuc2VsZWN0QWxsKCcqJykucmVtb3ZlKCk7IC8vIENsZWFyIHByZXZpb3VzIGNvbnRlbnRcbiAgICBzdmdcbiAgICAgIC5hdHRyKCd3aWR0aCcsIGNvbnRhaW5lcldpZHRoKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIGNvbnRhaW5lckhlaWdodClcbiAgICAgIC5hdHRyKCd2aWV3Qm94JywgYDAgMCAke2NvbnRhaW5lcldpZHRofSAke2NvbnRhaW5lckhlaWdodH1gKTtcblxuICAgIC8vIC0tLSBTYW5rZXkgbm9kZS9saW5rIGNyZWF0aW9uIGFuZCB2ZXJ0aWNhbCBjZW50ZXJpbmcgKGRlZHVwbGljYXRlZCkgLS0tXG4gICAgLy8gU29ydCBzb3VyY2Ugbm9kZXMgdG8gbWFpbnRhaW4gYSBmaXhlZCBvcmRlciAoc2FtZSBhcyBhbmltYXRpb24pXG4gICAgY29uc3Qgc29ydGVkU291cmNlcyA9IFsuLi5zb3VyY2VzXTtcbiAgICBpZiAoY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycpIHtcbiAgICAgIHNvcnRlZFNvdXJjZXMuc29ydCgoYSwgYikgPT4gWUVBUlNfQ0FURUdPUklFUy5pbmRleE9mKGEpIC0gWUVBUlNfQ0FURUdPUklFUy5pbmRleE9mKGIpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc29ydGVkU291cmNlcy5zb3J0KCk7XG4gICAgfVxuICAgIC8vIFNvcnQgdGFyZ2V0IG5vZGVzIHRvIG1haW50YWluIGEgZml4ZWQgb3JkZXJcbiAgICBjb25zdCBzb3J0ZWRUYXJnZXRzID0gWy4uLnRhcmdldHNdO1xuICAgIGlmIChjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJykge1xuICAgICAgc29ydGVkVGFyZ2V0cy5zb3J0KChhLCBiKSA9PiBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYSkgLSBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYikpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzb3J0ZWRUYXJnZXRzLnNvcnQoKTtcbiAgICB9XG5cbiAgICAvLyBTYW5rZXkgdHJhbnNmb3JtYXRpb24gYWNjZXNzb3JzXG4gICAgY29uc3Qgc291cmNlQWNjZXNzb3IgPSAoZDogYW55KSA9PlxuICAgICAgY3VycmVudFNvdXJjZSA9PT0gJ3llYXJzX2F0X21lZHRyb25pYydcbiAgICAgICAgPyBnZXRZZWFyc0NhdGVnb3J5KGQueWVhcnNfYXRfbWVkdHJvbmljIHx8IDApXG4gICAgICAgIDogKGQgYXMgYW55KVtjdXJyZW50U291cmNlXTtcbiAgICBjb25zdCB0YXJnZXRBY2Nlc3NvciA9IChkOiBhbnkpID0+XG4gICAgICBjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJ1xuICAgICAgICA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMClcbiAgICAgICAgOiAoZCBhcyBhbnkpW2N1cnJlbnRUYXJnZXRdO1xuXG4gICAgLy8gRmlsdGVyIGRhdGEgdG8gb25seSBpbmNsdWRlIHZhbGlkIHZhbHVlc1xuICAgIGNvbnN0IHZhbGlkRGF0YSA9IGZpbHRlcmVkRGF0YS5maWx0ZXIoZCA9PlxuICAgICAgKGN1cnJlbnRTb3VyY2UgIT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnIHx8IGQueWVhcnNfYXRfbWVkdHJvbmljICE9PSBudWxsKSAmJlxuICAgICAgKGN1cnJlbnRUYXJnZXQgIT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnIHx8IGQueWVhcnNfYXRfbWVkdHJvbmljICE9PSBudWxsKVxuICAgICk7XG5cbiAgICAvLyBEZWJ1ZyBkYXRhXG4gICAgY29uc29sZS5sb2coJ/Cfk4ogREFUQSBERUJVRzonKTtcbiAgICBjb25zb2xlLmxvZygnICBDdXJyZW50IHNvdXJjZTonLCBjdXJyZW50U291cmNlLCAnQ3VycmVudCB0YXJnZXQ6JywgY3VycmVudFRhcmdldCk7XG4gICAgY29uc29sZS5sb2coJyAgRmlsdGVyZWQgZGF0YSBjb3VudDonLCBmaWx0ZXJlZERhdGEubGVuZ3RoKTtcbiAgICBjb25zb2xlLmxvZygnICBWYWxpZCBkYXRhIGNvdW50OicsIHZhbGlkRGF0YS5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKCcgIFNvdXJjZXM6Jywgc291cmNlcyk7XG4gICAgY29uc29sZS5sb2coJyAgVGFyZ2V0czonLCB0YXJnZXRzKTtcblxuICAgIC8vIEJ1aWxkIG5vZGVzIGFycmF5IHdpdGggdW5pcXVlIGlkc1xuICAgIGNvbnN0IG5vZGVzID0gW1xuICAgICAgLi4uc29ydGVkU291cmNlcy5tYXAoKG5hbWUpID0+ICh7IGlkOiBgJHtjdXJyZW50U291cmNlfToke25hbWV9YCwgbmFtZSwgY2F0ZWdvcnk6IGN1cnJlbnRTb3VyY2UgfSkpLFxuICAgICAgLi4uc29ydGVkVGFyZ2V0cy5tYXAoKG5hbWUpID0+ICh7IGlkOiBgJHtjdXJyZW50VGFyZ2V0fToke25hbWV9YCwgbmFtZSwgY2F0ZWdvcnk6IGN1cnJlbnRUYXJnZXQgfSkpLFxuICAgIF07XG5cbiAgICAvLyBCdWlsZCBsaW5rcyBhcnJheSAoYWdncmVnYXRlIGNvdW50cyBmb3IgZWFjaCBzb3VyY2UtdGFyZ2V0IHBhaXIpXG4gICAgY29uc3QgbGlua3NNYXAgPSBuZXcgTWFwPHN0cmluZywgeyBzb3VyY2U6IHN0cmluZzsgdGFyZ2V0OiBzdHJpbmc7IHZhbHVlOiBudW1iZXIsIGlzRHVtbXk/OiBib29sZWFuIH0+KCk7XG4gICAgLy8gMS4gRm9yIGV2ZXJ5IHBvc3NpYmxlIHNvdXJjZS10YXJnZXQgcGFpciwgY3JlYXRlIGEgbGluayAoZHVtbXkgaWYgbm8gZGF0YSlcbiAgICBzb3J0ZWRTb3VyY2VzLmZvckVhY2goKHNvdXJjZSkgPT4ge1xuICAgICAgc29ydGVkVGFyZ2V0cy5mb3JFYWNoKCh0YXJnZXQpID0+IHtcbiAgICAgICAgY29uc3Qgc291cmNlSWQgPSBgJHtjdXJyZW50U291cmNlfToke3NvdXJjZX1gO1xuICAgICAgICBjb25zdCB0YXJnZXRJZCA9IGAke2N1cnJlbnRUYXJnZXR9OiR7dGFyZ2V0fWA7XG4gICAgICAgIGNvbnN0IGtleSA9IGAke3NvdXJjZUlkfeKGkiR7dGFyZ2V0SWR9YDtcbiAgICAgICAgbGlua3NNYXAuc2V0KGtleSwgeyBzb3VyY2U6IHNvdXJjZUlkLCB0YXJnZXQ6IHRhcmdldElkLCB2YWx1ZTogMCwgaXNEdW1teTogdHJ1ZSB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIC8vIDIuIEZpbGwgaW4gcmVhbCBkYXRhLCBtYXJraW5nIGxpbmtzIGFzIG5vdCBkdW1teVxuICAgIHZhbGlkRGF0YS5mb3JFYWNoKChkKSA9PiB7XG4gICAgICBjb25zdCBzb3VyY2UgPSBzb3VyY2VBY2Nlc3NvcihkKTtcbiAgICAgIGNvbnN0IHRhcmdldCA9IHRhcmdldEFjY2Vzc29yKGQpO1xuICAgICAgaWYgKCFzb3J0ZWRTb3VyY2VzLmluY2x1ZGVzKHNvdXJjZSkgfHwgIXNvcnRlZFRhcmdldHMuaW5jbHVkZXModGFyZ2V0KSkgcmV0dXJuO1xuICAgICAgY29uc3Qgc291cmNlSWQgPSBgJHtjdXJyZW50U291cmNlfToke3NvdXJjZX1gO1xuICAgICAgY29uc3QgdGFyZ2V0SWQgPSBgJHtjdXJyZW50VGFyZ2V0fToke3RhcmdldH1gO1xuICAgICAgY29uc3Qga2V5ID0gYCR7c291cmNlSWR94oaSJHt0YXJnZXRJZH1gO1xuICAgICAgaWYgKCFsaW5rc01hcC5oYXMoa2V5KSkge1xuICAgICAgICBsaW5rc01hcC5zZXQoa2V5LCB7IHNvdXJjZTogc291cmNlSWQsIHRhcmdldDogdGFyZ2V0SWQsIHZhbHVlOiAxLCBpc0R1bW15OiBmYWxzZSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGxpbmsgPSBsaW5rc01hcC5nZXQoa2V5KSE7XG4gICAgICAgIGxpbmsudmFsdWUgKz0gMTtcbiAgICAgICAgbGluay5pc0R1bW15ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy8gMy4gU2V0IGR1bW15IGxpbmtzIHRvIGEgdmVyeSBzbWFsbCB2YWx1ZSBpZiBzdGlsbCBkdW1teVxuICAgIEFycmF5LmZyb20obGlua3NNYXAudmFsdWVzKCkpLmZvckVhY2gobGluayA9PiB7XG4gICAgICBpZiAobGluay5pc0R1bW15KSBsaW5rLnZhbHVlID0gMC4wMDAxO1xuICAgIH0pO1xuXG4gICAgLy8gLS0tIENPTFVNTiBIRUlHSFQgTk9STUFMSVpBVElPTiAtLS1cbiAgICAvLyBDYWxjdWxhdGUgdG90YWwgdmFsdWUgZm9yIGVhY2ggc2lkZVxuICAgIGNvbnN0IGxlZnRUb3RhbHMgPSBzb3J0ZWRTb3VyY2VzLm1hcChzb3VyY2UgPT4ge1xuICAgICAgY29uc3Qgc291cmNlSWQgPSBgJHtjdXJyZW50U291cmNlfToke3NvdXJjZX1gO1xuICAgICAgcmV0dXJuIEFycmF5LmZyb20obGlua3NNYXAudmFsdWVzKCkpLmZpbHRlcihsID0+IGwuc291cmNlID09PSBzb3VyY2VJZCkucmVkdWNlKChzdW0sIGwpID0+IHN1bSArIGwudmFsdWUsIDApO1xuICAgIH0pO1xuICAgIGNvbnN0IHJpZ2h0VG90YWxzID0gc29ydGVkVGFyZ2V0cy5tYXAodGFyZ2V0ID0+IHtcbiAgICAgIGNvbnN0IHRhcmdldElkID0gYCR7Y3VycmVudFRhcmdldH06JHt0YXJnZXR9YDtcbiAgICAgIHJldHVybiBBcnJheS5mcm9tKGxpbmtzTWFwLnZhbHVlcygpKS5maWx0ZXIobCA9PiBsLnRhcmdldCA9PT0gdGFyZ2V0SWQpLnJlZHVjZSgoc3VtLCBsKSA9PiBzdW0gKyBsLnZhbHVlLCAwKTtcbiAgICB9KTtcbiAgICBjb25zdCBsZWZ0U3VtID0gbGVmdFRvdGFscy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcbiAgICBjb25zdCByaWdodFN1bSA9IHJpZ2h0VG90YWxzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApO1xuICAgIC8vIElmIHN1bXMgYXJlIGRpZmZlcmVudCwgc2NhbGUgdGhlIHNtYWxsZXIgc2lkZSdzIG5vZGUgdmFsdWVzIGFuZCBsaW5rIHZhbHVlc1xuICAgIGxldCBsZWZ0U2NhbGUgPSAxLCByaWdodFNjYWxlID0gMTtcbiAgICBpZiAobGVmdFN1bSA+IDAgJiYgcmlnaHRTdW0gPiAwICYmIGxlZnRTdW0gIT09IHJpZ2h0U3VtKSB7XG4gICAgICBpZiAobGVmdFN1bSA+IHJpZ2h0U3VtKSB7XG4gICAgICAgIHJpZ2h0U2NhbGUgPSBsZWZ0U3VtIC8gcmlnaHRTdW07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZWZ0U2NhbGUgPSByaWdodFN1bSAvIGxlZnRTdW07XG4gICAgICB9XG4gICAgfVxuICAgIC8vIFNjYWxlIGxpbmtzXG4gICAgQXJyYXkuZnJvbShsaW5rc01hcC52YWx1ZXMoKSkuZm9yRWFjaChsaW5rID0+IHtcbiAgICAgIGNvbnN0IHNvdXJjZUlkID0gbGluay5zb3VyY2U7XG4gICAgICBjb25zdCB0YXJnZXRJZCA9IGxpbmsudGFyZ2V0O1xuICAgICAgaWYgKGxlZnRTY2FsZSAhPT0gMSAmJiBzb3J0ZWRTb3VyY2VzLnNvbWUocyA9PiBgJHtjdXJyZW50U291cmNlfToke3N9YCA9PT0gc291cmNlSWQpKSB7XG4gICAgICAgIGxpbmsudmFsdWUgKj0gbGVmdFNjYWxlO1xuICAgICAgfVxuICAgICAgaWYgKHJpZ2h0U2NhbGUgIT09IDEgJiYgc29ydGVkVGFyZ2V0cy5zb21lKHQgPT4gYCR7Y3VycmVudFRhcmdldH06JHt0fWAgPT09IHRhcmdldElkKSkge1xuICAgICAgICBsaW5rLnZhbHVlICo9IHJpZ2h0U2NhbGU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCBsaW5rcyA9IEFycmF5LmZyb20obGlua3NNYXAudmFsdWVzKCkpO1xuXG4gICAgLy8gRGVidWcgbGlua3NcbiAgICBjb25zb2xlLmxvZygn8J+UlyBMSU5LUyBERUJVRzonKTtcbiAgICBjb25zb2xlLmxvZygnICBUb3RhbCBsaW5rcyBjcmVhdGVkOicsIGxpbmtzLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coJyAgTm9uLWR1bW15IGxpbmtzOicsIGxpbmtzLmZpbHRlcihsID0+ICFsLmlzRHVtbXkpLmxlbmd0aCk7XG4gICAgY29uc29sZS5sb2coJyAgRHVtbXkgbGlua3M6JywgbGlua3MuZmlsdGVyKGwgPT4gbC5pc0R1bW15KS5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKCcgIFNhbXBsZSBsaW5rczonLCBsaW5rcy5zbGljZSgwLCA1KS5tYXAobCA9PiAoeyBcbiAgICAgIHNvdXJjZTogbC5zb3VyY2UsIFxuICAgICAgdGFyZ2V0OiBsLnRhcmdldCwgXG4gICAgICB2YWx1ZTogbC52YWx1ZSwgXG4gICAgICBpc0R1bW15OiBsLmlzRHVtbXkgXG4gICAgfSkpKTtcblxuICAgIC8vIC0tLSBEWU5BTUlDIE5PREUgUEFERElORyAtLS1cbiAgICAvLyBSZWR1Y2Ugbm9kZVBhZGRpbmcgZm9yIHNwYXJzZSBkYXRhXG4gICAgbGV0IGR5bmFtaWNOb2RlUGFkZGluZyA9IG5vZGVQYWRkaW5nO1xuICAgIGlmIChzb3J0ZWRTb3VyY2VzLmxlbmd0aCA8PSA0ICYmIHNvcnRlZFRhcmdldHMubGVuZ3RoIDw9IDQpIHtcbiAgICAgIGR5bmFtaWNOb2RlUGFkZGluZyA9IE1hdGgubWF4KDgsIG5vZGVQYWRkaW5nIC8gMik7XG4gICAgfVxuXG4gICAgLy8gU2Fua2V5IGxheW91dCAtIGVuc3VyZSBpdCB1c2VzIHRoZSBmdWxsIGF2YWlsYWJsZSBjaGFydCBzcGFjZSBhbmQgbGVmdG1vc3Qgbm9kZXMgYXJlIGZsdXNoXG4gICAgY29uc3Qgc2Fua2V5R2VuZXJhdG9yID0gc2Fua2V5PGFueSwgYW55PigpXG4gICAgICAubm9kZUlkKChkOiBhbnkpID0+IGQuaWQpXG4gICAgICAubm9kZVdpZHRoKDEyKVxuICAgICAgLm5vZGVQYWRkaW5nKGR5bmFtaWNOb2RlUGFkZGluZylcbiAgICAgIC5leHRlbnQoW1swLCAwXSwgW2NoYXJ0V2lkdGgsIGNoYXJ0SGVpZ2h0XV0pOyAvLyBsZWZ0IGVkZ2UgaXMgMFxuXG4gICAgY29uc3Qgc2Fua2V5RGF0YSA9IHNhbmtleUdlbmVyYXRvcih7XG4gICAgICBub2Rlczogbm9kZXMubWFwKChkKSA9PiAoeyAuLi5kIH0pKSxcbiAgICAgIGxpbmtzOiBsaW5rcy5tYXAoKGQpID0+ICh7IC4uLmQgfSkpLFxuICAgIH0pO1xuXG4gICAgLy8gRGVidWcgU2Fua2V5IGxheW91dFxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFNBTktFWSBMQVlPVVQgREVCVUc6Jyk7XG4gICAgY29uc29sZS5sb2coJyAgU2Fua2V5IGV4dGVudDonLCBbWzAsIDBdLCBbY2hhcnRXaWR0aCwgY2hhcnRIZWlnaHRdXSk7XG4gICAgY29uc29sZS5sb2coJyAgSW5wdXQgbm9kZXM6Jywgbm9kZXMubGVuZ3RoLCAnSW5wdXQgbGlua3M6JywgbGlua3MubGVuZ3RoKTtcbiAgICBjb25zb2xlLmxvZygnICBPdXRwdXQgbm9kZXM6Jywgc2Fua2V5RGF0YS5ub2Rlcy5sZW5ndGgsICdPdXRwdXQgbGlua3M6Jywgc2Fua2V5RGF0YS5saW5rcy5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKCcgIFNhbXBsZSBub2RlczonLCBzYW5rZXlEYXRhLm5vZGVzLnNsaWNlKDAsIDMpLm1hcChuID0+ICh7IFxuICAgICAgaWQ6IG4uaWQsIFxuICAgICAgeDA6IG4ueDAsIFxuICAgICAgeDE6IG4ueDEsIFxuICAgICAgeTA6IG4ueTAsIFxuICAgICAgeTE6IG4ueTEgXG4gICAgfSkpKTtcbiAgICBjb25zb2xlLmxvZygnICBTYW1wbGUgbGlua3M6Jywgc2Fua2V5RGF0YS5saW5rcy5zbGljZSgwLCAzKS5tYXAobCA9PiAoeyBcbiAgICAgIHNvdXJjZTogbC5zb3VyY2UuaWQsIFxuICAgICAgdGFyZ2V0OiBsLnRhcmdldC5pZCwgXG4gICAgICB2YWx1ZTogbC52YWx1ZVxuICAgIH0pKSk7XG5cbiAgICAvLyAtLS0gRk9SQ0UgUk9XIEFMSUdOTUVOVCBJRiBOT0RFIFNFVFMgTUFUQ0ggLS0tXG4gICAgLy8gSWYgbGVmdCBhbmQgcmlnaHQgbm9kZSBzZXRzIGhhdmUgdGhlIHNhbWUgbGVuZ3RoIGFuZCBvcmRlciwgYWxpZ24gdGhlaXIgeTAveTFcbiAgICBjb25zdCBsZWZ0Tm9kZXMgPSBzYW5rZXlEYXRhLm5vZGVzLmZpbHRlcigobjogYW55KSA9PiBuLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlKTtcbiAgICBjb25zdCByaWdodE5vZGVzID0gc2Fua2V5RGF0YS5ub2Rlcy5maWx0ZXIoKG46IGFueSkgPT4gbi5jYXRlZ29yeSA9PT0gY3VycmVudFRhcmdldCk7XG4gICAgaWYgKFxuICAgICAgbGVmdE5vZGVzLmxlbmd0aCA9PT0gcmlnaHROb2Rlcy5sZW5ndGggJiZcbiAgICAgIGxlZnROb2Rlcy5ldmVyeSgobiwgaSkgPT4gcmlnaHROb2Rlc1tpXSAmJiBuLm5hbWUgPT09IHJpZ2h0Tm9kZXNbaV0ubmFtZSlcbiAgICApIHtcbiAgICAgIC8vIEZvcmNlIHkwL3kxIG9mIHJpZ2h0IG5vZGVzIHRvIG1hdGNoIGxlZnQgbm9kZXNcbiAgICAgIHJpZ2h0Tm9kZXMuZm9yRWFjaCgobiwgaSkgPT4ge1xuICAgICAgICBuLnkwID0gbGVmdE5vZGVzW2ldLnkwO1xuICAgICAgICBuLnkxID0gbGVmdE5vZGVzW2ldLnkxO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gLS0tIFZJU1VBTCBHVUlERVM6IFJlbmRlciBob3Jpem9udGFsIGJhbmRzIGZvciBlYWNoIHJvdyAtLS1cbiAgICBzdmcuc2VsZWN0QWxsKCdyZWN0LnJvdy1ndWlkZScpXG4gICAgICAuZGF0YShsZWZ0Tm9kZXMpXG4gICAgICAuZW50ZXIoKVxuICAgICAgLmFwcGVuZCgncmVjdCcpXG4gICAgICAuYXR0cignY2xhc3MnLCAncm93LWd1aWRlJylcbiAgICAgIC5hdHRyKCd4JywgLW1hcmdpbi5sZWZ0KVxuICAgICAgLmF0dHIoJ3knLCAoZDogYW55KSA9PiBkLnkwKVxuICAgICAgLmF0dHIoJ3dpZHRoJywgY2hhcnRXaWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIChkOiBhbnkpID0+IGQueTEgLSBkLnkwKVxuICAgICAgLmF0dHIoJ2ZpbGwnLCAoZCwgaSkgPT5cbiAgICAgICAgc2V0dGluZ3MuaXNEYXJrTW9kZVxuICAgICAgICAgID8gKGkgJSAyID09PSAwID8gJyMxODE5MWQnIDogJyMxNDE0MTYnKSAvLyBjb2xvcnMgY2xvc2VyIHRvIGJhY2tncm91bmRcbiAgICAgICAgICA6IChpICUgMiA9PT0gMCA/ICcjZjVmN2ZhJyA6ICcjZTllZWY1JylcbiAgICAgIClcbiAgICAgIC5hdHRyKCdvcGFjaXR5Jywgc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuMTUgOiAwLjI1KSAvLyByZWR1Y2VkIG9wYWNpdHkgZm9yIGRhcmsgbW9kZVxuICAgICAgLmxvd2VyKCk7XG5cbiAgICAvLyBDb21wdXRlIHZlcnRpY2FsIG9mZnNldCB0byBjZW50ZXIgdGhlIGRpYWdyYW1cbiAgICBjb25zdCBub2RlWXMgPSBzYW5rZXlEYXRhLm5vZGVzLm1hcCgoZDogYW55KSA9PiBbZC55MCwgZC55MV0pLmZsYXQoKTtcbiAgICBjb25zdCBtaW5ZID0gTWF0aC5taW4oLi4ubm9kZVlzKTtcbiAgICBjb25zdCBtYXhZID0gTWF0aC5tYXgoLi4ubm9kZVlzKTtcbiAgICBjb25zdCB1c2VkSGVpZ2h0ID0gbWF4WSAtIG1pblk7XG4gICAgY29uc3Qgb2Zmc2V0WSA9IE1hdGgubWF4KDAsIChjaGFydEhlaWdodCAtIHVzZWRIZWlnaHQpIC8gMiAtIG1pblkpO1xuXG4gICAgLy8gRGVidWcgcG9zaXRpb25pbmdcbiAgICBjb25zb2xlLmxvZygn8J+TjSBQT1NJVElPTklORyBERUJVRzonKTtcbiAgICBjb25zb2xlLmxvZygnICBOb2RlIFkgcmFuZ2U6JywgbWluWSwgJ3RvJywgbWF4WSwgJyh1c2VkIGhlaWdodDonLCB1c2VkSGVpZ2h0LCAnKScpO1xuICAgIGNvbnNvbGUubG9nKCcgIENoYXJ0IGhlaWdodDonLCBjaGFydEhlaWdodCk7XG4gICAgY29uc29sZS5sb2coJyAgVmVydGljYWwgb2Zmc2V0OicsIG9mZnNldFkpO1xuICAgIGNvbnNvbGUubG9nKCcgIEdyb3VwIHRyYW5zZm9ybTonLCBgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCR7bWFyZ2luLnRvcCArIG9mZnNldFl9KWApO1xuXG4gICAgLy8gQ3JlYXRlIGEgZ3JvdXAgZm9yIHRoZSBjaGFydCBhcmVhIHdpdGggbWFyZ2luIHRyYW5zbGF0aW9uIGFuZCB2ZXJ0aWNhbCBjZW50ZXJpbmdcbiAgICBjb25zdCBnID0gc3ZnLmFwcGVuZCgnZycpLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHttYXJnaW4ubGVmdH0sJHttYXJnaW4udG9wICsgb2Zmc2V0WX0pYCk7IC8vIGxlZnQgbWFyZ2luIG9ubHkgZm9yIGxhYmVscy9kcm9wZG93bnNcbiAgICBcbiAgICAvLyBEZWJ1ZyB0aGUgYWN0dWFsIHRyYW5zZm9ybVxuICAgIGNvbnNvbGUubG9nKCfwn46tIFNWRyBUcmFuc2Zvcm06JywgYHRyYW5zbGF0ZSgke21hcmdpbi5sZWZ0fSwke21hcmdpbi50b3AgKyBvZmZzZXRZfSlgKTtcbiAgICBjb25zb2xlLmxvZygn8J+TkCBBY3R1YWwgU1ZHIGRpbWVuc2lvbnM6Jywgc3ZnLmF0dHIoJ3dpZHRoJyksICd4Jywgc3ZnLmF0dHIoJ2hlaWdodCcpKTtcbiAgICBjb25zb2xlLmxvZygn8J+TiiBDaGFydCBhcmVhIGFmdGVyIG1hcmdpbnM6JywgY2hhcnRIZWlnaHQsICd4JywgY2hhcnRIZWlnaHQpO1xuXG4gICAgbGV0IGRlZnMgPSBzdmcuc2VsZWN0PFNWR0RlZnNFbGVtZW50PignZGVmcycpO1xuICAgIGlmIChkZWZzLmVtcHR5KCkpIGRlZnMgPSBzdmcuYXBwZW5kKCdkZWZzJykgYXMgZDMuU2VsZWN0aW9uPFNWR0RlZnNFbGVtZW50LCB1bmtub3duLCBudWxsLCB1bmRlZmluZWQ+O1xuICAgIGxldCBsaW5rc0cgPSBnLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ2xpbmtzJyk7XG4gICAgbGV0IG5vZGVzRyA9IGcuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnbm9kZXMnKTtcblxuICAgIC8vIFJlbW92ZSBvbGQgZ3JhZGllbnRzIChubyBsb25nZXIgbmVlZGVkKVxuICAgIGRlZnMuc2VsZWN0QWxsKCdsaW5lYXJHcmFkaWVudC5saW5rLWdyYWRpZW50JykucmVtb3ZlKCk7XG5cbiAgICAvLyAtLS0gQWRkIGNsaXBQYXRoIGZvciBsaW5rcyBncm91cCB3aXRoIHRpZ2h0ZXIgYm91bmRzIC0tLVxuICAgIHN2Zy5zZWxlY3QoJ2RlZnMnKS5zZWxlY3RBbGwoJyNsaW5rLWNsaXAnKS5yZW1vdmUoKTtcbiAgICBkZWZzLmFwcGVuZCgnY2xpcFBhdGgnKVxuICAgICAgLmF0dHIoJ2lkJywgJ2xpbmstY2xpcCcpXG4gICAgICAuYXBwZW5kKCdyZWN0JylcbiAgICAgIC5hdHRyKCd4JywgbWFyZ2luLmxlZnQpXG4gICAgICAuYXR0cigneScsIG1hcmdpbi50b3ApXG4gICAgICAuYXR0cignd2lkdGgnLCBjaGFydFdpZHRoKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIGNoYXJ0SGVpZ2h0KTtcbiAgICBsaW5rc0cuYXR0cignY2xpcC1wYXRoJywgJ3VybCgjbGluay1jbGlwKScpO1xuXG4gICAgLy8gQWRkIGdsb3cgZmlsdGVyIGZvciBkYXJrIG1vZGVcbiAgICBkZWZzLnNlbGVjdEFsbCgnI2RhcmstbW9kZS1nbG93JykucmVtb3ZlKCk7XG4gICAgaWYgKHNldHRpbmdzLmlzRGFya01vZGUpIHtcbiAgICAgIGNvbnN0IGdsb3dGaWx0ZXIgPSBkZWZzLmFwcGVuZCgnZmlsdGVyJylcbiAgICAgICAgLmF0dHIoJ2lkJywgJ2RhcmstbW9kZS1nbG93JylcbiAgICAgICAgLmF0dHIoJ3gnLCAnLTUwJScpXG4gICAgICAgIC5hdHRyKCd5JywgJy01MCUnKVxuICAgICAgICAuYXR0cignd2lkdGgnLCAnMjAwJScpXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCAnMjAwJScpO1xuICAgICAgXG4gICAgICBnbG93RmlsdGVyLmFwcGVuZCgnZmVHYXVzc2lhbkJsdXInKVxuICAgICAgICAuYXR0cignc3RkRGV2aWF0aW9uJywgJzEuNScpXG4gICAgICAgIC5hdHRyKCdyZXN1bHQnLCAnY29sb3JlZEJsdXInKTtcbiAgICAgIFxuICAgICAgY29uc3QgZmVNZXJnZSA9IGdsb3dGaWx0ZXIuYXBwZW5kKCdmZU1lcmdlJyk7XG4gICAgICBmZU1lcmdlLmFwcGVuZCgnZmVNZXJnZU5vZGUnKS5hdHRyKCdpbicsICdjb2xvcmVkQmx1cicpO1xuICAgICAgZmVNZXJnZS5hcHBlbmQoJ2ZlTWVyZ2VOb2RlJykuYXR0cignaW4nLCAnU291cmNlR3JhcGhpYycpO1xuICAgIH1cblxuICAgIC8vIC0tLSBMaW5rcyB1cGRhdGUgcGF0dGVybiAtLS1cbiAgICAvLyBBbGwgbGlua3MgYXJlIG5vdyBiZXR3ZWVuIHJlYWwgbm9kZXMsIHdpdGggaXNEdW1teSBwcm9wZXJ0eSBmb3IgdmlzdWFsIGRpc3RpbmN0aW9uXG4gICAgY29uc3QgZmlsdGVyZWRMaW5rcyA9IHNhbmtleURhdGEubGlua3M7XG4gICAgLy8gUmVtb3ZlIG1peC1ibGVuZC1tb2RlIGluIGRhcmsgbW9kZSB0byBwcmV2ZW50IGNvbG9yIHdhc2hpbmcgb3V0XG4gICAgbGlua3NHLnN0eWxlKCdtaXgtYmxlbmQtbW9kZScsIHNldHRpbmdzLmlzRGFya01vZGUgPyAnbm9ybWFsJyA6ICdtdWx0aXBseScpO1xuICAgIGNvbnN0IGxpbmtLZXkgPSAoZDogYW55KSA9PiBgJHtkLnNvdXJjZS5pZH3ihpIke2QudGFyZ2V0LmlkfWA7XG4gICAgY29uc3QgbGlua1NlbCA9IGxpbmtzRy5zZWxlY3RBbGwoJ3BhdGgnKVxuICAgICAgLmRhdGEoZmlsdGVyZWRMaW5rcywgbGlua0tleSk7XG5cbiAgICAvLyBFWElUOiBmYWRlIG91dCBhbmQgcmVtb3ZlIGFsbCBvbGQgbGlua3NcbiAgICBsaW5rU2VsLmV4aXQoKVxuICAgICAgLnRyYW5zaXRpb24oKS5kdXJhdGlvbig0MDApXG4gICAgICAuYXR0cignb3BhY2l0eScsIDApXG4gICAgICAucmVtb3ZlKCk7XG5cbiAgICAvLyBDaGVjayBpZiB0aGlzIGlzIGEgY2F0ZWdvcnkgY2hhbmdlIHRoYXQgc2hvdWxkIHRyaWdnZXIgYW5pbWF0aW9uXG4gICAgY29uc3QgaXNDYXRlZ29yeUNoYW5nZSA9IGxhc3RDYXRlZ29yeUNoYW5nZS5zb3VyY2UgIT09IGN1cnJlbnRTb3VyY2UgfHwgbGFzdENhdGVnb3J5Q2hhbmdlLnRhcmdldCAhPT0gY3VycmVudFRhcmdldDtcblxuICAgIC8vIEVOVEVSOiBkcmF3IGluIGFsbCBuZXcgbGlua3Mgd2l0aCBpbXByb3ZlZCBhbmltYXRpb25cbiAgICBjb25zdCBuZXdMaW5rcyA9IGxpbmtzRy5zZWxlY3RBbGwoJ3BhdGgnKVxuICAgICAgLmRhdGEoZmlsdGVyZWRMaW5rcywgbGlua0tleSlcbiAgICAgIC5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdwYXRoJylcbiAgICAgIC5hdHRyKCdkJywgY2xhbXBlZFNhbmtleUxpbmtIb3Jpem9udGFsKCkpXG4gICAgICAuYXR0cignc3Ryb2tlJywgKGQ6IGFueSkgPT4ge1xuICAgICAgICAvLyBVc2Ugc2hhcmVkIGNvbG9yIGNvbmZpZyBpZiBhdmFpbGFibGVcbiAgICAgICAgaWYgKENBVEVHT1JZX0NPTE9SU1tkLnNvdXJjZS5uYW1lXSkgcmV0dXJuIENBVEVHT1JZX0NPTE9SU1tkLnNvdXJjZS5uYW1lXTtcbiAgICAgICAgY29uc3QgY29sb3IgPSBnZXROb2RlQ29sb3IoZC5zb3VyY2UsIGdldEN1cnJlbnRUaGVtZUNvbG9ycygpLCBzZXR0aW5ncy5pc0RhcmtNb2RlKTtcbiAgICAgICAgLy8gRW5oYW5jZWQgZmFsbGJhY2sgY29sb3IgbG9naWMgZm9yIGRhcmsgbW9kZSBsaW5rcyBhbmQgdW5tYXBwZWQgY2F0ZWdvcmllc1xuICAgICAgICBpZiAoIWNvbG9yIHx8IGNvbG9yID09PSAnIzAwMDAwMCcgfHwgY29sb3IgPT09ICdibGFjaycgfHwgY29sb3IgPT09ICcjMDAwJykge1xuICAgICAgICAgIC8vIEQzIGNhdGVnb3JpY2FsIHBhbGV0dGUgKHNhbWUgYXMgYWJvdmUpXG4gICAgICAgICAgY29uc3QgZDNQYWxldHRlID0gW1xuICAgICAgICAgICAgJyMxZjc3YjQnLCAnI2ZmN2YwZScsICcjMmNhMDJjJywgJyNkNjI3MjgnLCAnIzk0NjdiZCcsICcjOGM1NjRiJywgJyNlMzc3YzInLCAnIzdmN2Y3ZicsXG4gICAgICAgICAgICAnI2JjYmQyMicsICcjMTdiZWNmJywgJyMzOTNiNzknLCAnIzYzNzkzOScsICcjOGM2ZDMxJywgJyM4NDNjMzknLCAnIzdiNDE3MycsICcjNTI1NGEzJyxcbiAgICAgICAgICAgICcjOWM5ZWRlJywgJyNjZWRiOWMnLCAnI2U3YmE1MicsICcjYWQ0OTRhJywgJyNhNTUxOTQnLCAnIzZiNmVjZicsICcjYjVjZjZiJywgJyNiZDllMzknLFxuICAgICAgICAgICAgJyNjZTZkYmQnLCAnI2RlOWVkNicsICcjMzE4MmJkJywgJyNmMzNlNTInLCAnI2JkYmRiZCcsICcjNmJhZWQ2JywgJyNmZDhkM2MnLCAnI2U2NTUwZCcsXG4gICAgICAgICAgICAnIzMxYTM1NCcsICcjNzU2YmIxJywgJyM2MzYzNjMnLCAnIzk2OTY5NicsICcjZTQxYTFjJywgJyMzNzdlYjgnLCAnIzRkYWY0YScsICcjOTg0ZWEzJyxcbiAgICAgICAgICAgICcjZmY3ZjAwJywgJyNmZmZmMzMnLCAnI2E2NTYyOCcsICcjZjc4MWJmJywgJyM5OTk5OTknXG4gICAgICAgICAgXTtcbiAgICAgICAgICBjb25zdCBpbmRleCA9IE1hdGguYWJzKGQuc291cmNlLm5hbWUuc3BsaXQoJycpLnJlZHVjZSgoYWNjOiBudW1iZXIsIGM6IHN0cmluZykgPT4gYWNjICsgYy5jaGFyQ29kZUF0KDApLCAwKSkgJSBkM1BhbGV0dGUubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBkM1BhbGV0dGVbaW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2xvcjtcbiAgICAgIH0pXG4gICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgKGQ6IGFueSkgPT4gTWF0aC5taW4oTWF0aC5tYXgoc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDIgOiAxLCBkLndpZHRoKSwgbWF4TGlua1dpZHRoKSlcbiAgICAgIC5hdHRyKCdmaWxsJywgJ25vbmUnKVxuICAgICAgLmF0dHIoJ2ZpbHRlcicsIChkOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGhvdmVyZWRMaW5rID09PSBkKSByZXR1cm4gJ3VybCgjZ2xvdyknO1xuICAgICAgICByZXR1cm4gc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICd1cmwoI2RhcmstbW9kZS1nbG93KScgOiBudWxsO1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdwb2ludGVyLWV2ZW50cycsICdhbGwnKVxuICAgICAgLmF0dHIoJ3N0cm9rZS1saW5lY2FwJywgJ3JvdW5kJylcbiAgICAgIC5hdHRyKCdvcGFjaXR5JywgKGQ6IGFueSkgPT4ge1xuICAgICAgICAvLyBEdW1teSBsaW5rczogdmVyeSBsb3cgb3BhY2l0eVxuICAgICAgICBpZiAoZC5pc0R1bW15KSByZXR1cm4gMC4wODtcbiAgICAgICAgLy8gQWRqdXN0IG9wYWNpdHkgYmFzZWQgb24gZGFyayBtb2RlIGZvciBiZXR0ZXIgdmlzaWJpbGl0eVxuICAgICAgICBjb25zdCBiYXNlT3BhY2l0eSA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAwLjg1IDogMC40O1xuICAgICAgICBjb25zdCBoaWdobGlnaHRPcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDEuMCA6IDAuOTtcbiAgICAgICAgY29uc3QgZGltT3BhY2l0eSA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAwLjQgOiAwLjE7XG4gICAgICAgIC8vIERlZmF1bHQgb3BhY2l0eSB3aGVuIG5vIGhpZ2hsaWdodGluZ1xuICAgICAgICBpZiAoYW5pbWF0aW9uUGhhc2UgIT09ICdoaWdobGlnaHRpbmcnKSByZXR1cm4gYmFzZU9wYWNpdHk7XG4gICAgICAgIC8vIEhpZ2hsaWdodCBsaW5rcyBmcm9tIHRoZSBhY3RpdmUgc291cmNlXG4gICAgICAgIGlmIChob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkU291cmNlID0gc29ydGVkU291cmNlc1tob3ZlcmVkU291cmNlSW5kZXhdO1xuICAgICAgICAgIHJldHVybiBkLnNvdXJjZS5uYW1lID09PSBob3ZlcmVkU291cmNlID8gaGlnaGxpZ2h0T3BhY2l0eSA6IGRpbU9wYWNpdHk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSGlnaGxpZ2h0IGxpbmtzIHRvIHRoZSBhY3RpdmUgdGFyZ2V0XG4gICAgICAgIGlmIChob3ZlcmVkVGFyZ2V0SW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkVGFyZ2V0ID0gc29ydGVkVGFyZ2V0c1tob3ZlcmVkVGFyZ2V0SW5kZXhdO1xuICAgICAgICAgIHJldHVybiBkLnRhcmdldC5uYW1lID09PSBob3ZlcmVkVGFyZ2V0ID8gaGlnaGxpZ2h0T3BhY2l0eSA6IGRpbU9wYWNpdHk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJhc2VPcGFjaXR5O1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdzdHJva2UtZGFzaGFycmF5JywgKGQ6IGFueSkgPT4gZC5pc0R1bW15ID8gJzQsNCcgOiBudWxsKTsgLy8gRGFzaGVkIGZvciBkdW1teSBsaW5rc1xuXG4gICAgLy8gQXBwbHkgZHJhd2luZyBhbmltYXRpb24gb25seSBvbiBjYXRlZ29yeSBjaGFuZ2VzIHRvIHByZXZlbnQgZmxpY2tlcmluZ1xuICAgIGlmIChpc0NhdGVnb3J5Q2hhbmdlKSB7XG4gICAgICBuZXdMaW5rcy5lYWNoKGZ1bmN0aW9uIChkOiBhbnkpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGQzLnNlbGVjdCh0aGlzKTtcbiAgICAgICAgY29uc3QgdG90YWxMZW5ndGggPSAodGhpcyBhcyBTVkdQYXRoRWxlbWVudCkuZ2V0VG90YWxMZW5ndGgoKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN0YXJ0IHdpdGggaW52aXNpYmxlIHBhdGhcbiAgICAgICAgcGF0aFxuICAgICAgICAgIC5hdHRyKCdzdHJva2UtZGFzaGFycmF5JywgdG90YWxMZW5ndGgpXG4gICAgICAgICAgLmF0dHIoJ3N0cm9rZS1kYXNob2Zmc2V0JywgdG90YWxMZW5ndGgpXG4gICAgICAgICAgLmF0dHIoJ29wYWNpdHknLCAwKVxuICAgICAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgICAgICAuZGVsYXkoKGQ6IGFueSwgaTogbnVtYmVyKSA9PiBpICogMjUpIC8vIFJlZHVjZWQgc3RhZ2dlciBkZWxheVxuICAgICAgICAgIC5kdXJhdGlvbig2MDApIC8vIFJlZHVjZWQgZnJvbSAxMjAwbXMgdG8gNjAwbXNcbiAgICAgICAgICAuZWFzZShkMy5lYXNlQ3ViaWNJbk91dClcbiAgICAgICAgICAuYXR0cignb3BhY2l0eScsIChkOiBhbnkpID0+IHtcbiAgICAgICAgICAgIC8vIEFkanVzdCBvcGFjaXR5IGJhc2VkIG9uIGRhcmsgbW9kZSBmb3IgYmV0dGVyIHZpc2liaWxpdHlcbiAgICAgICAgICAgIGNvbnN0IGJhc2VPcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuODUgOiAwLjQ7XG4gICAgICAgICAgICBjb25zdCBoaWdobGlnaHRPcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDEuMCA6IDAuOTtcbiAgICAgICAgICAgIGNvbnN0IGRpbU9wYWNpdHkgPSBzZXR0aW5ncy5pc0RhcmtNb2RlID8gMC40IDogMC4xO1xuXG4gICAgICAgICAgICAvLyBIaWdobGlnaHQgbGlua3MgZnJvbSB0aGUgYWN0aXZlIHNvdXJjZSBvciB0byB0aGUgYWN0aXZlIHRhcmdldFxuICAgICAgICAgICAgaWYgKGhvdmVyZWRTb3VyY2VJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICAgICAgY29uc3QgaG92ZXJlZFNvdXJjZSA9IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XTtcbiAgICAgICAgICAgICAgcmV0dXJuIGQuc291cmNlLm5hbWUgPT09IGhvdmVyZWRTb3VyY2UgPyBoaWdobGlnaHRPcGFjaXR5IDogZGltT3BhY2l0eTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChob3ZlcmVkVGFyZ2V0SW5kZXggIT09IG51bGwgJiYgYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGhvdmVyZWRUYXJnZXQgPSBzb3J0ZWRUYXJnZXRzW2hvdmVyZWRUYXJnZXRJbmRleF07XG4gICAgICAgICAgICAgIHJldHVybiBkLnRhcmdldC5uYW1lID09PSBob3ZlcmVkVGFyZ2V0ID8gaGlnaGxpZ2h0T3BhY2l0eSA6IGRpbU9wYWNpdHk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYmFzZU9wYWNpdHk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuYXR0cignc3Ryb2tlLWRhc2hvZmZzZXQnLCAwKVxuICAgICAgICAgIC5vbignZW5kJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZDMuc2VsZWN0KHRoaXMpXG4gICAgICAgICAgICAgIC5hdHRyKCdzdHJva2UtbGluZWNhcCcsICdidXR0JykgLy8gY3Jpc3AgZWRnZSBhZnRlciBhbmltYXRpb25cbiAgICAgICAgICAgICAgLmF0dHIoJ3N0cm9rZS1kYXNoYXJyYXknLCBudWxsKVxuICAgICAgICAgICAgICAuYXR0cignc3Ryb2tlLWRhc2hvZmZzZXQnLCBudWxsKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBGb3Igbm9uLWNhdGVnb3J5IGNoYW5nZXMsIGp1c3Qgc2V0IHRoZSBvcGFjaXR5IGRpcmVjdGx5XG4gICAgICBuZXdMaW5rcy5hdHRyKCdvcGFjaXR5JywgKGQ6IGFueSkgPT4ge1xuICAgICAgICAvLyBBZGp1c3Qgb3BhY2l0eSBiYXNlZCBvbiBkYXJrIG1vZGUgZm9yIGJldHRlciB2aXNpYmlsaXR5XG4gICAgICAgIGNvbnN0IGJhc2VPcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuODUgOiAwLjQ7XG4gICAgICAgIGNvbnN0IGhpZ2hsaWdodE9wYWNpdHkgPSBzZXR0aW5ncy5pc0RhcmtNb2RlID8gMS4wIDogMC45O1xuICAgICAgICBjb25zdCBkaW1PcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDAuNCA6IDAuMTtcblxuICAgICAgICAvLyBIaWdobGlnaHQgbGlua3MgZnJvbSB0aGUgYWN0aXZlIHNvdXJjZSBvciB0byB0aGUgYWN0aXZlIHRhcmdldFxuICAgICAgICBpZiAoaG92ZXJlZFNvdXJjZUluZGV4ICE9PSBudWxsICYmIGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGNvbnN0IGhvdmVyZWRTb3VyY2UgPSBzb3J0ZWRTb3VyY2VzW2hvdmVyZWRTb3VyY2VJbmRleF07XG4gICAgICAgICAgcmV0dXJuIGQuc291cmNlLm5hbWUgPT09IGhvdmVyZWRTb3VyY2UgPyBoaWdobGlnaHRPcGFjaXR5IDogZGltT3BhY2l0eTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG92ZXJlZFRhcmdldEluZGV4ICE9PSBudWxsICYmIGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgIGNvbnN0IGhvdmVyZWRUYXJnZXQgPSBzb3J0ZWRUYXJnZXRzW2hvdmVyZWRUYXJnZXRJbmRleF07XG4gICAgICAgICAgcmV0dXJuIGQudGFyZ2V0Lm5hbWUgPT09IGhvdmVyZWRUYXJnZXQgPyBoaWdobGlnaHRPcGFjaXR5IDogZGltT3BhY2l0eTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYmFzZU9wYWNpdHk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBBZGQgaG92ZXIgaW50ZXJhY3Rpb25zXG4gICAgbmV3TGlua3NcbiAgICAgIC5vbignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICBzZXRIb3ZlcmVkTGluayhkKTtcbiAgICAgICAgc2V0VG9vbHRpcCh7XG4gICAgICAgICAgeDogZXZlbnQub2Zmc2V0WCxcbiAgICAgICAgICB5OiBldmVudC5vZmZzZXRZLFxuICAgICAgICAgIGNvbnRlbnQ6IChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9udC1ib2xkXCI+e2Quc291cmNlLm5hbWV9IOKGkiB7ZC50YXJnZXQubmFtZX08L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj57ZC52YWx1ZX0gYXR0ZW5kZWVzPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApLFxuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAub24oJ21vdXNlbGVhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNldEhvdmVyZWRMaW5rKG51bGwpO1xuICAgICAgICBzZXRUb29sdGlwKG51bGwpO1xuICAgICAgfSk7XG5cbiAgICAvLyAtLS0gTm9kZXMgdXBkYXRlIHBhdHRlcm4gKHJlY3RzKSAtLS1cblxuXG4gICAgY29uc3QgZmlsdGVyZWROb2RlcyA9IHNhbmtleURhdGEubm9kZXM7XG4gICAgY29uc3Qgbm9kZVNlbCA9IG5vZGVzRy5zZWxlY3RBbGwoJ3JlY3QnKVxuICAgICAgLmRhdGEoZmlsdGVyZWROb2RlcywgKGQ6IGFueSkgPT4gZC5pZCk7XG4gICAgbm9kZVNlbC5leGl0KCkucmVtb3ZlKCk7XG4gICAgbm9kZVNlbC5qb2luKFxuICAgICAgZW50ZXIgPT4gZW50ZXIuYXBwZW5kKCdyZWN0JylcbiAgICAgICAgLmF0dHIoJ3gnLCAoZDogYW55KSA9PiBkLngwKVxuICAgICAgICAuYXR0cigneScsIChkOiBhbnkpID0+IGQueTApXG4gICAgICAgIC5hdHRyKCdoZWlnaHQnLCAoZDogYW55KSA9PiBkLnkxIC0gZC55MClcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgKGQ6IGFueSkgPT4gZC54MSAtIGQueDApXG4gICAgICAgIC5hdHRyKCdmaWxsJywgKGQ6IGFueSkgPT4ge1xuICAgICAgICAgIC8vIFVzZSBzaGFyZWQgY29sb3IgY29uZmlnIGlmIGF2YWlsYWJsZVxuICAgICAgICAgIGlmIChDQVRFR09SWV9DT0xPUlNbZC5uYW1lXSkgcmV0dXJuIENBVEVHT1JZX0NPTE9SU1tkLm5hbWVdO1xuICAgICAgICAgIGNvbnN0IGNvbG9yID0gZ2V0Tm9kZUNvbG9yKGQsIGdldEN1cnJlbnRUaGVtZUNvbG9ycygpLCBzZXR0aW5ncy5pc0RhcmtNb2RlKTtcbiAgICAgICAgICAvLyBFbmhhbmNlZCBmYWxsYmFjayBjb2xvciBsb2dpYyBmb3IgZGFyayBtb2RlIGFuZCB1bm1hcHBlZCBjYXRlZ29yaWVzXG4gICAgICAgICAgaWYgKCFjb2xvciB8fCBjb2xvciA9PT0gJyMwMDAwMDAnIHx8IGNvbG9yID09PSAnYmxhY2snIHx8IGNvbG9yID09PSAnIzAwMCcpIHtcbiAgICAgICAgICAgIC8vIEQzIGNhdGVnb3JpY2FsIHBhbGV0dGUgKDIwKyBjb2xvcnMsIGhpZ2ggY29udHJhc3QpXG4gICAgICAgICAgICBjb25zdCBkM1BhbGV0dGUgPSBbXG4gICAgICAgICAgICAgICcjMWY3N2I0JywgJyNmZjdmMGUnLCAnIzJjYTAyYycsICcjZDYyNzI4JywgJyM5NDY3YmQnLCAnIzhjNTY0YicsICcjZTM3N2MyJywgJyM3ZjdmN2YnLFxuICAgICAgICAgICAgICAnI2JjYmQyMicsICcjMTdiZWNmJywgJyMzOTNiNzknLCAnIzYzNzkzOScsICcjOGM2ZDMxJywgJyM4NDNjMzknLCAnIzdiNDE3MycsICcjNTI1NGEzJyxcbiAgICAgICAgICAgICAgJyM5YzllZGUnLCAnI2NlZGI5YycsICcjZTdiYTUyJywgJyNhZDQ5NGEnLCAnI2E1NTE5NCcsICcjNmI2ZWNmJywgJyNiNWNmNmInLCAnI2JkOWUzOScsXG4gICAgICAgICAgICAgICcjY2U2ZGJkJywgJyNkZTllZDYnLCAnIzMxODJiZCcsICcjZjMzZTUyJywgJyNiZGJkYmQnLCAnIzZiYWVkNicsICcjZmQ4ZDNjJywgJyNlNjU1MGQnLFxuICAgICAgICAgICAgICAnIzMxYTM1NCcsICcjNzU2YmIxJywgJyM2MzYzNjMnLCAnIzk2OTY5NicsICcjZTQxYTFjJywgJyMzNzdlYjgnLCAnIzRkYWY0YScsICcjOTg0ZWEzJyxcbiAgICAgICAgICAgICAgJyNmZjdmMDAnLCAnI2ZmZmYzMycsICcjYTY1NjI4JywgJyNmNzgxYmYnLCAnIzk5OTk5OSdcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IE1hdGguYWJzKGQubmFtZS5zcGxpdCgnJykucmVkdWNlKChhY2M6IG51bWJlciwgYzogc3RyaW5nKSA9PiBhY2MgKyBjLmNoYXJDb2RlQXQoMCksIDApKSAlIGQzUGFsZXR0ZS5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gZDNQYWxldHRlW2luZGV4XTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGNvbG9yO1xuICAgICAgICB9KVxuICAgICAgICAuYXR0cignc3Ryb2tlJywgc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICcjNDQ0JyA6ICcjMjIyMjNiJylcbiAgICAgICAgLmF0dHIoJ29wYWNpdHknLCAoZDogYW55KSA9PiB7XG4gICAgICAgICAgLy8gU291cmNlIG5vZGVzOiBvbmx5IHRoZSBoaWdobGlnaHRlZCBvbmUgaXMgYnJpZ2h0XG4gICAgICAgICAgaWYgKGQuY2F0ZWdvcnkgPT09IGN1cnJlbnRTb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwgJiYgYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgICAgIHJldHVybiBkLm5hbWUgPT09IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XSA/IDEgOiAwLjM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMC45OyAvLyBJbmNyZWFzZWQgZnJvbSAwLjYgdG8gMC45IGZvciBtb3JlIHByb21pbmVuY2VcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gVGFyZ2V0IG5vZGVzOiBvbmx5IHRob3NlIGNvbm5lY3RlZCB0byB0aGUgaGlnaGxpZ2h0ZWQgc291cmNlIG9yIGhvdmVyZWQgdGFyZ2V0IGFyZSBicmlnaHRcbiAgICAgICAgICBpZiAoaG92ZXJlZFNvdXJjZUluZGV4ICE9PSBudWxsICYmIGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgICAgY29uc3QgaG92ZXJlZFNvdXJjZSA9IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XTtcbiAgICAgICAgICAgIGNvbnN0IGlzQ29ubmVjdGVkID0gZmlsdGVyZWRMaW5rcy5zb21lKGwgPT4gbC5zb3VyY2UubmFtZSA9PT0gaG92ZXJlZFNvdXJjZSAmJiBsLnRhcmdldC5uYW1lID09PSBkLm5hbWUpO1xuICAgICAgICAgICAgcmV0dXJuIGlzQ29ubmVjdGVkID8gMSA6IDAuMztcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhvdmVyZWRUYXJnZXRJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICAgIGNvbnN0IGhvdmVyZWRUYXJnZXQgPSBzb3J0ZWRUYXJnZXRzW2hvdmVyZWRUYXJnZXRJbmRleF07XG4gICAgICAgICAgICByZXR1cm4gZC5uYW1lID09PSBob3ZlcmVkVGFyZ2V0ID8gMSA6IDAuMztcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDAuOTsgLy8gSW5jcmVhc2VkIGZyb20gMC42IHRvIDAuOSBmb3IgbW9yZSBwcm9taW5lbmNlXG4gICAgICAgIH0pXG4gICAgICAgIC5vbignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICAgIHNldEhvdmVyZWROb2RlKGQpO1xuICAgICAgICAgIHNldFRvb2x0aXAoe1xuICAgICAgICAgICAgeDogZXZlbnQub2Zmc2V0WCxcbiAgICAgICAgICAgIHk6IGV2ZW50Lm9mZnNldFksXG4gICAgICAgICAgICBjb250ZW50OiAoXG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb250LWJvbGRcIj57ZC5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+Q2F0ZWdvcnk6IHtkLmNhdGVnb3J5fTwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXY+UmVzcG9uc2VzOiB7ZC52YWx1ZX08L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICAub24oJ21vdXNlbGVhdmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgc2V0SG92ZXJlZE5vZGUobnVsbCk7XG4gICAgICAgICAgc2V0VG9vbHRpcChudWxsKTtcbiAgICAgICAgfSlcbiAgICAgICAgLm9uKCdtb3VzZWVudGVyJywgZnVuY3Rpb24gKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICAgIGlmIChkLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlKSB7XG4gICAgICAgICAgICBjb25zdCBpZHggPSBzb3J0ZWRTb3VyY2VzLmluZGV4T2YoZC5uYW1lKTtcbiAgICAgICAgICAgIHNldEhvdmVyZWRTb3VyY2VJbmRleChpZHgpO1xuICAgICAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2hpZ2hsaWdodGluZycpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZC5jYXRlZ29yeSA9PT0gY3VycmVudFRhcmdldCkge1xuICAgICAgICAgICAgY29uc3QgaWR4ID0gc29ydGVkVGFyZ2V0cy5pbmRleE9mKGQubmFtZSk7XG4gICAgICAgICAgICBzZXRIb3ZlcmVkVGFyZ2V0SW5kZXgoaWR4KTtcbiAgICAgICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdoaWdobGlnaHRpbmcnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5vbignbW91c2VsZWF2ZScsIGZ1bmN0aW9uIChldmVudDogYW55LCBkOiBhbnkpIHtcbiAgICAgICAgICBpZiAoZC5jYXRlZ29yeSA9PT0gY3VycmVudFNvdXJjZSkge1xuICAgICAgICAgICAgc2V0SG92ZXJlZFNvdXJjZUluZGV4KG51bGwpO1xuICAgICAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGQuY2F0ZWdvcnkgPT09IGN1cnJlbnRUYXJnZXQpIHtcbiAgICAgICAgICAgIHNldEhvdmVyZWRUYXJnZXRJbmRleChudWxsKTtcbiAgICAgICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdmdWxsJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KSxcbiAgICAgIHVwZGF0ZSA9PiB1cGRhdGVcbiAgICAgICAgLnRyYW5zaXRpb24oZDMudHJhbnNpdGlvbigpLmR1cmF0aW9uKDc1MCkuZWFzZShkMy5lYXNlQ3ViaWNJbk91dCkpXG4gICAgICAgIC5hdHRyKCd4JywgKGQ6IGFueSkgPT4gZC54MClcbiAgICAgICAgLmF0dHIoJ3knLCAoZDogYW55KSA9PiBkLnkwKVxuICAgICAgICAuYXR0cignaGVpZ2h0JywgKGQ6IGFueSkgPT4gZC55MSAtIGQueTApXG4gICAgICAgIC5hdHRyKCd3aWR0aCcsIChkOiBhbnkpID0+IGQueDEgLSBkLngwKVxuICAgICAgICAuYXR0cignZmlsbCcsIChkOiBhbnkpID0+IHtcbiAgICAgICAgICAvLyBVc2Ugc2hhcmVkIGNvbG9yIGNvbmZpZyBpZiBhdmFpbGFibGVcbiAgICAgICAgICBpZiAoQ0FURUdPUllfQ09MT1JTW2QubmFtZV0pIHJldHVybiBDQVRFR09SWV9DT0xPUlNbZC5uYW1lXTtcbiAgICAgICAgICBjb25zdCBjb2xvciA9IGdldE5vZGVDb2xvcihkLCBnZXRDdXJyZW50VGhlbWVDb2xvcnMoKSwgc2V0dGluZ3MuaXNEYXJrTW9kZSk7XG4gICAgICAgICAgLy8gRW5oYW5jZWQgZmFsbGJhY2sgY29sb3IgbG9naWMgZm9yIGRhcmsgbW9kZSBhbmQgdW5tYXBwZWQgY2F0ZWdvcmllc1xuICAgICAgICAgIGlmICghY29sb3IgfHwgY29sb3IgPT09ICcjMDAwMDAwJyB8fCBjb2xvciA9PT0gJ2JsYWNrJyB8fCBjb2xvciA9PT0gJyMwMDAnKSB7XG4gICAgICAgICAgICAvLyBEMyBjYXRlZ29yaWNhbCBwYWxldHRlICgyMCsgY29sb3JzLCBoaWdoIGNvbnRyYXN0KVxuICAgICAgICAgICAgY29uc3QgZDNQYWxldHRlID0gW1xuICAgICAgICAgICAgICAnIzFmNzdiNCcsICcjZmY3ZjBlJywgJyMyY2EwMmMnLCAnI2Q2MjcyOCcsICcjOTQ2N2JkJywgJyM4YzU2NGInLCAnI2UzNzdjMicsICcjN2Y3ZjdmJyxcbiAgICAgICAgICAgICAgJyNiY2JkMjInLCAnIzE3YmVjZicsICcjMzkzYjc5JywgJyM2Mzc5MzknLCAnIzhjNmQzMScsICcjODQzYzM5JywgJyM3YjQxNzMnLCAnIzUyNTRhMycsXG4gICAgICAgICAgICAgICcjOWM5ZWRlJywgJyNjZWRiOWMnLCAnI2U3YmE1MicsICcjYWQ0OTRhJywgJyNhNTUxOTQnLCAnIzZiNmVjZicsICcjYjVjZjZiJywgJyNiZDllMzknLFxuICAgICAgICAgICAgICAnI2NlNmRiZCcsICcjZGU5ZWQ2JywgJyMzMTgyYmQnLCAnI2YzM2U1MicsICcjYmRiZGJkJywgJyM2YmFlZDYnLCAnI2ZkOGQzYycsICcjZTY1NTBkJyxcbiAgICAgICAgICAgICAgJyMzMWEzNTQnLCAnIzc1NmJiMScsICcjNjM2MzYzJywgJyM5Njk2OTYnLCAnI2U0MWExYycsICcjMzc3ZWI4JywgJyM0ZGFmNGEnLCAnIzk4NGVhMycsXG4gICAgICAgICAgICAgICcjZmY3ZjAwJywgJyNmZmZmMzMnLCAnI2E2NTYyOCcsICcjZjc4MWJmJywgJyM5OTk5OTknXG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBNYXRoLmFicyhkLm5hbWUuc3BsaXQoJycpLnJlZHVjZSgoYWNjOiBudW1iZXIsIGM6IHN0cmluZykgPT4gYWNjICsgYy5jaGFyQ29kZUF0KDApLCAwKSkgJSBkM1BhbGV0dGUubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuIGQzUGFsZXR0ZVtpbmRleF07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjb2xvcjtcbiAgICAgICAgfSlcbiAgICAgICAgLmF0dHIoJ29wYWNpdHknLCAoZDogYW55KSA9PiB7XG4gICAgICAgICAgLy8gU291cmNlIG5vZGVzOiBvbmx5IHRoZSBoaWdobGlnaHRlZCBvbmUgaXMgYnJpZ2h0XG4gICAgICAgICAgaWYgKGQuY2F0ZWdvcnkgPT09IGN1cnJlbnRTb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwgJiYgYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgICAgICAgICAgIHJldHVybiBkLm5hbWUgPT09IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XSA/IDEgOiAwLjM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMC45OyAvLyBJbmNyZWFzZWQgZnJvbSAwLjYgdG8gMC45IGZvciBtb3JlIHByb21pbmVuY2VcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gVGFyZ2V0IG5vZGVzOiBvbmx5IHRob3NlIGNvbm5lY3RlZCB0byB0aGUgaGlnaGxpZ2h0ZWQgc291cmNlIG9yIGhvdmVyZWQgdGFyZ2V0IGFyZSBicmlnaHRcbiAgICAgICAgICBpZiAoaG92ZXJlZFNvdXJjZUluZGV4ICE9PSBudWxsICYmIGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJykge1xuICAgICAgICAgICAgY29uc3QgaG92ZXJlZFNvdXJjZSA9IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XTtcbiAgICAgICAgICAgIGNvbnN0IGlzQ29ubmVjdGVkID0gZmlsdGVyZWRMaW5rcy5zb21lKGwgPT4gbC5zb3VyY2UubmFtZSA9PT0gaG92ZXJlZFNvdXJjZSAmJiBsLnRhcmdldC5uYW1lID09PSBkLm5hbWUpO1xuICAgICAgICAgICAgcmV0dXJuIGlzQ29ubmVjdGVkID8gMSA6IDAuMztcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhvdmVyZWRUYXJnZXRJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICAgIGNvbnN0IGhvdmVyZWRUYXJnZXQgPSBzb3J0ZWRUYXJnZXRzW2hvdmVyZWRUYXJnZXRJbmRleF07XG4gICAgICAgICAgICByZXR1cm4gZC5uYW1lID09PSBob3ZlcmVkVGFyZ2V0ID8gMSA6IDAuMztcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDAuOTsgLy8gSW5jcmVhc2VkIGZyb20gMC42IHRvIDAuOSBmb3IgbW9yZSBwcm9taW5lbmNlXG4gICAgICAgIH0pXG4gICAgKTtcblxuICAgIC8vIC0tLSBOb2RlIGxhYmVscyAocmUtcmVuZGVyIGFzIGJlZm9yZSkgLS0tXG4gICAgZy5zZWxlY3RBbGwoJ2cubGFiZWwtbGF5ZXInKS5yZW1vdmUoKTtcbiAgICBjb25zdCBsYWJlbExheWVyID0gZy5hcHBlbmQoJ2cnKS5hdHRyKCdjbGFzcycsICdsYWJlbC1sYXllcicpO1xuICAgIGNvbnN0IHNvdXJjZU5vZGVTZXQgPSBuZXcgU2V0KHNvcnRlZFNvdXJjZXMpO1xuICAgIGNvbnN0IHRhcmdldE5vZGVTZXQgPSBuZXcgU2V0KHNvcnRlZFRhcmdldHMpO1xuICAgIGNvbnN0IHNvdXJjZU5vZGVzID0gc2Fua2V5RGF0YS5ub2Rlcy5maWx0ZXIoZCA9PiBkLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlKTtcbiAgICBjb25zdCB0YXJnZXROb2RlcyA9IHNhbmtleURhdGEubm9kZXMuZmlsdGVyKGQgPT4gZC5jYXRlZ29yeSA9PT0gY3VycmVudFRhcmdldCk7XG4gICAgc291cmNlTm9kZXMuZm9yRWFjaCgobm9kZTogYW55KSA9PiB7XG4gICAgICBpZiAoc291cmNlTm9kZVNldC5oYXMobm9kZS5uYW1lKSkge1xuICAgICAgICBsYWJlbExheWVyXG4gICAgICAgICAgLmFwcGVuZCgndGV4dCcpXG4gICAgICAgICAgLmF0dHIoJ3gnLCAtbGFiZWxQYWRkaW5nKVxuICAgICAgICAgIC5hdHRyKCd5JywgKG5vZGUueTAgKyBub2RlLnkxKSAvIDIpXG4gICAgICAgICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgJ2VuZCcpXG4gICAgICAgICAgLmF0dHIoJ2FsaWdubWVudC1iYXNlbGluZScsICdtaWRkbGUnKVxuICAgICAgICAgIC5hdHRyKCdmb250LWZhbWlseScsIG5vZGVMYWJlbEZvbnRGYW1pbHkpXG4gICAgICAgICAgLmF0dHIoJ2ZvbnQtd2VpZ2h0Jywgbm9kZUxhYmVsRm9udFdlaWdodClcbiAgICAgICAgICAuYXR0cignZm9udC1zaXplJywgbGFiZWxGb250U2l6ZSlcbiAgICAgICAgICAuYXR0cignZmlsbCcsIG5vZGVMYWJlbENvbG9yKVxuICAgICAgICAgIC5hdHRyKCdhcmlhLWxhYmVsJywgbm9kZS5uYW1lKVxuICAgICAgICAgIC5hdHRyKCdvcGFjaXR5Jywgbm9kZS52YWx1ZSA9PT0gMCA/IDAuNSA6IDEpXG4gICAgICAgICAgLnRleHQobm9kZS5uYW1lKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0YXJnZXROb2Rlcy5mb3JFYWNoKChub2RlOiBhbnkpID0+IHtcbiAgICAgIGlmICh0YXJnZXROb2RlU2V0Lmhhcyhub2RlLm5hbWUpKSB7XG4gICAgICAgIGxhYmVsTGF5ZXJcbiAgICAgICAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAgICAgICAuYXR0cigneCcsIGNoYXJ0V2lkdGggKyBsYWJlbFBhZGRpbmcpXG4gICAgICAgICAgLmF0dHIoJ3knLCAobm9kZS55MCArIG5vZGUueTEpIC8gMilcbiAgICAgICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnc3RhcnQnKVxuICAgICAgICAgIC5hdHRyKCdhbGlnbm1lbnQtYmFzZWxpbmUnLCAnbWlkZGxlJylcbiAgICAgICAgICAuYXR0cignZm9udC1mYW1pbHknLCBub2RlTGFiZWxGb250RmFtaWx5KVxuICAgICAgICAgIC5hdHRyKCdmb250LXdlaWdodCcsIG5vZGVMYWJlbEZvbnRXZWlnaHQpXG4gICAgICAgICAgLmF0dHIoJ2ZvbnQtc2l6ZScsIGxhYmVsRm9udFNpemUpXG4gICAgICAgICAgLmF0dHIoJ2ZpbGwnLCBub2RlTGFiZWxDb2xvcilcbiAgICAgICAgICAuYXR0cignYXJpYS1sYWJlbCcsIG5vZGUubmFtZSlcbiAgICAgICAgICAuYXR0cignb3BhY2l0eScsIG5vZGUudmFsdWUgPT09IDAgPyAwLjUgOiAxKVxuICAgICAgICAgIC50ZXh0KG5vZGUubmFtZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyA2LiBVcGRhdGUgaW5zaWdodHNcbiAgICBsZXQgbW9zdENvbW1vbjogdHlwZW9mIGxpbmtzWzBdIHwgdW5kZWZpbmVkID0gbGlua3MubGVuZ3RoID4gMCA/IGxpbmtzLnJlZHVjZSgoYSwgYikgPT4gKGIudmFsdWUgPiBhLnZhbHVlID8gYiA6IGEpLCBsaW5rc1swXSkgOiB1bmRlZmluZWQ7XG4gICAgc2V0SW5zaWdodHMoW1xuICAgICAgeyB0aXRsZTogJ1RvdGFsIFJlc3BvbnNlcycsIHZhbHVlOiBkYXRhLmxlbmd0aCB9LFxuICAgICAgeyB0aXRsZTogJ0N1cnJlbnQgVmlldycsIHZhbHVlOiBgJHtjdXJyZW50U291cmNlfSDihpIgJHtjdXJyZW50VGFyZ2V0fWAgfSxcbiAgICAgIG1vc3RDb21tb25cbiAgICAgICAgPyB7IHRpdGxlOiAnTW9zdCBDb21tb24gRmxvdycsIHZhbHVlOiBgJHttb3N0Q29tbW9uLnNvdXJjZS5zcGxpdCgnOicpWzFdfSDihpIgJHttb3N0Q29tbW9uLnRhcmdldC5zcGxpdCgnOicpWzFdfWAsIGRlc2NyaXB0aW9uOiBgJHttb3N0Q29tbW9uLnZhbHVlfSBhdHRlbmRlZXNgIH1cbiAgICAgICAgOiB7IHRpdGxlOiAnTW9zdCBDb21tb24gRmxvdycsIHZhbHVlOiAnTi9BJywgZGVzY3JpcHRpb246ICcnIH0sXG4gICAgXSk7XG5cbiAgICAvLyA3LiBBdXRvbWF0aWMgYW5pbWF0aW9uIG9uIHF1ZXN0aW9uIGNoYW5nZSBvbmx5XG4gICAgY29uc3QgdHJhbnNpdGlvbiA9IGQzLnRyYW5zaXRpb24oKS5kdXJhdGlvbig3NTApLmVhc2UoZDMuZWFzZUN1YmljSW5PdXQpO1xuXG4gICAgLy8gQW5pbWF0ZSBub2Rlc1xuICAgIG5vZGVTZWxcbiAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAuYXR0cigneCcsIChkOiBhbnkpID0+IGQueDApXG4gICAgICAuYXR0cigneScsIChkOiBhbnkpID0+IGQueTApXG4gICAgICAuYXR0cignaGVpZ2h0JywgKGQ6IGFueSkgPT4gZC55MSAtIGQueTApXG4gICAgICAuYXR0cignd2lkdGgnLCAoZDogYW55KSA9PiBkLngxIC0gZC54MClcbiAgICAgICAgICAgICAgLmF0dHIoJ2ZpbGwnLCAoZDogYW55KSA9PiB7XG4gICAgICAgICAgLy8gVXNlIHNoYXJlZCBjb2xvciBjb25maWcgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgaWYgKENBVEVHT1JZX0NPTE9SU1tkLm5hbWVdKSByZXR1cm4gQ0FURUdPUllfQ09MT1JTW2QubmFtZV07XG4gICAgICAgICAgY29uc3QgY29sb3IgPSBnZXROb2RlQ29sb3IoZCwgZ2V0Q3VycmVudFRoZW1lQ29sb3JzKCksIHNldHRpbmdzLmlzRGFya01vZGUpO1xuICAgICAgICAgIC8vIEVuaGFuY2VkIGZhbGxiYWNrIGNvbG9yIGxvZ2ljIGZvciBkYXJrIG1vZGUgYW5kIHVubWFwcGVkIGNhdGVnb3JpZXNcbiAgICAgICAgICBpZiAoIWNvbG9yIHx8IGNvbG9yID09PSAnIzAwMDAwMCcgfHwgY29sb3IgPT09ICdibGFjaycgfHwgY29sb3IgPT09ICcjMDAwJykge1xuICAgICAgICAgICAgLy8gRDMgY2F0ZWdvcmljYWwgcGFsZXR0ZSAoMjArIGNvbG9ycywgaGlnaCBjb250cmFzdClcbiAgICAgICAgICAgIGNvbnN0IGQzUGFsZXR0ZSA9IFtcbiAgICAgICAgICAgICAgJyMxZjc3YjQnLCAnI2ZmN2YwZScsICcjMmNhMDJjJywgJyNkNjI3MjgnLCAnIzk0NjdiZCcsICcjOGM1NjRiJywgJyNlMzc3YzInLCAnIzdmN2Y3ZicsXG4gICAgICAgICAgICAgICcjYmNiZDIyJywgJyMxN2JlY2YnLCAnIzM5M2I3OScsICcjNjM3OTM5JywgJyM4YzZkMzEnLCAnIzg0M2MzOScsICcjN2I0MTczJywgJyM1MjU0YTMnLFxuICAgICAgICAgICAgICAnIzljOWVkZScsICcjY2VkYjljJywgJyNlN2JhNTInLCAnI2FkNDk0YScsICcjYTU1MTk0JywgJyM2YjZlY2YnLCAnI2I1Y2Y2YicsICcjYmQ5ZTM5JyxcbiAgICAgICAgICAgICAgJyNjZTZkYmQnLCAnI2RlOWVkNicsICcjMzE4MmJkJywgJyNmMzNlNTInLCAnI2JkYmRiZCcsICcjNmJhZWQ2JywgJyNmZDhkM2MnLCAnI2U2NTUwZCcsXG4gICAgICAgICAgICAgICcjMzFhMzU0JywgJyM3NTZiYjEnLCAnIzYzNjM2MycsICcjOTY5Njk2JywgJyNlNDFhMWMnLCAnIzM3N2ViOCcsICcjNGRhZjRhJywgJyM5ODRlYTMnLFxuICAgICAgICAgICAgICAnI2ZmN2YwMCcsICcjZmZmZjMzJywgJyNhNjU2MjgnLCAnI2Y3ODFiZicsICcjOTk5OTk5J1xuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gTWF0aC5hYnMoZC5uYW1lLnNwbGl0KCcnKS5yZWR1Y2UoKGFjYzogbnVtYmVyLCBjOiBzdHJpbmcpID0+IGFjYyArIGMuY2hhckNvZGVBdCgwKSwgMCkpICUgZDNQYWxldHRlLmxlbmd0aDtcbiAgICAgICAgICAgIHJldHVybiBkM1BhbGV0dGVbaW5kZXhdO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gY29sb3I7XG4gICAgICAgIH0pO1xuXG4gIH0sIFtmaWx0ZXJlZERhdGEsIGN1cnJlbnRTb3VyY2UsIGN1cnJlbnRUYXJnZXQsIGNvbnRhaW5lcldpZHRoLCBjb250YWluZXJIZWlnaHQsIHNldHRpbmdzLmNhdGVnb3J5Q29sb3JzLCBzZXR0aW5ncy5pc0RhcmtNb2RlLCBsYXN0Q2F0ZWdvcnlDaGFuZ2UsIGdldEN1cnJlbnRUaGVtZUNvbG9yc10pO1xuXG4gIC8vIENyZWF0ZSBzb3J0ZWQgdGFyZ2V0cyBmb3IgY29uc2lzdGVudCBoaWdobGlnaHRpbmdcbiAgY29uc3Qgc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHNvcnRlZCA9IFsuLi50YXJnZXRzXTtcbiAgICBpZiAoY3VycmVudFRhcmdldCA9PT0gJ3llYXJzX2F0X21lZHRyb25pYycpIHtcbiAgICAgIC8vIFNvcnQgeWVhcnMgaW4gY2hyb25vbG9naWNhbCBvcmRlclxuICAgICAgc29ydGVkLnNvcnQoKGEsIGIpID0+IFlFQVJTX0NBVEVHT1JJRVMuaW5kZXhPZihhKSAtIFlFQVJTX0NBVEVHT1JJRVMuaW5kZXhPZihiKSk7XG4gICAgfSBlbHNlIGlmIChjdXJyZW50VGFyZ2V0ID09PSAnbGVhcm5pbmdfc3R5bGUnKSB7XG4gICAgICAvLyBTb3J0IGxlYXJuaW5nIHN0eWxlcyBpbiBhIGNvbnNpc3RlbnQgb3JkZXJcbiAgICAgIGNvbnN0IGxlYXJuaW5nU3R5bGVPcmRlciA9IFsnVmlzdWFsJywgJ0F1ZGl0b3J5JywgJ0tpbmVzdGhldGljJywgJ1JlYWRpbmcvV3JpdGluZycsICdNaXhlZCddO1xuICAgICAgc29ydGVkLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgY29uc3QgYUluZGV4ID0gbGVhcm5pbmdTdHlsZU9yZGVyLmluZGV4T2YoYSk7XG4gICAgICAgIGNvbnN0IGJJbmRleCA9IGxlYXJuaW5nU3R5bGVPcmRlci5pbmRleE9mKGIpO1xuICAgICAgICBpZiAoYUluZGV4ID09PSAtMSAmJiBiSW5kZXggPT09IC0xKSByZXR1cm4gYS5sb2NhbGVDb21wYXJlKGIpO1xuICAgICAgICBpZiAoYUluZGV4ID09PSAtMSkgcmV0dXJuIDE7XG4gICAgICAgIGlmIChiSW5kZXggPT09IC0xKSByZXR1cm4gLTE7XG4gICAgICAgIHJldHVybiBhSW5kZXggLSBiSW5kZXg7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQWxwaGFiZXRpY2FsIHNvcnQgZm9yIG90aGVyIGNhdGVnb3JpZXNcbiAgICAgIHNvcnRlZC5zb3J0KCk7XG4gICAgfVxuICAgIHJldHVybiBzb3J0ZWQ7XG4gIH0sIFt0YXJnZXRzLCBjdXJyZW50VGFyZ2V0XSk7XG5cbiAgLy8gU2VwYXJhdGUgZWZmZWN0IHRvIHVwZGF0ZSB2aXN1YWwgaGlnaGxpZ2h0aW5nIGR1cmluZyBhbmltYXRpb25cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXN2Z1JlZi5jdXJyZW50KSByZXR1cm47XG5cbiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Q8U1ZHU1ZHRWxlbWVudCwgdW5rbm93bj4oc3ZnUmVmLmN1cnJlbnQpO1xuICAgIGNvbnN0IGcgPSBzdmcuc2VsZWN0KCdnJyk7XG4gICAgXG4gICAgLy8gVXBkYXRlIG5vZGUgb3BhY2l0eSBiYXNlZCBvbiBhbmltYXRpb24gc3RhdGVcbiAgICBnLnNlbGVjdEFsbCgncmVjdCcpXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oMjAwKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLCBmdW5jdGlvbihkOiBhbnkpIHtcbiAgICAgICAgLy8gU291cmNlIG5vZGVzOiBvbmx5IHRoZSBoaWdobGlnaHRlZCBvbmUgaXMgYnJpZ2h0XG4gICAgICAgIGlmIChkLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlKSB7XG4gICAgICAgICAgaWYgKGhvdmVyZWRTb3VyY2VJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBkLm5hbWUgPT09IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XSA/IDEgOiAwLjI7IC8vIFNsaWdodGx5IGhpZ2hlciBmb3IgYmV0dGVyIHZpc2liaWxpdHlcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDAuOTsgLy8gSW5jcmVhc2VkIGZyb20gMC42IHRvIDAuOSBmb3IgbW9yZSBwcm9taW5lbmNlXG4gICAgICAgIH1cbiAgICAgICAgLy8gVGFyZ2V0IG5vZGVzOiBoaWdobGlnaHQgdGhvc2UgY29ubmVjdGVkIHRvIHRoZSBoaWdobGlnaHRlZCBzb3VyY2VcbiAgICAgICAgaWYgKGhvdmVyZWRTb3VyY2VJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkU291cmNlID0gc29ydGVkU291cmNlc1tob3ZlcmVkU291cmNlSW5kZXhdO1xuICAgICAgICAgIC8vIENoZWNrIGlmIHRoaXMgdGFyZ2V0IG5vZGUgaXMgY29ubmVjdGVkIHRvIHRoZSBoaWdobGlnaHRlZCBzb3VyY2VcbiAgICAgICAgICBjb25zdCBpc0Nvbm5lY3RlZCA9IHN2Zy5zZWxlY3RBbGwoJ3BhdGgnKS5kYXRhKCkuc29tZSgobGluazogYW55KSA9PiBcbiAgICAgICAgICAgIGxpbmsuc291cmNlLm5hbWUgPT09IGhvdmVyZWRTb3VyY2UgJiYgbGluay50YXJnZXQubmFtZSA9PT0gZC5uYW1lXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gaXNDb25uZWN0ZWQgPyAxIDogMC4yOyAvLyBTbGlnaHRseSBoaWdoZXIgZm9yIGJldHRlciB2aXNpYmlsaXR5XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvdmVyZWRUYXJnZXRJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkVGFyZ2V0ID0gc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodFtob3ZlcmVkVGFyZ2V0SW5kZXhdO1xuICAgICAgICAgIHJldHVybiBkLm5hbWUgPT09IGhvdmVyZWRUYXJnZXQgPyAxIDogMC4yO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwLjk7IC8vIEluY3JlYXNlZCBmcm9tIDAuNiB0byAwLjkgZm9yIG1vcmUgcHJvbWluZW5jZVxuICAgICAgfSlcbiAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCBmdW5jdGlvbihkOiBhbnkpIHtcbiAgICAgICAgLy8gQWRkIHRoaWNrZXIgc3Ryb2tlIHRvIGhpZ2hsaWdodGVkIHNvdXJjZSBub2RlXG4gICAgICAgIGlmIChkLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlICYmIGhvdmVyZWRTb3VyY2VJbmRleCAhPT0gbnVsbCAmJiBhbmltYXRpb25QaGFzZSA9PT0gJ2hpZ2hsaWdodGluZycpIHtcbiAgICAgICAgICByZXR1cm4gZC5uYW1lID09PSBzb3J0ZWRTb3VyY2VzW2hvdmVyZWRTb3VyY2VJbmRleF0gPyAzIDogMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH0pO1xuXG4gICAgLy8gVXBkYXRlIGxpbmsgb3BhY2l0eSBiYXNlZCBvbiBhbmltYXRpb24gc3RhdGVcbiAgICBnLnNlbGVjdEFsbCgncGF0aCcpXG4gICAgICAudHJhbnNpdGlvbigpXG4gICAgICAuZHVyYXRpb24oMjAwKVxuICAgICAgLmF0dHIoJ29wYWNpdHknLCBmdW5jdGlvbihkOiBhbnkpIHtcbiAgICAgICAgLy8gQWRqdXN0IG9wYWNpdHkgYmFzZWQgb24gZGFyayBtb2RlIGZvciBiZXR0ZXIgdmlzaWJpbGl0eVxuICAgICAgICBjb25zdCBiYXNlT3BhY2l0eSA9IHNldHRpbmdzLmlzRGFya01vZGUgPyAwLjg1IDogMC40O1xuICAgICAgICBjb25zdCBoaWdobGlnaHRPcGFjaXR5ID0gc2V0dGluZ3MuaXNEYXJrTW9kZSA/IDEuMCA6IDAuOTU7XG4gICAgICAgIGNvbnN0IGRpbU9wYWNpdHkgPSBzZXR0aW5ncy5pc0RhcmtNb2RlID8gMC4zNSA6IDAuMDU7XG5cbiAgICAgICAgLy8gRGVmYXVsdCBvcGFjaXR5IHdoZW4gbm8gaGlnaGxpZ2h0aW5nXG4gICAgICAgIGlmIChhbmltYXRpb25QaGFzZSAhPT0gJ2hpZ2hsaWdodGluZycpIHJldHVybiBiYXNlT3BhY2l0eTtcblxuICAgICAgICAvLyBIaWdobGlnaHQgbGlua3MgZnJvbSB0aGUgYWN0aXZlIHNvdXJjZVxuICAgICAgICBpZiAoaG92ZXJlZFNvdXJjZUluZGV4ICE9PSBudWxsKSB7XG4gICAgICAgICAgY29uc3QgaG92ZXJlZFNvdXJjZSA9IHNvcnRlZFNvdXJjZXNbaG92ZXJlZFNvdXJjZUluZGV4XTtcbiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UubmFtZSA9PT0gaG92ZXJlZFNvdXJjZSA/IGhpZ2hsaWdodE9wYWNpdHkgOiBkaW1PcGFjaXR5O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSGlnaGxpZ2h0IGxpbmtzIHRvIHRoZSBhY3RpdmUgdGFyZ2V0XG4gICAgICAgIGlmIChob3ZlcmVkVGFyZ2V0SW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkVGFyZ2V0ID0gc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodFtob3ZlcmVkVGFyZ2V0SW5kZXhdO1xuICAgICAgICAgIHJldHVybiBkLnRhcmdldC5uYW1lID09PSBob3ZlcmVkVGFyZ2V0ID8gaGlnaGxpZ2h0T3BhY2l0eSA6IGRpbU9wYWNpdHk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYmFzZU9wYWNpdHk7XG4gICAgICB9KVxuICAgICAgLmF0dHIoJ3N0cm9rZS13aWR0aCcsIGZ1bmN0aW9uKGQ6IGFueSkge1xuICAgICAgICAvLyBNYWtlIGhpZ2hsaWdodGVkIGxpbmtzIHRoaWNrZXJcbiAgICAgICAgaWYgKGFuaW1hdGlvblBoYXNlID09PSAnaGlnaGxpZ2h0aW5nJyAmJiBob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwpIHtcbiAgICAgICAgICBjb25zdCBob3ZlcmVkU291cmNlID0gc29ydGVkU291cmNlc1tob3ZlcmVkU291cmNlSW5kZXhdO1xuICAgICAgICAgIHJldHVybiBkLnNvdXJjZS5uYW1lID09PSBob3ZlcmVkU291cmNlID8gTWF0aC5tYXgoMiwgZC53aWR0aCAqIDEuMikgOiBNYXRoLm1heCgxLCBkLndpZHRoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gTWF0aC5tYXgoMSwgZC53aWR0aCk7XG4gICAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKCfwn46oIFZpc3VhbCBoaWdobGlnaHRpbmcgdXBkYXRlZDonLCB7XG4gICAgICBob3ZlcmVkU291cmNlSW5kZXgsXG4gICAgICBzb3VyY2VOYW1lOiBob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwgPyBzb3J0ZWRTb3VyY2VzW2hvdmVyZWRTb3VyY2VJbmRleF0gOiBudWxsLFxuICAgICAgaG92ZXJlZFRhcmdldEluZGV4LFxuICAgICAgdGFyZ2V0TmFtZTogaG92ZXJlZFRhcmdldEluZGV4ICE9PSBudWxsID8gc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodFtob3ZlcmVkVGFyZ2V0SW5kZXhdIDogbnVsbCxcbiAgICAgIGFuaW1hdGlvblBoYXNlXG4gICAgfSk7XG5cbiAgfSwgW2hvdmVyZWRTb3VyY2VJbmRleCwgaG92ZXJlZFRhcmdldEluZGV4LCBhbmltYXRpb25QaGFzZSwgc29ydGVkU291cmNlcywgc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodCwgY3VycmVudFNvdXJjZSwgY3VycmVudFRhcmdldF0pO1xuXG4gIC8vIFNlcGFyYXRlIGVmZmVjdCBmb3IgaG92ZXIgaW50ZXJhY3Rpb25zIChkb2Vzbid0IHJlLXJlbmRlciB0aGUgd2hvbGUgdmlzdWFsaXphdGlvbilcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXN2Z1JlZi5jdXJyZW50KSByZXR1cm47XG5cbiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Q8U1ZHU1ZHRWxlbWVudCwgdW5rbm93bj4oc3ZnUmVmLmN1cnJlbnQpO1xuICAgIGNvbnN0IGcgPSBzdmcuc2VsZWN0KCdnJyk7XG4gICAgXG4gICAgLy8gVXBkYXRlIGxpbmsgaG92ZXIgZWZmZWN0c1xuICAgIGcuc2VsZWN0QWxsKCdwYXRoJylcbiAgICAgIC5lYWNoKGZ1bmN0aW9uKGQ6IGFueSkge1xuICAgICAgICBjb25zdCBwYXRoID0gZDMuc2VsZWN0KHRoaXMpO1xuICAgICAgICBjb25zdCBpc0hvdmVyZWQgPSBob3ZlcmVkTGluayA9PT0gZDtcbiAgICAgICAgcGF0aC5hdHRyKCdmaWx0ZXInLCBpc0hvdmVyZWQgPyAndXJsKCNnbG93KScgOiBudWxsKTtcbiAgICAgIH0pO1xuXG4gIH0sIFtob3ZlcmVkTm9kZSwgaG92ZXJlZExpbmtdKTtcblxuICAvLyBUb29sdGlwIGZhZGVvdXQgbG9naWNcbiAgY29uc3QgW3Rvb2x0aXBWaXNpYmxlLCBzZXRUb29sdGlwVmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHRvb2x0aXBUaW1lb3V0UmVmID0gdXNlUmVmPE5vZGVKUy5UaW1lb3V0IHwgbnVsbD4obnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodG9vbHRpcCkge1xuICAgICAgc2V0VG9vbHRpcFZpc2libGUodHJ1ZSk7XG4gICAgICBpZiAodG9vbHRpcFRpbWVvdXRSZWYuY3VycmVudCkgY2xlYXJUaW1lb3V0KHRvb2x0aXBUaW1lb3V0UmVmLmN1cnJlbnQpO1xuICAgICAgdG9vbHRpcFRpbWVvdXRSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRUb29sdGlwVmlzaWJsZShmYWxzZSk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0VG9vbHRpcChudWxsKSwgNDAwKTsgLy8gV2FpdCBmb3IgZmFkZW91dFxuICAgICAgfSwgNTAwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFRvb2x0aXBWaXNpYmxlKGZhbHNlKTtcbiAgICAgIGlmICh0b29sdGlwVGltZW91dFJlZi5jdXJyZW50KSBjbGVhclRpbWVvdXQodG9vbHRpcFRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAodG9vbHRpcFRpbWVvdXRSZWYuY3VycmVudCkgY2xlYXJUaW1lb3V0KHRvb2x0aXBUaW1lb3V0UmVmLmN1cnJlbnQpO1xuICAgIH07XG4gIH0sIFt0b29sdGlwXSk7XG5cbiAgY29uc3QgdG9vbHRpcEVsID0gdG9vbHRpcCA/IChcbiAgICA8ZGl2XG4gICAgICBzdHlsZT17e1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgbGVmdDogdG9vbHRpcC54ICsgMTYsXG4gICAgICAgIHRvcDogdG9vbHRpcC55ICsgMTYsXG4gICAgICAgIGJhY2tncm91bmQ6IHNldHRpbmdzLmlzRGFya01vZGUgPyAncmdiYSgyMCwyMCwzMCwwLjk4KScgOiAncmdiYSgyNTUsMjU1LDI1NSwwLjk4KScsXG4gICAgICAgIGNvbG9yOiBzZXR0aW5ncy5pc0RhcmtNb2RlID8gJyNmZmYnIDogJyMxNzBGNUYnLFxuICAgICAgICBwYWRkaW5nOiAnOHB4IDEycHgnLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDYsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICAgICAgekluZGV4OiAxMDAsXG4gICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgc2Fucy1zZXJpZicsXG4gICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICAgICAgZm9udFNpemU6IDE0LFxuICAgICAgICBib3hTaGFkb3c6IHNldHRpbmdzLmlzRGFya01vZGUgXG4gICAgICAgICAgPyAnMCA0cHggMjRweCAwIHJnYmEoMTYsIDE2LCAyMzUsIDAuMTIpJyBcbiAgICAgICAgICA6ICcwIDRweCAyNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KScsXG4gICAgICAgIGJvcmRlcjogc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICcxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjEpJyA6ICcxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpJyxcbiAgICAgICAgbWF4V2lkdGg6IDI4MCxcbiAgICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgdGV4dE92ZXJmbG93OiAnZWxsaXBzaXMnLFxuICAgICAgICBvcGFjaXR5OiB0b29sdGlwVmlzaWJsZSA/IDEgOiAwLFxuICAgICAgICB0cmFuc2l0aW9uOiAnb3BhY2l0eSAwLjRzJyxcbiAgICAgIH19XG4gICAgICByb2xlPVwidG9vbHRpcFwiXG4gICAgICBhcmlhLWxpdmU9XCJwb2xpdGVcIlxuICAgID5cbiAgICAgIHt0b29sdGlwLmNvbnRlbnR9XG4gICAgPC9kaXY+XG4gICkgOiBudWxsO1xuXG4gIC8vIENyZWF0ZSBzb3J0ZWQgc291cmNlcyBhcnJheSBmb3IgaGlnaGxpZ2h0aW5nIChzYW1lIGFzIHJlbmRlcmluZyBhbmQgYW5pbWF0aW9uKVxuICBjb25zdCBzb3J0ZWRTb3VyY2VzRm9ySGlnaGxpZ2h0ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgbGV0IHZpc3VhbE9yZGVyOiBzdHJpbmdbXSA9IFtdO1xuICAgIGlmIChmaWx0ZXJlZERhdGEubGVuZ3RoICYmIGNoYXJ0SGVpZ2h0ID4gMCAmJiBjaGFydEhlaWdodCA+IDApIHtcbiAgICAgIGNvbnN0IHNvdXJjZXNGb3JOb2RlcyA9IFsuLi5zb3VyY2VzXTtcbiAgaWYgKGN1cnJlbnRTb3VyY2UgPT09ICd5ZWFyc19hdF9tZWR0cm9uaWMnKSB7XG4gICAgICAgIHNvdXJjZXNGb3JOb2Rlcy5zb3J0KChhLCBiKSA9PiBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYSkgLSBZRUFSU19DQVRFR09SSUVTLmluZGV4T2YoYikpO1xuICB9IGVsc2Uge1xuICAgICAgICBzb3VyY2VzRm9yTm9kZXMuc29ydCgpO1xuICAgICAgfVxuICAgICAgY29uc3Qgbm9kZXMgPSBbXG4gICAgICAgIC4uLnNvdXJjZXNGb3JOb2Rlcy5tYXAoKG5hbWUpID0+ICh7IGlkOiBgJHtjdXJyZW50U291cmNlfToke25hbWV9YCwgbmFtZSwgY2F0ZWdvcnk6IGN1cnJlbnRTb3VyY2UgfSkpLFxuICAgICAgICAuLi50YXJnZXRzLm1hcCgobmFtZSkgPT4gKHsgaWQ6IGAke2N1cnJlbnRUYXJnZXR9OiR7bmFtZX1gLCBuYW1lLCBjYXRlZ29yeTogY3VycmVudFRhcmdldCB9KSksXG4gICAgICBdO1xuICAgICAgY29uc3QgbGlua3NNYXAgPSBuZXcgTWFwPHN0cmluZywgeyBzb3VyY2U6IHN0cmluZzsgdGFyZ2V0OiBzdHJpbmc7IHZhbHVlOiBudW1iZXIsIGlzRHVtbXk/OiBib29sZWFuIH0+KCk7XG4gICAgICBmaWx0ZXJlZERhdGEuZm9yRWFjaCgoZCkgPT4ge1xuICAgICAgICBjb25zdCBzb3VyY2UgPSBjdXJyZW50U291cmNlID09PSAneWVhcnNfYXRfbWVkdHJvbmljJyA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgOiAoZCBhcyBhbnkpW2N1cnJlbnRTb3VyY2VdO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBjdXJyZW50VGFyZ2V0ID09PSAneWVhcnNfYXRfbWVkdHJvbmljJyA/IGdldFllYXJzQ2F0ZWdvcnkoZC55ZWFyc19hdF9tZWR0cm9uaWMgfHwgMCkgOiAoZCBhcyBhbnkpW2N1cnJlbnRUYXJnZXRdO1xuICAgICAgICBjb25zdCBzb3VyY2VJZCA9IGAke2N1cnJlbnRTb3VyY2V9OiR7c291cmNlfWA7XG4gICAgICAgIGNvbnN0IHRhcmdldElkID0gYCR7Y3VycmVudFRhcmdldH06JHt0YXJnZXR9YDtcbiAgICAgICAgaWYgKCFzb3VyY2VzRm9yTm9kZXMuaW5jbHVkZXMoc291cmNlKSB8fCAhdGFyZ2V0cy5pbmNsdWRlcyh0YXJnZXQpKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGtleSA9IGAke3NvdXJjZUlkfeKGkiR7dGFyZ2V0SWR9YDtcbiAgICAgICAgaWYgKCFsaW5rc01hcC5oYXMoa2V5KSkge1xuICAgICAgICAgIGxpbmtzTWFwLnNldChrZXksIHsgc291cmNlOiBzb3VyY2VJZCwgdGFyZ2V0OiB0YXJnZXRJZCwgdmFsdWU6IDAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgbGlua3NNYXAuZ2V0KGtleSkhLnZhbHVlICs9IDE7XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGxpbmtzID0gQXJyYXkuZnJvbShsaW5rc01hcC52YWx1ZXMoKSk7XG4gICAgICBjb25zdCBzYW5rZXlHZW5lcmF0b3IgPSBzYW5rZXk8YW55LCBhbnk+KClcbiAgICAgICAgLm5vZGVJZCgoZDogYW55KSA9PiBkLmlkKVxuICAgICAgICAubm9kZVdpZHRoKDEyKVxuICAgICAgICAubm9kZVBhZGRpbmcobm9kZVBhZGRpbmcpXG4gICAgICAgIC5leHRlbnQoW1swLCAwXSwgW2NoYXJ0SGVpZ2h0LCBjaGFydEhlaWdodF1dKTtcbiAgICAgIGNvbnN0IHNhbmtleURhdGEgPSBzYW5rZXlHZW5lcmF0b3Ioe1xuICAgICAgICBub2Rlczogbm9kZXMubWFwKChkKSA9PiAoeyAuLi5kIH0pKSxcbiAgICAgICAgbGlua3M6IGxpbmtzLm1hcCgoZCkgPT4gKHsgLi4uZCB9KSksXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHNvdXJjZU5vZGVzID0gc2Fua2V5RGF0YS5ub2Rlcy5maWx0ZXIoKGQ6IGFueSkgPT4gZC5jYXRlZ29yeSA9PT0gY3VycmVudFNvdXJjZSk7XG4gICAgICB2aXN1YWxPcmRlciA9IHNvdXJjZU5vZGVzXG4gICAgICAgIC5zbGljZSgpXG4gICAgICAgIC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4gYS55MCAtIGIueTApXG4gICAgICAgIC5tYXAoKGQ6IGFueSkgPT4gZC5uYW1lKTtcbiAgICB9XG4gICAgcmV0dXJuIHZpc3VhbE9yZGVyLmxlbmd0aCA/IHZpc3VhbE9yZGVyIDogWy4uLnNvdXJjZXNdO1xuICB9LCBbZmlsdGVyZWREYXRhLCBjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0LCBzb3VyY2VzLCB0YXJnZXRzLCBjaGFydEhlaWdodCwgbm9kZVBhZGRpbmddKTtcblxuICAvLyBEZXRlcm1pbmUgd2hpY2ggc291cmNlIG9yIHRhcmdldCB0byBoaWdobGlnaHQgYmFzZWQgb24gYW5pbWF0aW9uIHN0YXRlXG4gIGxldCBoaWdobGlnaHRTb3VyY2VOYW1lOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgbGV0IGhpZ2hsaWdodFRhcmdldE5hbWU6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuICBpZiAoaXNJbkZ1bGxPcGFjaXR5U3RhdGUpIHtcbiAgICBoaWdobGlnaHRTb3VyY2VOYW1lID0gbnVsbDtcbiAgICBoaWdobGlnaHRUYXJnZXROYW1lID0gbnVsbDtcbiAgfSBlbHNlIGlmIChob3ZlcmVkU291cmNlSW5kZXggIT09IG51bGwgJiYgYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgaGlnaGxpZ2h0U291cmNlTmFtZSA9IHNvcnRlZFNvdXJjZXNGb3JIaWdobGlnaHRbaG92ZXJlZFNvdXJjZUluZGV4XTtcbiAgfSBlbHNlIGlmIChob3ZlcmVkVGFyZ2V0SW5kZXggIT09IG51bGwgJiYgYW5pbWF0aW9uUGhhc2UgPT09ICdoaWdobGlnaHRpbmcnKSB7XG4gICAgaGlnaGxpZ2h0VGFyZ2V0TmFtZSA9IHRhcmdldHNbaG92ZXJlZFRhcmdldEluZGV4XTtcbiAgfVxuXG4gIC8vIEVuaGFuY2VkIGFuaW1hdGlvbiBwYXVzZS9yZXN1bWUgd2l0aCBkZWJ1ZyB0cmFja2luZ1xuICBjb25zdCBwYXVzZUFuaW1hdGlvbiA9IHVzZUNhbGxiYWNrKChyZWFzb246IHN0cmluZykgPT4ge1xuICAgIGlmIChhbmltYXRpb25SZWYuY3VycmVudC5ydW5uaW5nICYmICFhbmltYXRpb25SZWYuY3VycmVudC5pc1BhdXNlZCkge1xuICAgICAgY29uc29sZS5sb2coJ+KPuO+4jyAgUEFVU0lORyBBTklNQVRJT046JywgcmVhc29uLCB7XG4gICAgICAgIGN1cnJlbnRTb3VyY2VJbmRleDogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFNvdXJjZUluZGV4LFxuICAgICAgICBjdXJyZW50VGFyZ2V0SW5kZXg6IGFuaW1hdGlvblJlZi5jdXJyZW50LmN1cnJlbnRUYXJnZXRJbmRleCxcbiAgICAgICAgY3VycmVudFNvdXJjZSxcbiAgICAgICAgY3VycmVudFRhcmdldFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkID0gdHJ1ZTtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnBhdXNlZEF0ID0gRGF0ZS5ub3coKTtcbiAgICAgIFxuICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChhbmltYXRpb25SZWYuY3VycmVudC50aW1lcik7XG4gICAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnRpbWVyID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0XSk7XG5cbiAgY29uc3QgcmVzdW1lQW5pbWF0aW9uID0gdXNlQ2FsbGJhY2soKHJlYXNvbjogc3RyaW5nKSA9PiB7XG4gICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgJiYgYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfilrbvuI8gIFJFU1VNSU5HIEFOSU1BVElPTjonLCByZWFzb24sIHtcbiAgICAgICAgY3VycmVudFNvdXJjZUluZGV4OiBhbmltYXRpb25SZWYuY3VycmVudC5jdXJyZW50U291cmNlSW5kZXgsXG4gICAgICAgIGN1cnJlbnRUYXJnZXRJbmRleDogYW5pbWF0aW9uUmVmLmN1cnJlbnQuY3VycmVudFRhcmdldEluZGV4LFxuICAgICAgICBwYXVzZWREdXJhdGlvbjogRGF0ZS5ub3coKSAtIGFuaW1hdGlvblJlZi5jdXJyZW50LnBhdXNlZEF0XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgYW5pbWF0aW9uUmVmLmN1cnJlbnQuaXNQYXVzZWQgPSBmYWxzZTtcbiAgICAgIGFuaW1hdGlvblJlZi5jdXJyZW50LnJlc3VtZUZyb20gPSAnc291cmNlJztcbiAgICAgIFxuICAgICAgLy8gUmVzdW1lIGFuaW1hdGlvbiBmcm9tIGN1cnJlbnQgcG9zaXRpb24gd2l0aCBhIHNtYWxsIGRlbGF5IHRvIGVuc3VyZSBzdGF0ZSBpcyB1cGRhdGVkXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKGFuaW1hdGlvblJlZi5jdXJyZW50LnJ1bm5pbmcgJiYgIWFuaW1hdGlvblJlZi5jdXJyZW50LmlzUGF1c2VkKSB7XG4gICAgICAgICAgYW5pbWF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9LCAxMDApO1xuICAgIH1cbiAgfSwgW2FuaW1hdGVdKTtcblxuICAvLyBVcGRhdGUgaG92ZXIgaGFuZGxlcnMgd2l0aCBwcm9wZXIgc3RhdGUgbWFuYWdlbWVudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghc3ZnUmVmLmN1cnJlbnQpIHJldHVybjtcblxuICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdChzdmdSZWYuY3VycmVudCk7XG4gICAgXG4gICAgLy8gVXBkYXRlIGxpbmsgaG92ZXIgYmVoYXZpb3JcbiAgICBzdmcuc2VsZWN0QWxsKCdwYXRoJylcbiAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICAvLyBQYXVzZSBhbmltYXRpb24gZHVyaW5nIGhvdmVyXG4gICAgICAgIHBhdXNlQW5pbWF0aW9uKCdsaW5rIGhvdmVyJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBTZXQgaG92ZXIgc3RhdGVzXG4gICAgICAgIHNldEhvdmVyZWRMaW5rKGQpO1xuICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnaGlnaGxpZ2h0aW5nJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBIYW5kbGUgc291cmNlIG5vZGUgaG92ZXJcbiAgICAgICAgaWYgKGQuc291cmNlICYmIGQuc291cmNlLmNhdGVnb3J5ID09PSBjdXJyZW50U291cmNlKSB7XG4gICAgICAgICAgY29uc3QgaWR4ID0gc29ydGVkU291cmNlcy5pbmRleE9mKGQuc291cmNlLm5hbWUpO1xuICAgICAgICAgIHNldEhvdmVyZWRTb3VyY2VJbmRleChpZHgpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn46vIE1hbnVhbCBzb3VyY2UgaGlnaGxpZ2h0OicsIGQuc291cmNlLm5hbWUsICdpbmRleDonLCBpZHgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBIYW5kbGUgdGFyZ2V0IG5vZGUgaG92ZXJcbiAgICAgICAgaWYgKGQudGFyZ2V0ICYmIGQudGFyZ2V0LmNhdGVnb3J5ID09PSBjdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgY29uc3QgaWR4ID0gc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodC5pbmRleE9mKGQudGFyZ2V0Lm5hbWUpO1xuICAgICAgICAgIHNldEhvdmVyZWRUYXJnZXRJbmRleChpZHgpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn46vIE1hbnVhbCB0YXJnZXQgaGlnaGxpZ2h0OicsIGQudGFyZ2V0Lm5hbWUsICdpbmRleDonLCBpZHgpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFJlc3VtZSBhbmltYXRpb25cbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdsaW5rIGhvdmVyIGVuZCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2xlYXIgaG92ZXIgc3RhdGVzXG4gICAgICAgIHNldEhvdmVyZWRMaW5rKG51bGwpO1xuICAgICAgICBzZXRIb3ZlcmVkU291cmNlSW5kZXgobnVsbCk7XG4gICAgICAgIHNldEhvdmVyZWRUYXJnZXRJbmRleChudWxsKTtcbiAgICAgICAgc2V0QW5pbWF0aW9uUGhhc2UoJ2Z1bGwnKTtcbiAgICAgIH0pO1xuXG4gICAgLy8gVXBkYXRlIG5vZGUgaG92ZXIgYmVoYXZpb3JcbiAgICBzdmcuc2VsZWN0QWxsKCdyZWN0JylcbiAgICAgIC5vbignbW91c2VlbnRlcicsIGZ1bmN0aW9uKGV2ZW50OiBhbnksIGQ6IGFueSkge1xuICAgICAgICAvLyBQYXVzZSBhbmltYXRpb24gZHVyaW5nIGhvdmVyXG4gICAgICAgIHBhdXNlQW5pbWF0aW9uKCdub2RlIGhvdmVyJyk7XG4gICAgICAgIHNldEFuaW1hdGlvblBoYXNlKCdoaWdobGlnaHRpbmcnKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEhhbmRsZSBzb3VyY2Ugbm9kZSBob3ZlclxuICAgICAgICBpZiAoZC5jYXRlZ29yeSA9PT0gY3VycmVudFNvdXJjZSkge1xuICAgICAgICAgIGNvbnN0IGlkeCA9IHNvcnRlZFNvdXJjZXMuaW5kZXhPZihkLm5hbWUpO1xuICAgICAgICAgIHNldEhvdmVyZWRTb3VyY2VJbmRleChpZHgpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn46vIE1hbnVhbCBzb3VyY2Ugbm9kZSBoaWdobGlnaHQ6JywgZC5uYW1lLCAnaW5kZXg6JywgaWR4KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gSGFuZGxlIHRhcmdldCBub2RlIGhvdmVyXG4gICAgICAgIGlmIChkLmNhdGVnb3J5ID09PSBjdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgY29uc3QgaWR4ID0gc29ydGVkVGFyZ2V0c0ZvckhpZ2hsaWdodC5pbmRleE9mKGQubmFtZSk7XG4gICAgICAgICAgc2V0SG92ZXJlZFRhcmdldEluZGV4KGlkeCk7XG4gICAgICAgICAgY29uc29sZS5sb2coJ/Cfjq8gTWFudWFsIHRhcmdldCBub2RlIGhpZ2hsaWdodDonLCBkLm5hbWUsICdpbmRleDonLCBpZHgpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLm9uKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIFJlc3VtZSBhbmltYXRpb25cbiAgICAgICAgcmVzdW1lQW5pbWF0aW9uKCdub2RlIGhvdmVyIGVuZCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2xlYXIgaG92ZXIgc3RhdGVzXG4gICAgICAgIHNldEhvdmVyZWRTb3VyY2VJbmRleChudWxsKTtcbiAgICAgICAgc2V0SG92ZXJlZFRhcmdldEluZGV4KG51bGwpO1xuICAgICAgICBzZXRBbmltYXRpb25QaGFzZSgnZnVsbCcpO1xuICAgICAgfSk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgLy8gQ2xlYW4gdXAgYWxsIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgc3ZnLnNlbGVjdEFsbCgncGF0aCwgcmVjdCcpXG4gICAgICAgIC5vbignbW91c2VlbnRlcicsIG51bGwpXG4gICAgICAgIC5vbignbW91c2VsZWF2ZScsIG51bGwpO1xuICAgIH07XG4gIH0sIFtzb3J0ZWRTb3VyY2VzLCBzb3J0ZWRUYXJnZXRzRm9ySGlnaGxpZ2h0LCBjdXJyZW50U291cmNlLCBjdXJyZW50VGFyZ2V0LCBwYXVzZUFuaW1hdGlvbiwgcmVzdW1lQW5pbWF0aW9uXSk7XG5cbiAgLy8gTWFpbiByZW5kZXJpbmcgZWZmZWN0XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFzdmdSZWYuY3VycmVudCB8fCAhZGF0YS5sZW5ndGgpIHJldHVybjtcbiAgICBcbiAgICAvLyBUaGUgbWFpbiByZW5kZXJpbmcgbG9naWMgaGFuZGxlcyBhbGwgb3BhY2l0eSB1cGRhdGVzXG4gICAgLy8gVGhpcyBlbnN1cmVzIGRhdGEgYmluZGluZyBpcyBjb3JyZWN0IGFuZCBwcmV2ZW50cyB0aGUgdW5kZWZpbmVkIGVycm9yXG4gICAgXG4gIH0sIFtmaWx0ZXJlZERhdGEsIGhvdmVyZWRTb3VyY2VJbmRleCwgaG92ZXJlZFRhcmdldEluZGV4LCBhbmltYXRpb25QaGFzZSwgc29ydGVkU291cmNlcywgdGFyZ2V0cywgY3VycmVudFNvdXJjZSwgY3VycmVudFRhcmdldF0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e2NvbnRhaW5lclJlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScsIG1pbkhlaWdodDogMjIwLCBtaW5XaWR0aDogMzIwLCBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9fT5cbiAgICAgIHsvKiBDYXRlZ29yeSBTZWxlY3Rpb24gQ29udHJvbHMgKi99XG4gICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICB0b3A6IDEwLFxuICAgICAgICBsZWZ0OiAxMCxcbiAgICAgICAgcmlnaHQ6IDEwLFxuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICB6SW5kZXg6IDIwLFxuICAgICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZSdcbiAgICAgIH19PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHBvaW50ZXJFdmVudHM6ICdhdXRvJyB9fT5cbiAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICB2YWx1ZT17Y3VycmVudFNvdXJjZX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Q3VycmVudFNvdXJjZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBwYWRkaW5nOiAnOHB4IDEycHgnLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc2cHgnLFxuICAgICAgICAgICAgICBib3JkZXI6IHNldHRpbmdzLmlzRGFya01vZGUgPyAnMXB4IHNvbGlkICM0NDQnIDogJzFweCBzb2xpZCAjY2NjJyxcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICcjMmEyYTJhJyA6ICcjZmZmJyxcbiAgICAgICAgICAgICAgY29sb3I6IHNldHRpbmdzLmlzRGFya01vZGUgPyAnI2ZmZicgOiAnIzAwMCcsXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAnMTRweCcsXG4gICAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgc2Fucy1zZXJpZidcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2F2YWlsYWJsZUZpZWxkcy5tYXAoKGZpZWxkKSA9PiAoXG4gICAgICAgICAgICAgIDxvcHRpb24ga2V5PXtmaWVsZC52YWx1ZX0gdmFsdWU9e2ZpZWxkLnZhbHVlfT5cbiAgICAgICAgICAgICAgICB7ZmllbGQubGFiZWx9XG4gICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IHN0eWxlPXt7IHBvaW50ZXJFdmVudHM6ICdhdXRvJyB9fT5cbiAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICB2YWx1ZT17Y3VycmVudFRhcmdldH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Q3VycmVudFRhcmdldChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBwYWRkaW5nOiAnOHB4IDEycHgnLFxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc2cHgnLFxuICAgICAgICAgICAgICBib3JkZXI6IHNldHRpbmdzLmlzRGFya01vZGUgPyAnMXB4IHNvbGlkICM0NDQnIDogJzFweCBzb2xpZCAjY2NjJyxcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogc2V0dGluZ3MuaXNEYXJrTW9kZSA/ICcjMmEyYTJhJyA6ICcjZmZmJyxcbiAgICAgICAgICAgICAgY29sb3I6IHNldHRpbmdzLmlzRGFya01vZGUgPyAnI2ZmZicgOiAnIzAwMCcsXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAnMTRweCcsXG4gICAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgc2Fucy1zZXJpZidcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2F2YWlsYWJsZUZpZWxkcy5tYXAoKGZpZWxkKSA9PiAoXG4gICAgICAgICAgICAgIDxvcHRpb24ga2V5PXtmaWVsZC52YWx1ZX0gdmFsdWU9e2ZpZWxkLnZhbHVlfT5cbiAgICAgICAgICAgICAgICB7ZmllbGQubGFiZWx9XG4gICAgICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICBcbiAgICAgIHsvKiBTaG93IGEgbWVzc2FnZSBpZiBkYXRhIGlzIHZlcnkgc3BhcnNlICovfVxuICAgICAgeyhub2RlQ291bnQgPD0gMiB8fCAoc291cmNlcy5sZW5ndGggPD0gMSB8fCB0YXJnZXRzLmxlbmd0aCA8PSAxKSkgJiYgKFxuICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgdG9wOiA4MCxcbiAgICAgICAgICBsZWZ0OiAnNTAlJyxcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKC01MCUpJyxcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgyNTUsMjU1LDIwMCwwLjk1KScsXG4gICAgICAgICAgY29sb3I6ICcjMTcwRjVGJyxcbiAgICAgICAgICBwYWRkaW5nOiAnMTJweCAyNHB4JyxcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IDgsXG4gICAgICAgICAgZm9udFdlaWdodDogNjAwLFxuICAgICAgICAgIGZvbnRTaXplOiAxOCxcbiAgICAgICAgICB6SW5kZXg6IDEwLFxuICAgICAgICAgIGJveFNoYWRvdzogJzAgMnB4IDEycHggMCByZ2JhKDAsMCwwLDAuMDgpJ1xuICAgICAgICB9fT5cbiAgICAgICAgICBOb3QgZW5vdWdoIGRhdGEgdG8gc2hvdyBhIG1lYW5pbmdmdWwgZmxvdyBkaWFncmFtLlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgICA8c3ZnXG4gICAgICAgIHJlZj17c3ZnUmVmfVxuICAgICAgICB3aWR0aD17Y29udGFpbmVyV2lkdGh9XG4gICAgICAgIGhlaWdodD17Y29udGFpbmVySGVpZ2h0fVxuICAgICAgICB2aWV3Qm94PXtgMCAwICR7Y29udGFpbmVyV2lkdGh9ICR7Y29udGFpbmVySGVpZ2h0fWB9XG4gICAgICAgIHN0eWxlPXt7IGRpc3BsYXk6ICdibG9jaycsIHdpZHRoOiAnMTAwJScsIGhlaWdodDogJzEwMCUnLCBiYWNrZ3JvdW5kOiAndHJhbnNwYXJlbnQnIH19XG4gICAgICA+XG4gICAgICAgIHsvKiBNYWluIGNoYXJ0IGdyb3VwLCB0cmFuc2xhdGVkIGJ5IG1hcmdpbiAqL31cbiAgICAgICAgPGcgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCR7bWFyZ2luLnRvcH0pYH0+XG4gICAgICAgICAgey8qIC4uLiBub2RlcyBhbmQgbGlua3MgLi4uICovfVxuICAgICAgICA8L2c+XG4gICAgICAgIHsvKiBEZWJ1ZyBvdXRsaW5lcyBmb3IgYWxpZ25tZW50IChvbmx5IGlmIGRlYnVnT24pICovfVxuICAgICAgICB7ZGVidWdPbiAmJiAoXG4gICAgICAgICAgPGcgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCR7bWFyZ2luLnRvcH0pYH0+XG4gICAgICAgICAgICB7LyogTm9kZSBkZWJ1ZyBvdXRsaW5lcyAqL31cbiAgICAgICAgICAgIHtBcnJheS5pc0FycmF5KGRlYnVnU2Fua2V5RGF0YT8ubm9kZXMpICYmIGRlYnVnU2Fua2V5RGF0YS5ub2Rlcy5tYXAoKGQ6IGFueSwgaTogbnVtYmVyKSA9PiAoXG4gICAgICAgICAgICAgIDxyZWN0XG4gICAgICAgICAgICAgICAga2V5PXtgZGVidWctbm9kZS0ke2l9YH1cbiAgICAgICAgICAgICAgICB4PXtkLngwfVxuICAgICAgICAgICAgICAgIHk9e2QueTB9XG4gICAgICAgICAgICAgICAgd2lkdGg9e2QueDEgLSBkLngwfVxuICAgICAgICAgICAgICAgIGhlaWdodD17ZC55MSAtIGQueTB9XG4gICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgIHN0cm9rZT1cIm1hZ2VudGFcIlxuICAgICAgICAgICAgICAgIHN0cm9rZURhc2hhcnJheT1cIjQgMlwiXG4gICAgICAgICAgICAgICAgcG9pbnRlckV2ZW50cz1cIm5vbmVcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICB7LyogTGluayBkZWJ1ZyBvdXRsaW5lcyAoaWYgYW55KSAqL31cbiAgICAgICAgICAgIHtBcnJheS5pc0FycmF5KGRlYnVnU2Fua2V5RGF0YT8ubGlua3MpICYmIGRlYnVnU2Fua2V5RGF0YS5saW5rcy5tYXAoKGQ6IGFueSwgaTogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBjbGFtcGVkU2Fua2V5TGlua0hvcml6b250YWwoKShkKSB8fCAnJztcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgICAgICAga2V5PXtgZGVidWctbGluay0ke2l9YH1cbiAgICAgICAgICAgICAgICAgIGQ9e3BhdGh9XG4gICAgICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICBzdHJva2U9XCJjeWFuXCJcbiAgICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfVxuICAgICAgICAgICAgICAgICAgcG9pbnRlckV2ZW50cz1cIm5vbmVcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L2c+XG4gICAgICAgICl9XG4gICAgICA8L3N2Zz5cbiAgICAgIHt0b29sdGlwRWx9XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwidXNlTWVtbyIsInVzZUNhbGxiYWNrIiwiZDMiLCJzYW5rZXkiLCJ1c2VWaXN1YWxpemF0aW9uRGF0YSIsImdldFllYXJzQ2F0ZWdvcnkiLCJnZXROb2RlQ29sb3IiLCJ1c2VBcHBDb250ZXh0IiwiQ0FURUdPUllfQ09MT1JTIiwiYXZhaWxhYmxlRmllbGRzIiwidmFsdWUiLCJsYWJlbCIsIllFQVJTX0NBVEVHT1JJRVMiLCJnZXRWYWxpZFllYXJzQ2F0ZWdvcnkiLCJ5ZWFycyIsImlzTmFOIiwic2Fua2V5TGlua1dhdmUiLCJkIiwid2F2ZUFtcGxpdHVkZSIsIndhdmVGcmVxdWVuY3kiLCJjaGFydFdpZHRoIiwiY2hhcnRIZWlnaHQiLCJ4MCIsInNvdXJjZSIsIngxIiwidGFyZ2V0IiwieTAiLCJ5MSIsIk1hdGgiLCJtYXgiLCJtaW4iLCJtaWRYIiwid2F2ZVkwIiwic2luIiwiUEkiLCJ3YXZlWTEiLCJjbGFtcGVkU2Fua2V5TGlua0hvcml6b250YWwiLCJzeSIsInR5IiwiY3VydmF0dXJlIiwieGkiLCJpbnRlcnBvbGF0ZU51bWJlciIsIngyIiwieDMiLCJBbGx1dmlhbERpYWdyYW0iLCJ3aWR0aCIsImhlaWdodCIsImF1dG9QbGF5Iiwib25RdWVzdGlvbkNoYW5nZSIsImNvbnRhaW5lclJlZiIsImNvbnRhaW5lcldpZHRoIiwic2V0Q29udGFpbmVyV2lkdGgiLCJjb250YWluZXJIZWlnaHQiLCJzZXRDb250YWluZXJIZWlnaHQiLCJjdXJyZW50Iiwib2JzZXJ2ZXIiLCJ3aW5kb3ciLCJSZXNpemVPYnNlcnZlciIsImVudHJpZXMiLCJlbnRyeSIsImNvbnRlbnRSZWN0Iiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJzdmdSZWYiLCJkYXRhIiwiaXNMb2FkaW5nIiwiZXJyb3IiLCJzZXR0aW5ncyIsImdldEN1cnJlbnRUaGVtZUNvbG9ycyIsImN1cnJlbnRTb3VyY2UiLCJzZXRDdXJyZW50U291cmNlIiwiY3VycmVudFRhcmdldCIsInNldEN1cnJlbnRUYXJnZXQiLCJmaWx0ZXJlZERhdGEiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJ1c2VUZXN0RGF0YSIsImZpbHRlciIsIml0ZW0iLCJ0ZXN0X2RhdGEiLCJzb3VyY2VzIiwiY2F0Iiwic29tZSIsInllYXJzX2F0X21lZHRyb25pYyIsImZyb20iLCJTZXQiLCJtYXAiLCJ0YXJnZXRzIiwic29ydCIsIk1JTl9DSEFSVF9IRUlHSFQiLCJNQVhfQ0hBUlRfSEVJR0hUIiwiTUlOX0NIQVJUX1dJRFRIIiwiTUFYX0NIQVJUX1dJRFRIIiwibm9kZUNvdW50IiwibWVhc3VyZVRleHRXaWR0aCIsInRleHQiLCJmb250IiwiX2NhbnZhcyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNhbnZhcyIsImNvbnRleHQiLCJnZXRDb250ZXh0IiwibWVhc3VyZVRleHQiLCJsYWJlbEZvbnRTaXplIiwiZmxvb3IiLCJsYWJlbEZvbnQiLCJhbGxMYWJlbHMiLCJsYWJlbFdpZHRocyIsIm1heExhYmVsV2lkdGgiLCJsYWJlbFBhZGRpbmciLCJtaW5Ecm9wZG93bk1hcmdpbiIsImV4dHJhTGFiZWxTcGFjZSIsIm1heExlZnRNYXJnaW4iLCJtYXJnaW4iLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJhdmFpbGFibGVIZWlnaHQiLCJtYXhOb2RlSGVpZ2h0IiwibWF4TGlua1dpZHRoIiwibWluTm9kZUhlaWdodCIsIm1pblBhZGRpbmciLCJub2RlSGVpZ2h0Iiwibm9kZVBhZGRpbmciLCJjb25zb2xlIiwibG9nIiwiY3VycmVudFNvdXJjZVJlZiIsImN1cnJlbnRUYXJnZXRSZWYiLCJpbnNpZ2h0cyIsInNldEluc2lnaHRzIiwiaG92ZXJlZE5vZGUiLCJzZXRIb3ZlcmVkTm9kZSIsImhvdmVyZWRMaW5rIiwic2V0SG92ZXJlZExpbmsiLCJ0b29sdGlwIiwic2V0VG9vbHRpcCIsImxhc3RDYXRlZ29yeUNoYW5nZSIsInNldExhc3RDYXRlZ29yeUNoYW5nZSIsImN1cnJlbnRUYXJnZXRJbmRleCIsInNldEN1cnJlbnRUYXJnZXRJbmRleCIsImlzQW5pbWF0aW5nIiwic2V0SXNBbmltYXRpbmciLCJob3ZlcmVkU291cmNlSW5kZXgiLCJzZXRIb3ZlcmVkU291cmNlSW5kZXgiLCJob3ZlcmVkVGFyZ2V0SW5kZXgiLCJzZXRIb3ZlcmVkVGFyZ2V0SW5kZXgiLCJpc0luRnVsbE9wYWNpdHlTdGF0ZSIsInNldElzSW5GdWxsT3BhY2l0eVN0YXRlIiwiYW5pbWF0aW9uUGhhc2UiLCJzZXRBbmltYXRpb25QaGFzZSIsImFuaW1hdGlvblJlZiIsInRpbWVyIiwicnVubmluZyIsImN1cnJlbnRTb3VyY2VJbmRleCIsImlzUGF1c2VkIiwicGF1c2VkQXQiLCJEYXRlIiwibm93IiwicmVzdW1lRnJvbSIsImN5Y2xlQ291bnQiLCJwcmVmZXJzUmVkdWNlZE1vdGlvbiIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwiYW5pbWF0aW9uRHVyYXRpb25zIiwiYmFzZVNwZWVkIiwiYXV0b1BsYXlTcGVlZCIsInJlZHVjdGlvbkZhY3RvciIsInN0ZXBEdXJhdGlvbiIsInBhdXNlRHVyYXRpb24iLCJjYXRlZ29yeVBhdXNlRHVyYXRpb24iLCJsaW5rVHJhbnNpdGlvbkR1cmF0aW9uIiwic29ydGVkU291cmNlcyIsInNvdXJjZXNGb3JOb2RlcyIsImEiLCJiIiwiaW5kZXhPZiIsIm5vZGVzIiwibmFtZSIsImlkIiwiY2F0ZWdvcnkiLCJsaW5rc01hcCIsIk1hcCIsImZvckVhY2giLCJpbmNsdWRlcyIsInNvdXJjZUlkIiwidGFyZ2V0SWQiLCJrZXkiLCJoYXMiLCJzZXQiLCJnZXQiLCJsaW5rcyIsInZhbHVlcyIsInNhbmtleUdlbmVyYXRvciIsIm5vZGVJZCIsIm5vZGVXaWR0aCIsImV4dGVudCIsInNhbmtleURhdGEiLCJzb3VyY2VOb2RlcyIsImFuaW1hdGUiLCJkYXRhTGVuZ3RoIiwidGFyZ2V0T3B0aW9ucyIsImYiLCJzb3VyY2VJbmRleCIsInRhcmdldEluZGV4Iiwic291cmNlTmFtZSIsInRhcmdldE5hbWUiLCJzb3VyY2VPcHRpb25zIiwic291cmNlUHJvZ3Jlc3MiLCJ0YXJnZXRQcm9ncmVzcyIsImlzTGFzdFNvdXJjZSIsImhhc01vcmVUYXJnZXRzIiwibmV4dFRpbWVvdXQiLCJwcm9ncmVzcyIsInNldFRpbWVvdXQiLCJ0YXJnZXRPcHRpb25zTGVuZ3RoIiwiYXZhaWxhYmxlVGFyZ2V0cyIsImNsZWFyVGltZW91dCIsIm5leHRUYXJnZXQiLCJwcmV2aW91c1RhcmdldCIsImFsbFRhcmdldE9wdGlvbnMiLCJuZXh0U291cmNlSW5kZXgiLCJuZXh0U291cmNlIiwibmV3VGFyZ2V0T3B0aW9ucyIsImZpcnN0VGFyZ2V0IiwiaXNBdXRvUGxheUVuYWJsZWQiLCJzdmdSZWZFeGlzdHMiLCJpc1J1bm5pbmciLCJzb3VyY2VDYXRlZ29yeSIsInRvdGFsU291cmNlcyIsInRvdGFsVGFyZ2V0cyIsInNwZWVkIiwibm9kZUxhYmVsRm9udFNpemUiLCJub2RlTGFiZWxGb250V2VpZ2h0Iiwibm9kZUxhYmVsQ29sb3IiLCJpc0RhcmtNb2RlIiwibm9kZUxhYmVsRm9udEZhbWlseSIsIm5vZGVMYWJlbE9mZnNldCIsImxvY2FsRGVidWciLCJzZXRMb2NhbERlYnVnIiwic2hvd1RoZW1lVG9nZ2xlIiwic2V0U2hvd1RoZW1lVG9nZ2xlIiwiZGVidWdPbiIsImRlYnVnU2Fua2V5RGF0YSIsInNldERlYnVnU2Fua2V5RGF0YSIsInN2ZyIsInNlbGVjdCIsInNlbGVjdEFsbCIsInJlbW92ZSIsImF0dHIiLCJzb3J0ZWRUYXJnZXRzIiwic291cmNlQWNjZXNzb3IiLCJ0YXJnZXRBY2Nlc3NvciIsInZhbGlkRGF0YSIsImlzRHVtbXkiLCJsaW5rIiwibGVmdFRvdGFscyIsImwiLCJyZWR1Y2UiLCJzdW0iLCJyaWdodFRvdGFscyIsImxlZnRTdW0iLCJyaWdodFN1bSIsImxlZnRTY2FsZSIsInJpZ2h0U2NhbGUiLCJzIiwidCIsInNsaWNlIiwiZHluYW1pY05vZGVQYWRkaW5nIiwibiIsImxlZnROb2RlcyIsInJpZ2h0Tm9kZXMiLCJldmVyeSIsImkiLCJlbnRlciIsImFwcGVuZCIsImxvd2VyIiwibm9kZVlzIiwiZmxhdCIsIm1pblkiLCJtYXhZIiwidXNlZEhlaWdodCIsIm9mZnNldFkiLCJnIiwiZGVmcyIsImVtcHR5IiwibGlua3NHIiwibm9kZXNHIiwiZ2xvd0ZpbHRlciIsImZlTWVyZ2UiLCJmaWx0ZXJlZExpbmtzIiwic3R5bGUiLCJsaW5rS2V5IiwibGlua1NlbCIsImV4aXQiLCJ0cmFuc2l0aW9uIiwiZHVyYXRpb24iLCJpc0NhdGVnb3J5Q2hhbmdlIiwibmV3TGlua3MiLCJjb2xvciIsImQzUGFsZXR0ZSIsImluZGV4IiwiYWJzIiwic3BsaXQiLCJhY2MiLCJjIiwiY2hhckNvZGVBdCIsImJhc2VPcGFjaXR5IiwiaGlnaGxpZ2h0T3BhY2l0eSIsImRpbU9wYWNpdHkiLCJob3ZlcmVkU291cmNlIiwiaG92ZXJlZFRhcmdldCIsImVhY2giLCJwYXRoIiwidG90YWxMZW5ndGgiLCJnZXRUb3RhbExlbmd0aCIsImRlbGF5IiwiZWFzZSIsImVhc2VDdWJpY0luT3V0Iiwib24iLCJldmVudCIsIngiLCJvZmZzZXRYIiwieSIsImNvbnRlbnQiLCJkaXYiLCJjbGFzc05hbWUiLCJmaWx0ZXJlZE5vZGVzIiwibm9kZVNlbCIsImpvaW4iLCJpc0Nvbm5lY3RlZCIsImlkeCIsInVwZGF0ZSIsImxhYmVsTGF5ZXIiLCJzb3VyY2VOb2RlU2V0IiwidGFyZ2V0Tm9kZVNldCIsInRhcmdldE5vZGVzIiwibm9kZSIsIm1vc3RDb21tb24iLCJ1bmRlZmluZWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiY2F0ZWdvcnlDb2xvcnMiLCJzb3J0ZWRUYXJnZXRzRm9ySGlnaGxpZ2h0Iiwic29ydGVkIiwibGVhcm5pbmdTdHlsZU9yZGVyIiwiYUluZGV4IiwiYkluZGV4IiwibG9jYWxlQ29tcGFyZSIsImlzSG92ZXJlZCIsInRvb2x0aXBWaXNpYmxlIiwic2V0VG9vbHRpcFZpc2libGUiLCJ0b29sdGlwVGltZW91dFJlZiIsInRvb2x0aXBFbCIsInBvc2l0aW9uIiwiYmFja2dyb3VuZCIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJwb2ludGVyRXZlbnRzIiwiekluZGV4IiwiZm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJmb250U2l6ZSIsImJveFNoYWRvdyIsImJvcmRlciIsIm1heFdpZHRoIiwid2hpdGVTcGFjZSIsIm92ZXJmbG93IiwidGV4dE92ZXJmbG93Iiwib3BhY2l0eSIsInJvbGUiLCJhcmlhLWxpdmUiLCJzb3J0ZWRTb3VyY2VzRm9ySGlnaGxpZ2h0IiwidmlzdWFsT3JkZXIiLCJoaWdobGlnaHRTb3VyY2VOYW1lIiwiaGlnaGxpZ2h0VGFyZ2V0TmFtZSIsInBhdXNlQW5pbWF0aW9uIiwicmVhc29uIiwicmVzdW1lQW5pbWF0aW9uIiwicGF1c2VkRHVyYXRpb24iLCJyZWYiLCJtaW5IZWlnaHQiLCJtaW5XaWR0aCIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJvbkNoYW5nZSIsImUiLCJmaWVsZCIsIm9wdGlvbiIsInRyYW5zZm9ybSIsInZpZXdCb3giLCJyZWN0IiwiZmlsbCIsInN0cm9rZSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZVdpZHRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/ChordDiagram.tsx":
/*!***********************************************************!*\
  !*** ./src/components/DataVisualization/ChordDiagram.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChordDiagram)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n/* harmony import */ var _shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/useVisualizationData */ \"(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\");\n/* harmony import */ var _shared_QuestionSelector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/QuestionSelector */ \"(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx\");\n/* harmony import */ var _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/chordUtils */ \"(ssr)/./src/components/DataVisualization/shared/chordUtils.ts\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* harmony import */ var _components_shared_GlobalControlsNav__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/shared/GlobalControlsNav */ \"(ssr)/./src/components/shared/GlobalControlsNav.tsx\");\n/* harmony import */ var _shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shared/colorUtils */ \"(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n// --- TypeScript Types for Chord Diagram ---\n// (If you already import ChordGroup/ChordLink from shared/chordUtils, do not redefine here)\n// --- Simple Error Boundary for Robustness ---\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n    static getDerivedStateFromError(_) {\n        return {\n            hasError: true\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        // Log error to monitoring service if needed\n        console.error(\"ChordDiagram ErrorBoundary:\", error, errorInfo);\n    }\n    render() {\n        if (this.state.hasError) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    color: \"red\",\n                    padding: 24\n                },\n                children: \"Something went wrong in the Chord Diagram.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 53,\n                columnNumber: 14\n            }, this);\n        }\n        return this.props.children;\n    }\n}\n// --- Main ChordDiagram wrapped in ErrorBoundary ---\nfunction ChordDiagramInternal({ width = 1400, height = 1000, autoPlay = true, onRelationshipChange, enableRotation = true, showAllConnections = false }) {\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const secondarySvgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { data, isLoading, error } = (0,_shared_useVisualizationData__WEBPACK_IMPORTED_MODULE_3__.useVisualizationData)();\n    const [currentSource, setCurrentSource] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[0].source);\n    const [currentTarget, setCurrentTarget] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[0].target);\n    const [insights, setInsights] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [tooltip, setTooltip] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_6__.useAppContext)();\n    const [lastCategoryChange, setLastCategoryChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        source: currentSource,\n        target: currentTarget\n    });\n    const [showSecondaryChord, setShowSecondaryChord] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Animation state management (similar to AlluvialDiagram)\n    const [animationPhase, setAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const [highlightedArcIndex, setHighlightedArcIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [highlightedSide, setHighlightedSide] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAnimating, setIsAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Secondary chord animation state\n    const [secondaryAnimationPhase, setSecondaryAnimationPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"full\");\n    const [secondaryHighlightedArcIndex, setSecondaryHighlightedArcIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [secondaryHighlightedSide, setSecondaryHighlightedSide] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Animation timing ref\n    const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentIndex: 0,\n        currentSide: \"left\",\n        isPaused: false,\n        cycleCount: 0\n    });\n    // Secondary chord animation timing ref\n    const secondaryAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        timer: null,\n        running: false,\n        currentIndex: 0,\n        currentSide: \"left\",\n        isPaused: false\n    });\n    // Define available fields for the selector\n    const availableFields = [\n        {\n            value: \"years_at_medtronic\",\n            label: \"Years at Medtronic\"\n        },\n        {\n            value: \"peak_performance\",\n            label: \"Peak Performance\"\n        },\n        {\n            value: \"learning_style\",\n            label: \"Learning Style\"\n        },\n        {\n            value: \"motivation\",\n            label: \"Motivation\"\n        },\n        {\n            value: \"shaped_by\",\n            label: \"Shaped By\"\n        }\n    ];\n    // Typography constants (theme-aware)\n    const labelFontSize = 20;\n    const labelFontWeight = 700;\n    const labelColor = settings.isDarkMode ? \"#ffffff\" : \"#170F5F\";\n    const labelFontFamily = 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif';\n    // Check if peak performance is involved and show secondary chord\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const isPeakPerformanceInvolved = currentSource === \"peak_performance\" || currentTarget === \"peak_performance\";\n        setShowSecondaryChord(isPeakPerformanceInvolved);\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    // Secondary chord diagram for peak performance breakdown\n    const renderSecondaryChord = ()=>{\n        if (!secondarySvgRef.current || !data.length || isLoading) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(secondarySvgRef.current);\n        svg.selectAll(\"*\").remove();\n        const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n        // Get all data for secondary chord (Years at Medtronic vs Peak Performance categories)\n        const secondaryData = filteredData.filter((d)=>d.peak_performance);\n        if (secondaryData.length < 5) return;\n        // Use same dimensions as main chord for consistency\n        const secondaryWidth = showSecondaryChord ? width * 0.45 : width;\n        const secondaryHeight = showSecondaryChord ? height * 0.8 : height * 0.85;\n        const secondaryMargin = {\n            top: 80,\n            right: 80,\n            bottom: 100,\n            left: 80\n        };\n        const secondaryChartWidth = secondaryWidth - secondaryMargin.left - secondaryMargin.right;\n        const secondaryChartHeight = secondaryHeight - secondaryMargin.top - secondaryMargin.bottom;\n        const secondaryRadius = Math.max(120, Math.min(secondaryChartWidth, secondaryChartHeight) / 2 - 60);\n        // Years categories and Peak Performance categories\n        const yearsCategories = [\n            \"0-5\",\n            \"6-10\",\n            \"11-15\",\n            \"16-20\",\n            \"20+\"\n        ];\n        const peakPerfCategories = Array.from(new Set(secondaryData.map((d)=>d.peak_performance))).filter(Boolean).sort();\n        // Create bipartite matrix: Years vs Peak Performance\n        const allCategories = [\n            ...yearsCategories,\n            ...peakPerfCategories\n        ];\n        const matrix = allCategories.map((sourceCategory, sourceIndex)=>allCategories.map((targetCategory, targetIndex)=>{\n                // Only create connections between years and peak performance (not within same type)\n                const sourceIsYears = sourceIndex < yearsCategories.length;\n                const targetIsYears = targetIndex < yearsCategories.length;\n                // Only connect years to peak performance\n                if (sourceIsYears === targetIsYears) return 0;\n                // Count people who match this year + performance combination\n                const yearsCat = sourceIsYears ? sourceCategory : targetCategory;\n                const perfCat = sourceIsYears ? targetCategory : sourceCategory;\n                return secondaryData.filter((d)=>{\n                    const years = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0);\n                    const perf = d.peak_performance;\n                    return years === yearsCat && perf === perfCat;\n                }).length;\n            }));\n        // Create chord layout\n        const chordLayout = d3__WEBPACK_IMPORTED_MODULE_2__.chord().padAngle(0.05);\n        const chordData = chordLayout(matrix);\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${secondaryMargin.left + secondaryChartWidth / 2}, ${secondaryMargin.top + secondaryChartHeight / 2})`);\n        // Draw arcs\n        const arc = d3__WEBPACK_IMPORTED_MODULE_2__.arc().innerRadius(secondaryRadius * 0.75).outerRadius(secondaryRadius * 0.95);\n        const ribbon = d3__WEBPACK_IMPORTED_MODULE_2__.ribbon().radius(secondaryRadius * 0.75);\n        // Colors: different hues for years vs peak performance types\n        const yearsColors = [\n            \"#0077CC\",\n            \"#00A3E0\",\n            \"#4FC3F7\",\n            \"#81C784\",\n            \"#AED581\"\n        ]; // Blues/Greens for years\n        const perfColors = [\n            \"#FF6B6B\",\n            \"#FFD166\",\n            \"#06D6A0\",\n            \"#118AB2\",\n            \"#FF9F1C\",\n            \"#4ECDC4\"\n        ]; // Various colors for performance types\n        const colors = [\n            ...yearsColors,\n            ...perfColors.slice(0, peakPerfCategories.length)\n        ];\n        // Draw groups (arcs) with animation and hover effects\n        const groupSelection = g.selectAll(\".chord-group\").data(chordData.groups).enter().append(\"path\").attr(\"class\", \"chord-group\").attr(\"d\", arc).style(\"fill\", (d, i)=>colors[i % colors.length]).style(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"secondary arc hover\");\n            // Trigger highlighting for secondary chord\n            console.log(\"\\uD83C\\uDFAF Secondary chord arc hover:\", {\n                groupIndex: d.index,\n                category: allCategories[d.index]\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            setSecondaryHighlightedArcIndex(d.index);\n            setSecondaryHighlightedSide(d.index < yearsCategories.length ? \"left\" : \"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: allCategories[d.index]?.toString().replace(/_/g, \" \") || \"\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 239,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: d.index < yearsCategories.length ? \"Years at Medtronic\" : \"Peak Performance Type\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 240,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Value: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 241,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 238,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"secondary arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        });\n        // Apply transition animations to groups\n        groupSelection.transition().duration(750).style(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === i) {\n                    return 1.0; // Source arc is fully highlighted\n                }\n                // Check if this arc is connected to the highlighted arc\n                if (secondaryHighlightedArcIndex !== null) {\n                    const isConnected = chordData.some((chord)=>chord.source.index === i && chord.target.index === secondaryHighlightedArcIndex || chord.source.index === secondaryHighlightedArcIndex && chord.target.index === i);\n                    return isConnected ? 0.95 : 0.3;\n                }\n            }\n            return 0.8;\n        }).style(\"stroke-width\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return 3;\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n            }\n            return \"none\";\n        });\n        // Draw chords (ribbons) with animation and hover effects\n        const chordSelection = g.selectAll(\".chord\").data(chordData).enter().append(\"path\").attr(\"class\", \"chord\").attr(\"d\", ribbon).style(\"fill\", (d)=>colors[d.source.index % colors.length]).style(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"secondary ribbon hover\");\n            // Trigger highlighting for the source side of this ribbon\n            console.log(\"\\uD83C\\uDFAF Secondary ribbon hover:\", {\n                sourceIndex: d.source.index,\n                targetIndex: d.target.index,\n                sourceCategory: allCategories[d.source.index],\n                targetCategory: allCategories[d.target.index]\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            setSecondaryHighlightedArcIndex(d.source.index);\n            setSecondaryHighlightedSide(d.source.index < yearsCategories.length ? \"left\" : \"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: [\n                                allCategories[d.source.index],\n                                \" ↔ \",\n                                allCategories[d.target.index]\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 319,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Connections: \",\n                                d.source.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 322,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 318,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function() {\n            resumeAnimation(\"secondary ribbon hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        });\n        // Apply transition animations to chords\n        chordSelection.transition().duration(750).style(\"opacity\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Add labels with proper spacing and rotation\n        const secondaryLabelRadius = Math.max(120, secondaryRadius * 1.45);\n        g.selectAll(\".chord-label\").data(chordData.groups).enter().append(\"text\").attr(\"class\", \"chord-label\").attr(\"transform\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            const x = secondaryLabelRadius * Math.cos(angle);\n            const y = secondaryLabelRadius * Math.sin(angle);\n            const rotation = angle * 180 / Math.PI;\n            // Rotate text for better readability\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return `translate(${x}, ${y}) rotate(${rotation + 180})`;\n            } else {\n                return `translate(${x}, ${y}) rotate(${rotation})`;\n            }\n        }).attr(\"text-anchor\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return \"end\";\n            } else {\n                return \"start\";\n            }\n        }).attr(\"alignment-baseline\", \"middle\").style(\"font-family\", labelFontFamily).style(\"font-weight\", labelFontWeight).style(\"font-size\", (d)=>{\n            // Dynamic font size based on number of labels\n            const totalLabels = allCategories.length;\n            if (totalLabels > 12) return \"13px\";\n            if (totalLabels > 10) return \"14px\";\n            if (totalLabels > 8) return \"15px\";\n            return \"16px\";\n        }).style(\"fill\", labelColor).style(\"text-transform\", \"uppercase\").text((d, i)=>{\n            const text = allCategories[i]?.toString().replace(/_/g, \" \") || \"\";\n            // Show full text for secondary chord labels\n            return text;\n        }).on(\"mouseenter\", function(event, d) {\n            const fullText = allCategories[d.index]?.toString().replace(/_/g, \" \") || \"\";\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: fullText\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 420,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: d.index < yearsCategories.length ? \"Years at Medtronic\" : \"Peak Performance Type\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 421,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 419,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>setTooltip(null));\n    };\n    // Helper function to ensure source and target are different\n    const ensureDifferentCategories = (source, target)=>{\n        if (source === target) {\n            // Find a different target\n            const differentOption = availableFields.find((field)=>field.value !== source);\n            return {\n                source,\n                target: differentOption ? differentOption.value : \"learning_style\"\n            };\n        }\n        return {\n            source,\n            target\n        };\n    };\n    // Ensure initial state doesn't have same categories\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const corrected = ensureDifferentCategories(currentSource, currentTarget);\n        if (corrected.source !== currentSource || corrected.target !== currentTarget) {\n            setCurrentSource(corrected.source);\n            setCurrentTarget(corrected.target);\n        }\n    }, []);\n    // Track current mode index with state\n    const [currentModeIndex, setCurrentModeIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Update mode index when source/target changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const modeIndex = _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.findIndex((mode)=>mode.source === currentSource && mode.target === currentTarget);\n        if (modeIndex !== -1) {\n            setCurrentModeIndex(modeIndex);\n        }\n    }, [\n        currentSource,\n        currentTarget\n    ]);\n    // Remove pulsing animation to eliminate flickering - will use CSS animations instead if needed\n    // Arc highlighting animation with connected ribbons\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83D\\uDD04 ChordDiagram arc highlighting effect:\", {\n            autoPlay,\n            isAutoPlayEnabled: settings.isAutoPlayEnabled,\n            dataLength: data.length\n        });\n        if (!autoPlay || !settings.isAutoPlayEnabled || !data.length) {\n            console.log(\"❌ Arc highlighting disabled\");\n            // Reset to full opacity when animation is disabled\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            return;\n        }\n        const animate = ()=>{\n            if (!animationRef.current.running || animationRef.current.isPaused) return;\n            // Safety check: prevent infinite loops\n            if (animationRef.current.cycleCount > 1000) {\n                console.log(\"\\uD83D\\uDED1 Chord animation cycle limit reached, resetting\");\n                animationRef.current.cycleCount = 0;\n                animationRef.current.currentIndex = 0;\n                animationRef.current.currentSide = \"left\";\n            }\n            // Get current data context (this will adapt to mode changes)\n            const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n            // Define all possible categories for each field (not just those with data)\n            const allCategories = {\n                years_at_medtronic: [\n                    \"0-5\",\n                    \"6-10\",\n                    \"11-15\",\n                    \"16-20\",\n                    \"20+\"\n                ],\n                learning_style: [\n                    \"visual\",\n                    \"auditory\",\n                    \"kinesthetic\",\n                    \"reading_writing\"\n                ],\n                shaped_by: [\n                    \"mentor\",\n                    \"challenge\",\n                    \"failure\",\n                    \"success\",\n                    \"team\",\n                    \"other\"\n                ],\n                peak_performance: [\n                    \"Extrovert, Morning\",\n                    \"Extrovert, Evening\",\n                    \"Introvert, Morning\",\n                    \"Introvert, Night\",\n                    \"Ambivert, Morning\",\n                    \"Ambivert, Night\"\n                ],\n                motivation: [\n                    \"impact\",\n                    \"growth\",\n                    \"recognition\",\n                    \"autonomy\",\n                    \"purpose\"\n                ]\n            };\n            const leftValues = allCategories[currentSource] || [];\n            const rightValues = allCategories[currentTarget] || [];\n            const currentSideLength = animationRef.current.currentSide === \"left\" ? leftValues.length : rightValues.length;\n            // Safety check: if current index is out of bounds for new mode, reset to 0\n            if (animationRef.current.currentIndex >= currentSideLength) {\n                animationRef.current.currentIndex = 0;\n            }\n            // Debug: Log the current animation state for dev tools\n            console.log(\"[ChordAnimation] Side:\", animationRef.current.currentSide, \"Index:\", animationRef.current.currentIndex, \"Total on side:\", currentSideLength, \"Mode:\", currentSource + \" → \" + currentTarget);\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(animationRef.current.currentIndex);\n            setHighlightedSide(animationRef.current.currentSide);\n            const highlightedCategory = animationRef.current.currentSide === \"left\" ? leftValues[animationRef.current.currentIndex] : rightValues[animationRef.current.currentIndex];\n            // Check if this category has data\n            const hasData = filteredData.some((d)=>{\n                if (animationRef.current.currentSide === \"left\") {\n                    if (currentSource === \"years_at_medtronic\") {\n                        return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                    }\n                    return d[currentSource] === highlightedCategory;\n                } else {\n                    if (currentTarget === \"years_at_medtronic\") {\n                        return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                    }\n                    return d[currentTarget] === highlightedCategory;\n                }\n            });\n            console.log(\"✨ Highlighting full relationship chain for:\", {\n                sourceCategory: highlightedCategory,\n                sourceSide: animationRef.current.currentSide,\n                sourceIndex: animationRef.current.currentIndex,\n                hasData: hasData,\n                totalCategories: currentSideLength\n            });\n            // Calculate timing based on global settings - slower for better visibility\n            const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n            const pauseDuration = Math.max(300, stepDuration / 5);\n            // Move to next position - include the last index before switching\n            if (animationRef.current.currentIndex < currentSideLength - 1) {\n                animationRef.current.timer = setTimeout(()=>{\n                    if (animationRef.current.running && !animationRef.current.isPaused) {\n                        animationRef.current.currentIndex++;\n                        animate();\n                    }\n                }, stepDuration + pauseDuration);\n            } else {\n                // Show the last index for the full duration before switching\n                animationRef.current.timer = setTimeout(()=>{\n                    if (animationRef.current.running && !animationRef.current.isPaused) {\n                        // Now switch sides or complete cycle\n                        if (animationRef.current.currentSide === \"left\") {\n                            animationRef.current.currentSide = \"right\";\n                            animationRef.current.currentIndex = 0;\n                            animate();\n                        } else {\n                            // Complete cycle - show full diagram briefly, then restart\n                            animationRef.current.cycleCount++;\n                            const nextModeIndex = (currentModeIndex + 1) % _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.length;\n                            console.log(\"\\uD83C\\uDF89 ChordAnimation completed full cycle #\" + animationRef.current.cycleCount + \"! Advancing to mode\", nextModeIndex, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex]);\n                            setAnimationPhase(\"full\");\n                            setHighlightedArcIndex(null);\n                            setHighlightedSide(null);\n                            setTimeout(()=>{\n                                setCurrentModeIndex(nextModeIndex);\n                                setCurrentSource(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source);\n                                setCurrentTarget(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                setLastCategoryChange({\n                                    source: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source,\n                                    target: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target\n                                });\n                                onRelationshipChange?.(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                            // Animation will restart due to dependency on currentSource/currentTarget\n                            }, stepDuration * 2);\n                        }\n                    }\n                }, stepDuration + pauseDuration);\n            }\n        };\n        // Start animation if not already running\n        if (!animationRef.current.running) {\n            console.log(\"✅ Starting ChordDiagram arc highlighting animation\");\n            animationRef.current.running = true;\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.isPaused = false;\n            animate();\n        } else {\n            console.log(\"⚠️ Arc highlighting animation already running\");\n        }\n        return ()=>{\n            console.log(\"\\uD83E\\uDDF9 Cleaning up ChordDiagram arc highlighting animation\");\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            animationRef.current.running = false;\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        settings.autoPlaySpeed,\n        settings.useTestData\n    ]); // Removed currentSource, currentTarget to prevent restarting\n    // Restart animation when mode changes (but only if not paused)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (autoPlay && settings.isAutoPlayEnabled && data.length && !animationRef.current.isPaused) {\n            console.log(\"\\uD83D\\uDD04 Mode changed, restarting animation with new mode:\", currentSource + \" → \" + currentTarget);\n            // Reset animation state for new mode\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.cycleCount = 0;\n            // Clear any existing timer\n            if (animationRef.current.timer) {\n                clearTimeout(animationRef.current.timer);\n                animationRef.current.timer = null;\n            }\n            // Restart animation if it was running\n            if (animationRef.current.running) {\n                // Call animate function directly to restart with new mode\n                const animate = ()=>{\n                    if (!animationRef.current.running || animationRef.current.isPaused) return;\n                    // Safety check: prevent infinite loops\n                    if (animationRef.current.cycleCount > 1000) {\n                        console.log(\"\\uD83D\\uDED1 Chord animation cycle limit reached, resetting\");\n                        animationRef.current.cycleCount = 0;\n                        animationRef.current.currentIndex = 0;\n                        animationRef.current.currentSide = \"left\";\n                    }\n                    // Get current data context (this will adapt to mode changes)\n                    const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n                    // Define all possible categories for each field (not just those with data)\n                    const allCategories = {\n                        years_at_medtronic: [\n                            \"0-5\",\n                            \"6-10\",\n                            \"11-15\",\n                            \"16-20\",\n                            \"20+\"\n                        ],\n                        learning_style: [\n                            \"visual\",\n                            \"auditory\",\n                            \"kinesthetic\",\n                            \"reading_writing\"\n                        ],\n                        shaped_by: [\n                            \"mentor\",\n                            \"challenge\",\n                            \"failure\",\n                            \"success\",\n                            \"team\",\n                            \"other\"\n                        ],\n                        peak_performance: [\n                            \"Extrovert, Morning\",\n                            \"Extrovert, Evening\",\n                            \"Introvert, Morning\",\n                            \"Introvert, Night\",\n                            \"Ambivert, Morning\",\n                            \"Ambivert, Night\"\n                        ],\n                        motivation: [\n                            \"impact\",\n                            \"growth\",\n                            \"recognition\",\n                            \"autonomy\",\n                            \"purpose\"\n                        ]\n                    };\n                    const leftValues = allCategories[currentSource] || [];\n                    const rightValues = allCategories[currentTarget] || [];\n                    const currentSideLength = animationRef.current.currentSide === \"left\" ? leftValues.length : rightValues.length;\n                    // Safety check: if current index is out of bounds for new mode, reset to 0\n                    if (animationRef.current.currentIndex >= currentSideLength) {\n                        animationRef.current.currentIndex = 0;\n                    }\n                    // Debug: Log the current animation state for dev tools\n                    console.log(\"[ChordAnimation] Side:\", animationRef.current.currentSide, \"Index:\", animationRef.current.currentIndex, \"Total on side:\", currentSideLength, \"Mode:\", currentSource + \" → \" + currentTarget);\n                    setAnimationPhase(\"highlighting\");\n                    setHighlightedArcIndex(animationRef.current.currentIndex);\n                    setHighlightedSide(animationRef.current.currentSide);\n                    const highlightedCategory = animationRef.current.currentSide === \"left\" ? leftValues[animationRef.current.currentIndex] : rightValues[animationRef.current.currentIndex];\n                    // Check if this category has data\n                    const hasData = filteredData.some((d)=>{\n                        if (animationRef.current.currentSide === \"left\") {\n                            if (currentSource === \"years_at_medtronic\") {\n                                return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                            }\n                            return d[currentSource] === highlightedCategory;\n                        } else {\n                            if (currentTarget === \"years_at_medtronic\") {\n                                return (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === highlightedCategory;\n                            }\n                            return d[currentTarget] === highlightedCategory;\n                        }\n                    });\n                    console.log(\"✨ Highlighting full relationship chain for:\", {\n                        sourceCategory: highlightedCategory,\n                        sourceSide: animationRef.current.currentSide,\n                        sourceIndex: animationRef.current.currentIndex,\n                        hasData: hasData,\n                        totalCategories: currentSideLength\n                    });\n                    // Calculate timing based on global settings - slower for better visibility\n                    const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n                    const pauseDuration = Math.max(300, stepDuration / 5);\n                    // Move to next position - include the last index before switching\n                    if (animationRef.current.currentIndex < currentSideLength - 1) {\n                        animationRef.current.timer = setTimeout(()=>{\n                            if (animationRef.current.running && !animationRef.current.isPaused) {\n                                animationRef.current.currentIndex++;\n                                animate();\n                            }\n                        }, stepDuration + pauseDuration);\n                    } else {\n                        // Show the last index for the full duration before switching\n                        animationRef.current.timer = setTimeout(()=>{\n                            if (animationRef.current.running && !animationRef.current.isPaused) {\n                                // Now switch sides or complete cycle\n                                if (animationRef.current.currentSide === \"left\") {\n                                    animationRef.current.currentSide = \"right\";\n                                    animationRef.current.currentIndex = 0;\n                                    animate();\n                                } else {\n                                    // Complete cycle - show full diagram briefly, then restart\n                                    animationRef.current.cycleCount++;\n                                    const nextModeIndex = (currentModeIndex + 1) % _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes.length;\n                                    console.log(\"\\uD83C\\uDF89 ChordAnimation completed full cycle #\" + animationRef.current.cycleCount + \"! Advancing to mode\", nextModeIndex, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex]);\n                                    setAnimationPhase(\"full\");\n                                    setHighlightedArcIndex(null);\n                                    setHighlightedSide(null);\n                                    setTimeout(()=>{\n                                        setCurrentModeIndex(nextModeIndex);\n                                        setCurrentSource(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source);\n                                        setCurrentTarget(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                        setLastCategoryChange({\n                                            source: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source,\n                                            target: _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target\n                                        });\n                                        onRelationshipChange?.(_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].source, _shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.cyclingModes[nextModeIndex].target);\n                                    // Animation will restart due to dependency on currentSource/currentTarget\n                                    }, stepDuration * 2);\n                                }\n                            }\n                        }, stepDuration + pauseDuration);\n                    }\n                };\n                animate();\n            }\n        }\n    }, [\n        currentSource,\n        currentTarget,\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        settings.autoPlaySpeed,\n        settings.useTestData,\n        currentModeIndex\n    ]);\n    // Secondary chord animation system\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!autoPlay || !settings.isAutoPlayEnabled || !data.length || !showSecondaryChord) {\n            // Stop animation if conditions not met\n            console.log(\"\\uD83D\\uDED1 Stopping secondary chord animation:\", {\n                autoPlay,\n                isAutoPlayEnabled: settings.isAutoPlayEnabled,\n                hasData: data.length > 0,\n                showSecondaryChord\n            });\n            if (secondaryAnimationRef.current.timer) {\n                clearTimeout(secondaryAnimationRef.current.timer);\n                secondaryAnimationRef.current.timer = null;\n            }\n            secondaryAnimationRef.current.running = false;\n            return;\n        }\n        const animateSecondary = ()=>{\n            if (!secondaryAnimationRef.current.running || secondaryAnimationRef.current.isPaused) return;\n            // Get secondary chord data context first\n            const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n            const secondaryData = filteredData.filter((d)=>d.peak_performance);\n            const yearsCategories = [\n                \"0-5\",\n                \"6-10\",\n                \"11-15\",\n                \"16-20\",\n                \"20+\"\n            ];\n            const peakPerfCategories = Array.from(new Set(secondaryData.map((d)=>d.peak_performance))).filter(Boolean).sort();\n            const allCategories = [\n                ...yearsCategories,\n                ...peakPerfCategories\n            ];\n            const currentSideLength = secondaryAnimationRef.current.currentSide === \"left\" ? yearsCategories.length : peakPerfCategories.length;\n            // Safety check: if current index is out of bounds, reset to 0\n            if (secondaryAnimationRef.current.currentIndex >= currentSideLength) {\n                secondaryAnimationRef.current.currentIndex = 0;\n            }\n            console.log(\"\\uD83C\\uDFAF SecondaryChord arc animation:\", {\n                side: secondaryAnimationRef.current.currentSide,\n                index: secondaryAnimationRef.current.currentIndex\n            });\n            setSecondaryAnimationPhase(\"highlighting\");\n            // Calculate the actual arc index based on side and position\n            const actualArcIndex = secondaryAnimationRef.current.currentSide === \"left\" ? secondaryAnimationRef.current.currentIndex // Left side: direct index (0-4)\n             : yearsCategories.length + secondaryAnimationRef.current.currentIndex; // Right side: offset by years count\n            setSecondaryHighlightedArcIndex(actualArcIndex);\n            setSecondaryHighlightedSide(secondaryAnimationRef.current.currentSide);\n            // Calculate timing based on global settings - slower for better visibility\n            const stepDuration = Math.max(1500, (settings.autoPlaySpeed || 3000) / 3);\n            const pauseDuration = Math.max(300, stepDuration / 5);\n            // Move to next position - include the last index before switching\n            if (secondaryAnimationRef.current.currentIndex < currentSideLength - 1) {\n                secondaryAnimationRef.current.timer = setTimeout(()=>{\n                    if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                        secondaryAnimationRef.current.currentIndex++;\n                        animateSecondary();\n                    }\n                }, stepDuration + pauseDuration);\n            } else {\n                // Show the last index for the full duration before switching\n                secondaryAnimationRef.current.timer = setTimeout(()=>{\n                    if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                        // Now switch sides or complete cycle\n                        if (secondaryAnimationRef.current.currentSide === \"left\") {\n                            secondaryAnimationRef.current.currentSide = \"right\";\n                            secondaryAnimationRef.current.currentIndex = 0;\n                            animateSecondary();\n                        } else {\n                            // Complete cycle - show full diagram briefly, then restart\n                            console.log(\"\\uD83C\\uDF89 SecondaryChordAnimation completed full cycle! Restarting...\");\n                            setSecondaryAnimationPhase(\"full\");\n                            setSecondaryHighlightedArcIndex(null);\n                            setSecondaryHighlightedSide(null);\n                            secondaryAnimationRef.current.timer = setTimeout(()=>{\n                                if (secondaryAnimationRef.current.running && !secondaryAnimationRef.current.isPaused) {\n                                    secondaryAnimationRef.current.currentSide = \"left\";\n                                    secondaryAnimationRef.current.currentIndex = 0;\n                                    animateSecondary();\n                                }\n                            }, stepDuration * 2);\n                        }\n                    }\n                }, stepDuration + pauseDuration);\n            }\n        };\n        // Start animation if not already running\n        if (!secondaryAnimationRef.current.running) {\n            console.log(\"✅ Starting SecondaryChord arc highlighting animation\");\n            secondaryAnimationRef.current.running = true;\n            secondaryAnimationRef.current.currentIndex = 0;\n            secondaryAnimationRef.current.currentSide = \"left\";\n            secondaryAnimationRef.current.isPaused = false;\n            animateSecondary();\n        } else {\n            console.log(\"⚠️ Secondary arc highlighting animation already running\");\n        }\n        return ()=>{\n            console.log(\"\\uD83E\\uDDF9 Cleaning up SecondaryChord arc highlighting animation\");\n            if (secondaryAnimationRef.current.timer) {\n                clearTimeout(secondaryAnimationRef.current.timer);\n                secondaryAnimationRef.current.timer = null;\n            }\n            secondaryAnimationRef.current.running = false;\n            setSecondaryAnimationPhase(\"full\");\n            setSecondaryHighlightedArcIndex(null);\n            setSecondaryHighlightedSide(null);\n        };\n    }, [\n        autoPlay,\n        settings.isAutoPlayEnabled,\n        data.length,\n        showSecondaryChord,\n        settings.autoPlaySpeed,\n        settings.useTestData\n    ]); // Removed currentSource, currentTarget to prevent restarting\n    // Re-render secondary chord when its animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (showSecondaryChord) {\n            renderSecondaryChord();\n        }\n    }, [\n        showSecondaryChord,\n        data,\n        settings.useTestData,\n        settings.isDarkMode\n    ]);\n    // Update visual styling of existing main chord elements when animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Update left arcs opacity and stroke based on animation state\n        svg.selectAll(\"path.left-arc\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\") {\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other left arcs\n                }\n            }\n            return 0.8; // Default opacity\n        }).style(\"stroke-width\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return 3;\n                }\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Update right arcs opacity and stroke based on animation state\n        svg.selectAll(\"path.right-arc\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\") {\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other right arcs\n                }\n            }\n            return 0.8; // Default opacity\n        }).style(\"stroke-width\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return 3;\n                }\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // Update ribbons opacity and stroke based on animation state\n        svg.selectAll(\"path.ribbon\").transition().duration(300).style(\"opacity\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                if (highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n    }, [\n        animationPhase,\n        highlightedArcIndex,\n        highlightedSide,\n        settings.isDarkMode\n    ]);\n    // Update visual styling of existing secondary chord elements when animation state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!secondarySvgRef.current || !showSecondaryChord) return;\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(secondarySvgRef.current);\n        // Update secondary chord elements based on their animation state\n        svg.selectAll(\"path.chord-group\").transition().duration(300).style(\"opacity\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === i) {\n                    return 1.0; // Source arc is fully highlighted\n                }\n                return 0.4; // Dim other arcs\n            }\n            return 0.8;\n        }).style(\"stroke-width\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return 3;\n            }\n            return 1;\n        }).style(\"stroke\", (d, i)=>{\n            if (secondaryAnimationPhase === \"highlighting\" && secondaryHighlightedArcIndex === i) {\n                return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n            }\n            return \"none\";\n        });\n        svg.selectAll(\"path.chord\").transition().duration(300).style(\"opacity\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons\n            }\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).style(\"stroke-width\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return 2.5;\n                }\n            }\n            return 0.5;\n        }).style(\"stroke\", (d)=>{\n            if (secondaryAnimationPhase === \"highlighting\") {\n                if (secondaryHighlightedArcIndex === d.source.index || secondaryHighlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n    }, [\n        secondaryAnimationPhase,\n        secondaryHighlightedArcIndex,\n        secondaryHighlightedSide,\n        settings.isDarkMode,\n        showSecondaryChord\n    ]);\n    // Remove conflicting opacity update system - opacity will be handled in main rendering\n    // Add pause/resume functionality\n    const pauseAnimation = (reason)=>{\n        console.log(\"⏸️ Pausing animation:\", reason);\n        animationRef.current.isPaused = true;\n        secondaryAnimationRef.current.isPaused = true;\n        if (animationRef.current.timer) {\n            clearTimeout(animationRef.current.timer);\n            animationRef.current.timer = null;\n        }\n        if (secondaryAnimationRef.current.timer) {\n            clearTimeout(secondaryAnimationRef.current.timer);\n            secondaryAnimationRef.current.timer = null;\n        }\n    };\n    const resumeAnimation = (reason)=>{\n        console.log(\"▶️ Resuming animation:\", reason);\n        animationRef.current.isPaused = false;\n        secondaryAnimationRef.current.isPaused = false;\n        // Ensure animation state is properly reset\n        if (!animationRef.current.running) {\n            console.log(\"\\uD83D\\uDD04 Restarting chord animation after resume\");\n            animationRef.current.running = true;\n            animationRef.current.currentIndex = 0;\n            animationRef.current.currentSide = \"left\";\n            animationRef.current.cycleCount = 0;\n        }\n    // The mode change useEffect will automatically restart the animation\n    // when isPaused becomes false and mode changes\n    };\n    // Check if container is too small - reduced minimum size for better compatibility\n    const margin = {\n        top: 80,\n        right: 80,\n        bottom: 100,\n        left: 80\n    };\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n    const isContainerTooSmall = chartWidth < 100 || chartHeight < 100; // Reduced from 200x200 to 100x100\n    // Render circular chord diagram\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current || !data.length || isLoading || isContainerTooSmall) return;\n        // Clear previous content\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        // Filter data based on global settings\n        const filteredData = settings.useTestData ? data : data.filter((item)=>!item.test_data);\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current);\n        // Adjust size based on whether we're showing two chords\n        const effectiveWidth = showSecondaryChord ? width * 0.45 : width;\n        const effectiveHeight = showSecondaryChord ? height * 0.8 : height * 0.85;\n        const effectiveChartWidth = effectiveWidth - margin.left - margin.right;\n        const effectiveChartHeight = effectiveHeight - margin.top - margin.bottom;\n        const radius = Math.max(120, Math.min(effectiveChartWidth, effectiveChartHeight) / 2 - 60);\n        // Create definitions for gradients\n        const defs = svg.append(\"defs\");\n        // Define fixed order for years at Medtronic\n        const YEARS_GROUPS = [\n            \"0-5\",\n            \"6-10\",\n            \"11-15\",\n            \"16-20\",\n            \"20+\"\n        ];\n        // Get unique values for left and right sides, using fixed order for years\n        const leftValues = currentSource === \"years_at_medtronic\" ? YEARS_GROUPS : Array.from(new Set(filteredData.map((d)=>d[currentSource]))).filter(Boolean);\n        const rightValues = currentTarget === \"years_at_medtronic\" ? YEARS_GROUPS : Array.from(new Set(filteredData.map((d)=>d[currentTarget]))).filter(Boolean);\n        // Process data for chord layout\n        const chordData = (0,_shared_chordUtils__WEBPACK_IMPORTED_MODULE_5__.processChordData)(filteredData, currentSource, currentTarget, settings.categoryColors[settings.isDarkMode ? \"dark\" : \"light\"]);\n        // Separate source and target categories\n        const sourceCategories = new Set();\n        const targetCategories = new Set();\n        filteredData.forEach((d)=>{\n            if (currentSource === \"years_at_medtronic\") {\n                sourceCategories.add((0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0));\n            } else {\n                sourceCategories.add(d[currentSource] || \"Unknown\");\n            }\n            if (currentTarget === \"years_at_medtronic\") {\n                targetCategories.add((0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0));\n            } else {\n                targetCategories.add(d[currentTarget] || \"Unknown\");\n            }\n        });\n        // Convert to arrays and sort\n        const sourceArray = Array.from(sourceCategories).sort();\n        const targetArray = Array.from(targetCategories).sort();\n        // Calculate totals for each category\n        const leftTotals = sourceArray.map((cat)=>filteredData.filter((d)=>{\n                const value = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                return value === cat;\n            }).length);\n        const rightTotals = targetArray.map((cat)=>filteredData.filter((d)=>{\n                const value = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                return value === cat;\n            }).length);\n        const leftTotalSum = leftTotals.reduce((sum, val)=>sum + val, 0);\n        const rightTotalSum = rightTotals.reduce((sum, val)=>sum + val, 0);\n        // Create connection matrix\n        const connectionMatrix = sourceArray.map((sourceCat)=>targetArray.map((targetCat)=>{\n                return filteredData.filter((d)=>{\n                    const source = currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentSource];\n                    const target = currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) : d[currentTarget];\n                    return source === sourceCat && target === targetCat;\n                }).length;\n            }));\n        // Check if this is a category change that should trigger animation\n        const isCategoryChange = lastCategoryChange.source !== currentSource || lastCategoryChange.target !== currentTarget;\n        // Add smooth transitions - faster for hover interactions\n        const transition = d3__WEBPACK_IMPORTED_MODULE_2__.transition().duration(isCategoryChange ? 750 : 100).ease(d3__WEBPACK_IMPORTED_MODULE_2__.easeCubicInOut);\n        // --- True left/right bipartite layout with better spacing ---\n        // Left arcs: 180°+gap to 360°-gap (Math.PI+gap to 2*Math.PI-gap)\n        // Right arcs: 0+gap to 180°-gap (0+gap to Math.PI-gap)\n        const arcGap = Math.PI * 0.12; // Larger gap for better label spacing\n        const leftStart = Math.PI + arcGap; // 180° + gap\n        const leftEnd = 2 * Math.PI - arcGap; // 360° - gap\n        const rightStart = 0 + arcGap; // 0° + gap\n        const rightEnd = Math.PI - arcGap; // 180° - gap\n        const leftArcSpan = leftEnd - leftStart; // 180° - 2*gap\n        const rightArcSpan = rightEnd - rightStart; // 180° - 2*gap\n        // Add minimum spacing between arcs to prevent label overlap\n        const minArcSpacing = Math.PI * 0.02; // Minimum 2° between arcs\n        // Assign arc angles for left arcs with proper spacing\n        let leftAngle = leftStart;\n        const leftArcs = leftValues.map((value, i)=>{\n            const count = filteredData.filter((d)=>currentSource === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === value : d[currentSource] === value).length;\n            // Calculate arc span with spacing consideration\n            const availableSpan = leftArcSpan - minArcSpacing * (leftValues.length - 1);\n            const arcSpan = currentSource === \"years_at_medtronic\" ? availableSpan / leftValues.length : Math.max(minArcSpacing, availableSpan * (count / (leftTotalSum || 1)));\n            const startAngle = leftAngle;\n            const endAngle = leftAngle + arcSpan;\n            leftAngle = endAngle + minArcSpacing; // Add spacing between arcs\n            const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getNodeColor)({\n                category: currentSource,\n                name: value\n            }, settings.categoryColors[settings.isDarkMode ? \"dark\" : \"light\"], settings.isDarkMode);\n            const opacity = count === 0 ? 0.15 : 0.8;\n            return {\n                name: value,\n                value: count,\n                startAngle,\n                endAngle,\n                color,\n                opacity\n            };\n        });\n        // Assign arc angles for right arcs with proper spacing\n        let rightAngle = rightStart;\n        const rightArcs = rightValues.map((value, i)=>{\n            const count = filteredData.filter((d)=>currentTarget === \"years_at_medtronic\" ? (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getYearsCategory)(d.years_at_medtronic || 0) === value : d[currentTarget] === value).length;\n            // Calculate arc span with spacing consideration\n            const availableSpan = rightArcSpan - minArcSpacing * (rightValues.length - 1);\n            const arcSpan = currentTarget === \"years_at_medtronic\" ? availableSpan / rightValues.length : Math.max(minArcSpacing, availableSpan * (count / (rightTotalSum || 1)));\n            const startAngle = rightAngle;\n            const endAngle = rightAngle + arcSpan;\n            rightAngle = endAngle + minArcSpacing; // Add spacing between arcs\n            const color = (0,_shared_colorUtils__WEBPACK_IMPORTED_MODULE_8__.getNodeColor)({\n                category: currentTarget,\n                name: value\n            }, settings.categoryColors[settings.isDarkMode ? \"dark\" : \"light\"], settings.isDarkMode);\n            const opacity = count === 0 ? 0.15 : 0.8;\n            return {\n                name: value,\n                value: count,\n                startAngle,\n                endAngle,\n                color,\n                opacity\n            };\n        });\n        // Draw arcs (use per-arc opacity)\n        const innerRadius = Math.max(60, radius * 0.75);\n        const outerRadius = Math.max(80, radius * 0.95);\n        const arcGen = d3__WEBPACK_IMPORTED_MODULE_2__.arc().innerRadius(innerRadius).outerRadius(outerRadius).cornerRadius((d)=>{\n            // Only round the outer corners (outerRadius), not the inner\n            // D3 v7+ supports cornerRadius as a function\n            // We'll return 0 for inner, 8 for outer\n            // But d3.arc() only supports one value, so we need to use custom path if we want true squared inner corners\n            // As a workaround, set cornerRadius to 0 if the arc is small, else 8\n            return 0;\n        });\n        // Position the chart group with margins to prevent cropping\n        const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left + effectiveChartWidth / 2}, ${margin.top + effectiveChartHeight / 2})`);\n        // Add gradients for arcs\n        leftArcs.forEach((arc, i)=>{\n            const baseColor = arc.color;\n            const lighterColor = d3__WEBPACK_IMPORTED_MODULE_2__.color(baseColor)?.brighter(0.3).toString() || baseColor;\n            defs.append(\"linearGradient\").attr(\"id\", `left-arc-gradient-${i}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", 1).selectAll(\"stop\").data([\n                {\n                    offset: \"0%\",\n                    color: baseColor\n                },\n                {\n                    offset: \"100%\",\n                    color: lighterColor\n                }\n            ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n        });\n        rightArcs.forEach((arc, i)=>{\n            const baseColor = arc.color;\n            const lighterColor = d3__WEBPACK_IMPORTED_MODULE_2__.color(baseColor)?.brighter(0.3).toString() || baseColor;\n            defs.append(\"linearGradient\").attr(\"id\", `right-arc-gradient-${i}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", 1).selectAll(\"stop\").data([\n                {\n                    offset: \"0%\",\n                    color: baseColor\n                },\n                {\n                    offset: \"100%\",\n                    color: lighterColor\n                }\n            ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n        });\n        // Create left arcs with event handlers first\n        const leftArcSelection = g.selectAll(\"path.left-arc\").data(leftArcs).enter().append(\"path\").attr(\"class\", \"left-arc\").attr(\"d\", (d)=>arcGen({\n                startAngle: d.startAngle,\n                endAngle: d.endAngle\n            })).attr(\"fill\", (d, i)=>`url(#left-arc-gradient-${i})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"left arc hover\");\n            // Trigger the same highlighting as auto-cycle animation\n            const arcIndex = leftArcs.findIndex((arc)=>arc.name === d.name);\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(arcIndex);\n            setHighlightedSide(\"left\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: (d.name || \"Unknown\").toString().replace(/_/g, \" \")\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1344,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1345,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1343,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"left arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        leftArcSelection.transition(transition).attr(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\") {\n                    // Highlight the source arc\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    // Check if this arc is connected to the highlighted right arc\n                    if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                        return 0.4; // Dim other left arcs\n                    }\n                } else if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    // When right arc is highlighted, highlight left arcs connected to it\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    const isConnectedToHighlightedRight = matrixValue > 0;\n                    console.log(`🔗 Left arc ${i} (${leftArcs[i]?.name}) connected to right arc ${highlightedArcIndex} (${rightArcs[highlightedArcIndex]?.name})?`, isConnectedToHighlightedRight, \"Matrix value:\", matrixValue);\n                    return isConnectedToHighlightedRight ? 0.95 : 0.3; // Higher contrast\n                }\n            }\n            // Use stable base opacity without pulsing to prevent flickering\n            return Math.max(0.8, d.opacity);\n        }).attr(\"stroke-width\", (d, i)=>{\n            // Enhanced stroke for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return 3; // Thickest stroke for source arc\n                }\n                // Stroke for connected arcs when right side is highlighted\n                if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    if (matrixValue > 0) {\n                        return 2; // Medium stroke for connected arcs\n                    }\n                }\n            }\n            return 1;\n        }).attr(\"stroke\", (d, i)=>{\n            // Enhanced stroke color for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n                // Stroke for connected arcs when right side is highlighted\n                if (highlightedSide === \"right\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[i] && connectionMatrix[i][highlightedArcIndex];\n                    if (matrixValue > 0) {\n                        return settings.isDarkMode ? \"rgba(255,255,255,0.3)\" : \"rgba(0,0,0,0.2)\";\n                    }\n                }\n            }\n            return \"none\";\n        });\n        // Create right arcs with event handlers first\n        const rightArcSelection = g.selectAll(\"path.right-arc\").data(rightArcs).enter().append(\"path\").attr(\"class\", \"right-arc\").attr(\"d\", (d)=>arcGen({\n                startAngle: d.startAngle,\n                endAngle: d.endAngle\n            })).attr(\"fill\", (d, i)=>`url(#right-arc-gradient-${i})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"arc hover\");\n            // Trigger the same highlighting as auto-cycle animation\n            const arcIndex = rightArcs.findIndex((arc)=>arc.name === d.name);\n            console.log(\"\\uD83C\\uDFAF Hover triggering right arc highlighting:\", {\n                arcName: d.name,\n                arcIndex: arcIndex\n            });\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(arcIndex);\n            setHighlightedSide(\"right\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: (d.name || \"Unknown\").toString().replace(/_/g, \" \")\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1447,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1448,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1446,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"arc hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        rightArcSelection.transition(transition).attr(\"opacity\", (d, i)=>{\n            // Apply full relationship chain highlighting\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\") {\n                    // Highlight the source arc\n                    if (i === highlightedArcIndex) {\n                        return 1.0; // Source arc is fully highlighted\n                    }\n                    return 0.4; // Dim other right arcs\n                } else if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    // When left arc is highlighted, highlight right arcs connected to it\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    const isConnectedToHighlightedLeft = matrixValue > 0;\n                    console.log(`🔗 Right arc ${i} (${rightArcs[i]?.name}) connected to left arc ${highlightedArcIndex} (${leftArcs[highlightedArcIndex]?.name})?`, isConnectedToHighlightedLeft, \"Matrix value:\", matrixValue);\n                    return isConnectedToHighlightedLeft ? 0.95 : 0.3; // Higher contrast\n                }\n            }\n            // Use stable base opacity without pulsing to prevent flickering\n            return Math.max(0.8, d.opacity);\n        }).attr(\"stroke-width\", (d, i)=>{\n            // Enhanced stroke for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return 3; // Thickest stroke for source arc\n                }\n                // Stroke for connected arcs when left side is highlighted\n                if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    if (matrixValue > 0) {\n                        return 2; // Medium stroke for connected arcs\n                    }\n                }\n            }\n            return 1;\n        }).attr(\"stroke\", (d, i)=>{\n            // Enhanced stroke color for relationship chain\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"right\" && i === highlightedArcIndex) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n                // Stroke for connected arcs when left side is highlighted\n                if (highlightedSide === \"left\" && highlightedArcIndex !== null) {\n                    const matrixValue = connectionMatrix[highlightedArcIndex] && connectionMatrix[highlightedArcIndex][i];\n                    if (matrixValue > 0) {\n                        return settings.isDarkMode ? \"rgba(255,255,255,0.3)\" : \"rgba(0,0,0,0.2)\";\n                    }\n                }\n            }\n            return \"none\";\n        });\n        // Draw ribbons for connections (distributed along arc, proportional thickness)\n        // Use d3.ribbon() for each connection, but set the width by using the full segment for each connection\n        const ribbonRadius = Math.max(60, radius * 0.75); // Ensure minimum radius for ribbons\n        const ribbonGen = d3__WEBPACK_IMPORTED_MODULE_2__.ribbon().radius(ribbonRadius);\n        const connections = [];\n        for(let i = 0; i < sourceArray.length; i++){\n            for(let j = 0; j < targetArray.length; j++){\n                const value = connectionMatrix[i][j];\n                if (value > 0) {\n                    // Find the segment for this connection on both arcs\n                    const leftSeg = leftArcs[i];\n                    const rightSeg = rightArcs[j];\n                    // Compute arc midpoints for gradient direction\n                    const leftMidAngle = (leftSeg.startAngle + leftSeg.endAngle) / 2 - Math.PI / 2;\n                    const rightMidAngle = (rightSeg.startAngle + rightSeg.endAngle) / 2 - Math.PI / 2;\n                    const leftX = Math.cos(leftMidAngle) * ribbonRadius;\n                    const leftY = Math.sin(leftMidAngle) * ribbonRadius;\n                    const rightX = Math.cos(rightMidAngle) * ribbonRadius;\n                    const rightY = Math.sin(rightMidAngle) * ribbonRadius;\n                    // Add gradient for this ribbon\n                    const leftColor = leftArcs[i].color || d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10[i % 10];\n                    const rightColor = rightArcs[j].color || d3__WEBPACK_IMPORTED_MODULE_2__.schemeCategory10[(j + 5) % 10];\n                    defs.append(\"linearGradient\").attr(\"id\", `ribbon-gradient-${i}-${j}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", leftX).attr(\"y1\", leftY).attr(\"x2\", rightX).attr(\"y2\", rightY).selectAll(\"stop\").data([\n                        {\n                            offset: \"0%\",\n                            color: leftColor\n                        },\n                        {\n                            offset: \"100%\",\n                            color: rightColor\n                        }\n                    ]).enter().append(\"stop\").attr(\"offset\", (d)=>d.offset).attr(\"stop-color\", (d)=>d.color);\n                    connections.push({\n                        source: {\n                            startAngle: leftSeg.startAngle,\n                            endAngle: leftSeg.endAngle,\n                            index: i\n                        },\n                        target: {\n                            startAngle: rightSeg.startAngle,\n                            endAngle: rightSeg.endAngle,\n                            index: j\n                        },\n                        value,\n                        left: leftArcs[i],\n                        right: rightArcs[j],\n                        gradientId: `ribbon-gradient-${i}-${j}`\n                    });\n                }\n            }\n        }\n        // Create ribbons with event handlers first\n        const ribbonSelection = g.selectAll(\"path.ribbon\").data(connections).enter().append(\"path\").attr(\"class\", \"ribbon\").attr(\"d\", function(d) {\n            const path = ribbonGen({\n                source: d.source,\n                target: d.target\n            });\n            return typeof path === \"string\" ? path : \"\";\n        }).attr(\"fill\", (d)=>`url(#${d.gradientId})`).attr(\"opacity\", 0).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"ribbon hover\");\n            // Trigger highlighting for the source side of this ribbon (same as auto-cycle)\n            console.log(\"\\uD83C\\uDFAF Hover triggering ribbon highlighting:\", {\n                leftArcName: d.left.name,\n                rightArcName: d.right.name,\n                sourceIndex: d.source.index,\n                targetIndex: d.target.index\n            });\n            setAnimationPhase(\"highlighting\");\n            setHighlightedArcIndex(d.source.index);\n            setHighlightedSide(\"left\");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: [\n                                (d.left.name || \"Unknown\").toString().replace(/_/g, \" \"),\n                                \" ↔ \",\n                                (d.right.name || \"Unknown\").toString().replace(/_/g, \" \")\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1606,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Connections: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1609,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1605,\n                    columnNumber: 13\n                }, this)\n            });\n        }).on(\"mouseleave\", function(event, d) {\n            resumeAnimation(\"ribbon hover end\");\n            setTooltip(null);\n            // Reset highlighting when animation resumes\n            setAnimationPhase(\"full\");\n            setHighlightedArcIndex(null);\n            setHighlightedSide(null);\n        });\n        // Apply transition animations separately\n        ribbonSelection.transition(transition).attr(\"opacity\", (d)=>{\n            // Highlight ribbons connected to highlighted arcs with enhanced visibility\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                if (highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 0.95; // Make connected ribbons very prominent\n                }\n                return 0.2; // Dim non-connected ribbons more for better contrast\n            }\n            // Use stable base opacity without pulsing\n            return settings.isDarkMode ? 0.7 : 0.6;\n        }).attr(\"stroke-width\", (d)=>{\n            // Enhanced stroke for highlighted ribbons to show connections clearly\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return 2.5; // Slightly thicker for better visibility\n                }\n            }\n            return 0.5;\n        }).attr(\"stroke\", (d)=>{\n            // Enhanced stroke color for highlighted connections\n            if (animationPhase === \"highlighting\") {\n                if (highlightedSide === \"left\" && highlightedArcIndex === d.source.index || highlightedSide === \"right\" && highlightedArcIndex === d.target.index) {\n                    return settings.isDarkMode ? \"rgba(255,255,255,0.4)\" : \"rgba(0,0,0,0.3)\";\n                }\n            }\n            return \"none\";\n        });\n        // --- Label placement: properly spaced around circle ---\n        const labelRadius = Math.max(120, radius * 1.45); // Even more space for full text labels\n        const labelGroup = svg.append(\"g\").attr(\"transform\", `translate(${margin.left + effectiveChartWidth / 2}, ${margin.top + effectiveChartHeight / 2})`);\n        // Combine all arcs for unified label placement\n        const allArcs = [\n            ...leftArcs.map((arc)=>({\n                    ...arc,\n                    side: \"left\"\n                })),\n            ...rightArcs.map((arc)=>({\n                    ...arc,\n                    side: \"right\"\n                }))\n        ];\n        // Add labels with smart positioning to avoid overlap\n        labelGroup.selectAll(\"text.arc-label\").data(allArcs).enter().append(\"text\").attr(\"class\", \"arc-label\").attr(\"transform\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            const x = labelRadius * Math.cos(angle);\n            const y = labelRadius * Math.sin(angle);\n            const rotation = angle * 180 / Math.PI;\n            // Rotate text for better readability\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return `translate(${x}, ${y}) rotate(${rotation + 180})`;\n            } else {\n                return `translate(${x}, ${y}) rotate(${rotation})`;\n            }\n        }).attr(\"text-anchor\", (d)=>{\n            const angle = (d.startAngle + d.endAngle) / 2 - Math.PI / 2;\n            if (angle > Math.PI / 2 || angle < -Math.PI / 2) {\n                return \"end\";\n            } else {\n                return \"start\";\n            }\n        }).attr(\"alignment-baseline\", \"middle\").style(\"font-family\", labelFontFamily).style(\"font-weight\", labelFontWeight).style(\"font-size\", (d)=>{\n            // Dynamic font size based on number of labels - larger since we're showing full text\n            const totalLabels = allArcs.length;\n            if (totalLabels > 12) return \"13px\";\n            if (totalLabels > 10) return \"14px\";\n            if (totalLabels > 8) return \"15px\";\n            return `${Math.max(16, labelFontSize)}px`;\n        }).style(\"fill\", labelColor).style(\"text-transform\", \"uppercase\").text((d)=>{\n            const text = (d.name || \"Unknown\").toString().replace(/_/g, \" \");\n            // Show full text - no truncation\n            return text;\n        }).on(\"mouseenter\", function(event, d) {\n            pauseAnimation(\"label hover\");\n            const fullText = (d.name || \"Unknown\").toString().replace(/_/g, \" \");\n            setTooltip({\n                x: event.pageX,\n                y: event.pageY,\n                content: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                fontWeight: \"bold\",\n                                marginBottom: 4\n                            },\n                            children: fullText\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1722,\n                            columnNumber: 16\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Count: \",\n                                d.value\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1723,\n                            columnNumber: 16\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                \"Side: \",\n                                d.side\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1724,\n                            columnNumber: 16\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                    lineNumber: 1721,\n                    columnNumber: 14\n                }, this)\n            });\n        }).on(\"mouseleave\", ()=>{\n            resumeAnimation(\"label hover end\");\n            setTooltip(null);\n        });\n        // Update insights\n        const totalConnections = connections.reduce((sum, d)=>sum + d.value, 0);\n        const strongestConnection = connections.length > 0 ? connections.reduce((max, d)=>d.value > max.value ? d : max, connections[0]) : null;\n        setInsights([\n            {\n                title: \"Total Responses\",\n                value: filteredData.length.toString()\n            },\n            {\n                title: \"Current View\",\n                value: `${currentSource} ↔ ${currentTarget}`\n            },\n            strongestConnection ? {\n                title: \"Strongest Connection\",\n                value: `${strongestConnection.left.name || \"Unknown\"} ↔ ${strongestConnection.right.name || \"Unknown\"}`,\n                description: `${strongestConnection.value} connections`\n            } : {\n                title: \"Strongest Connection\",\n                value: \"No connections found\",\n                description: \"\"\n            },\n            {\n                title: \"Total Connections\",\n                value: totalConnections.toString()\n            }\n        ]);\n    }, [\n        data,\n        currentSource,\n        currentTarget,\n        settings.useTestData,\n        settings.categoryColors,\n        isLoading,\n        lastCategoryChange,\n        isContainerTooSmall,\n        chartWidth,\n        chartHeight,\n        showSecondaryChord,\n        settings.isDarkMode\n    ]);\n    // Render secondary chord when peak performance is involved\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (showSecondaryChord) {\n            renderSecondaryChord();\n        }\n    }, [\n        showSecondaryChord,\n        data,\n        settings.useTestData,\n        settings.isDarkMode,\n        labelColor\n    ]);\n    // Tooltip rendering\n    const tooltipEl = tooltip ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            left: tooltip.x + 16,\n            top: tooltip.y + 16,\n            background: \"rgba(20,20,30,0.98)\",\n            color: \"#fff\",\n            padding: \"10px 16px\",\n            borderRadius: 8,\n            pointerEvents: \"none\",\n            zIndex: 100,\n            fontFamily: \"Avenir Next World, sans-serif\",\n            fontWeight: 600,\n            fontSize: 16,\n            boxShadow: \"0 4px 24px 0 rgba(16, 16, 235, 0.12)\",\n            maxWidth: 320\n        },\n        role: \"tooltip\",\n        \"aria-live\": \"polite\",\n        children: tooltip.content\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n        lineNumber: 1763,\n        columnNumber: 5\n    }, this) : null;\n    // Apply theme based on global settings\n    const themeClass = settings.isDarkMode ? \"dark\" : \"\";\n    const backgroundColor = settings.isDarkMode ? \"#1a1a1a\" : \"#ffffff\";\n    const textColor = settings.isDarkMode ? \"#ffffff\" : \"#0A0A0F\";\n    // Handle case where container is too small\n    if (isContainerTooSmall) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: `w-full h-full flex items-center justify-center ${themeClass}`,\n            style: {\n                backgroundColor\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                style: {\n                    color: textColor\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg mb-2\",\n                        children: \"Container too small\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1797,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm opacity-70\",\n                        children: \"Minimum size: 100x100px\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1798,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1796,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n            lineNumber: 1795,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `w-full h-full flex flex-col items-center justify-center ${themeClass}`,\n        style: {\n            backgroundColor\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_GlobalControlsNav__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1806,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex flex-col items-center justify-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full flex flex-col items-center justify-center mb-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_QuestionSelector__WEBPACK_IMPORTED_MODULE_4__.QuestionSelector, {\n                            availableFields: availableFields,\n                            currentSource: currentSource,\n                            currentTarget: currentTarget,\n                            onChange: (source, target)=>{\n                                const corrected = ensureDifferentCategories(source, target);\n                                setCurrentSource(corrected.source);\n                                setCurrentTarget(corrected.target);\n                                setLastCategoryChange(corrected);\n                            }\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                            lineNumber: 1809,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1808,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full flex justify-center items-center relative\",\n                        style: {\n                            height: height * 0.85\n                        },\n                        children: [\n                            showSecondaryChord ? // Two-chord layout when peak performance is involved\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full flex justify-center items-center gap-16\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-col items-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-bold mb-4\",\n                                                style: {\n                                                    color: textColor\n                                                },\n                                                children: \"Main Relationships\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1829,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                ref: svgRef,\n                                                width: width * 0.45,\n                                                height: height * 0.8,\n                                                style: {\n                                                    display: \"block\",\n                                                    background: \"transparent\",\n                                                    color: textColor\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1832,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                        lineNumber: 1828,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-col items-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-bold mb-4\",\n                                                style: {\n                                                    color: textColor\n                                                },\n                                                children: \"Years \\xd7 Performance Types\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1840,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                ref: secondarySvgRef,\n                                                width: width * 0.45,\n                                                height: height * 0.8,\n                                                style: {\n                                                    display: \"block\",\n                                                    background: \"transparent\",\n                                                    color: textColor\n                                                }\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                                lineNumber: 1843,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                        lineNumber: 1839,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                lineNumber: 1827,\n                                columnNumber: 13\n                            }, this) : // Single chord layout when peak performance is not involved\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                ref: svgRef,\n                                width: width,\n                                height: height * 0.85,\n                                style: {\n                                    display: \"block\",\n                                    margin: \"0 auto\",\n                                    background: \"transparent\",\n                                    color: textColor\n                                }\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                                lineNumber: 1853,\n                                columnNumber: 13\n                            }, this),\n                            tooltipEl\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                        lineNumber: 1821,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n                lineNumber: 1807,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n        lineNumber: 1805,\n        columnNumber: 5\n    }, this);\n}\nfunction ChordDiagram(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ErrorBoundary, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChordDiagramInternal, {\n            ...props\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n            lineNumber: 1870,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\ChordDiagram.tsx\",\n        lineNumber: 1869,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/ChordDiagram.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/index.tsx":
/*!****************************************************!*\
  !*** ./src/components/DataVisualization/index.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataVisualization: () => (/* binding */ DataVisualization)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AlluvialDiagram__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AlluvialDiagram */ \"(ssr)/./src/components/DataVisualization/AlluvialDiagram.tsx\");\n/* harmony import */ var _ChordDiagram__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChordDiagram */ \"(ssr)/./src/components/DataVisualization/ChordDiagram.tsx\");\n/* harmony import */ var _shared_EnhancedVisualizationHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/EnhancedVisualizationHeader */ \"(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx\");\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ DataVisualization auto */ \n\n\n\n\n\nfunction DataVisualization() {\n    const { settings, toggleAutoPlay } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_5__.useAppContext)();\n    const [visualizationType, setVisualizationType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"alluvial\");\n    const [containerSize, setContainerSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 1920,\n        height: 1080\n    });\n    // Only log when settings change\n    const prevAutoPlay = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(settings.isAutoPlayEnabled);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (prevAutoPlay.current !== settings.isAutoPlayEnabled) {\n            console.log(\"\\uD83C\\uDFA8 Animation setting changed:\", {\n                isAutoPlayEnabled: settings.isAutoPlayEnabled,\n                autoPlaySpeed: settings.autoPlaySpeed,\n                visualizationType\n            });\n            prevAutoPlay.current = settings.isAutoPlayEnabled;\n        }\n    }, [\n        settings.isAutoPlayEnabled,\n        settings.autoPlaySpeed,\n        visualizationType\n    ]);\n    // Calculate container size based on viewport\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateSize = ()=>{\n            const viewportWidth = window.innerWidth;\n            const viewportHeight = window.innerHeight;\n            // Calculate 16:9 aspect ratio\n            const aspectRatio = 16 / 9;\n            let width, height;\n            if (viewportWidth / viewportHeight > aspectRatio) {\n                // Viewport is wider than 16:9, fit to height\n                height = viewportHeight;\n                width = height * aspectRatio;\n            } else {\n                // Viewport is taller than 16:9, fit to width\n                width = viewportWidth;\n                height = width / aspectRatio;\n            }\n            setContainerSize({\n                width,\n                height\n            });\n        };\n        updateSize();\n        window.addEventListener(\"resize\", updateSize);\n        return ()=>window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    // Calculate visualization size (subtract header height and add bottom padding)\n    const headerHeight = 80; // further reduced header height\n    const bottomPadding = 24; // reduced bottom padding\n    const visualizationHeight = (containerSize.height - headerHeight - bottomPadding) * 0.8; // Scale down to 80%\n    const visualizationWidth = containerSize.width * 0.9; // Scale down to 90%\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute top-0 left-0 w-screen h-screen flex flex-col bg-white overflow-hidden\",\n        style: {\n            aspectRatio: \"16/9\",\n            background: settings.isDarkMode ? \"#0A0A0F\" : \"white\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_EnhancedVisualizationHeader__WEBPACK_IMPORTED_MODULE_4__.EnhancedVisualizationHeader, {\n                visualizationType: visualizationType,\n                onVisualizationTypeChange: setVisualizationType,\n                isAutoPlay: settings.isAutoPlayEnabled,\n                onAutoPlayToggle: toggleAutoPlay\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                lineNumber: 72,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 w-full h-full flex flex-col pb-4\",\n                style: {\n                    minHeight: 0\n                },\n                children: [\n                    visualizationType === \"alluvial\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AlluvialDiagram__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        width: visualizationWidth,\n                        height: visualizationHeight,\n                        autoPlay: settings.isAutoPlayEnabled\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                        lineNumber: 85,\n                        columnNumber: 11\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChordDiagram__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        width: visualizationWidth,\n                        height: visualizationHeight,\n                        autoPlay: settings.isAutoPlayEnabled,\n                        enableRotation: true\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                        lineNumber: 91,\n                        columnNumber: 11\n                    }, this),\n                     false && /*#__PURE__*/ 0\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n                lineNumber: 80,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\index.tsx\",\n        lineNumber: 64,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/index.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx":
/*!*********************************************************************************!*\
  !*** ./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnhancedVisualizationHeader: () => (/* binding */ EnhancedVisualizationHeader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Pause,Play!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/pause.js\");\n/* harmony import */ var _barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Pause,Play!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/play.js\");\n/* harmony import */ var _useApprovedQuotes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useApprovedQuotes */ \"(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts\");\n/* __next_internal_client_entry_do_not_use__ EnhancedVisualizationHeader auto */ \n\n\n\nfunction EnhancedVisualizationHeader({ visualizationType, onVisualizationTypeChange, isAutoPlay, onAutoPlayToggle }) {\n    const { currentQuote, isLoading, hasQuotes } = (0,_useApprovedQuotes__WEBPACK_IMPORTED_MODULE_2__.useApprovedQuotes)();\n    // Font size logic - simplified to prevent strobing\n    const quoteTextRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Helper to get author name or 'Anonymous'\n    const getAuthor = (author)=>{\n        if (!author || author.trim().toLowerCase() === \"anonymous\") return \"Anonymous\";\n        return author;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n        className: \"w-full flex flex-row items-center justify-between py-6 px-8\",\n        style: {\n            minHeight: 120,\n            background: \"#170F5F\",\n            alignItems: \"center\",\n            display: \"flex\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 flex flex-row items-center justify-start\",\n                style: {\n                    minWidth: 220\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: \"/branding/art-logo-all/art-logo-w/art-logo-en-rgb-w.png\",\n                        alt: \"Medtronic Logo\",\n                        style: {\n                            height: 90,\n                            width: \"auto\",\n                            marginRight: 16\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-white font-bold whitespace-nowrap\",\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"1.35rem\",\n                            letterSpacing: 0.5,\n                            textAlign: \"left\",\n                            lineHeight: 1.1,\n                            marginTop: 0\n                        },\n                        children: \"WE Summit Insights\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-center justify-center text-center px-4\",\n                children: isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-lg\",\n                    children: \"Loading quotes...\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 66,\n                    columnNumber: 11\n                }, this) : hasQuotes && currentQuote ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-2 w-full flex flex-col items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white font-bold italic px-6 rounded-lg border border-white/30 bg-white/5 backdrop-blur-sm shadow-lg mx-auto\",\n                            style: {\n                                fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                                fontSize: \"clamp(0.7rem, 1.8vw, 1.2rem)\",\n                                lineHeight: \"1.3\",\n                                wordBreak: \"break-word\",\n                                whiteSpace: \"pre-line\",\n                                minHeight: 0,\n                                height: 80,\n                                maxHeight: 80,\n                                maxWidth: 700,\n                                width: \"100%\",\n                                boxSizing: \"border-box\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                flexWrap: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\"\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        fontSize: \"1.4rem\",\n                                        fontWeight: 900,\n                                        marginRight: 6,\n                                        verticalAlign: \"top\"\n                                    },\n                                    children: \"“\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 91,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    ref: quoteTextRef,\n                                    style: {\n                                        flex: 1,\n                                        overflow: \"hidden\",\n                                        textOverflow: \"ellipsis\",\n                                        display: \"-webkit-box\",\n                                        WebkitLineClamp: 4,\n                                        WebkitBoxOrient: \"vertical\",\n                                        lineClamp: 4,\n                                        maxHeight: \"100%\"\n                                    },\n                                    children: currentQuote.text\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 92,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        fontSize: \"1.4rem\",\n                                        fontWeight: 900,\n                                        marginLeft: 6,\n                                        verticalAlign: \"bottom\"\n                                    },\n                                    children: \"”\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 107,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 69,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white text-sm font-medium\",\n                            style: {\n                                fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                                opacity: 0.9,\n                                marginTop: \"4px\"\n                            },\n                            children: [\n                                \"— \",\n                                getAuthor(currentQuote.author)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 110,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 68,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-lg opacity-80 px-6 py-4 rounded-lg border border-white/20 bg-white/5\",\n                    style: {\n                        fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif'\n                    },\n                    children: '\"Share your unique qualities and they may appear here\"'\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                    lineNumber: 122,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 64,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-shrink-0 flex flex-col items-center justify-center\",\n                style: {\n                    minWidth: 90,\n                    height: 100,\n                    justifyContent: \"center\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>onVisualizationTypeChange(\"alluvial\"),\n                        className: `w-20 h-10 mb-2 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white ${visualizationType === \"alluvial\" ? \"ring-2 ring-blue-400\" : \"\"}`,\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        children: \"Alluvial\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 135,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>onVisualizationTypeChange(\"chord\"),\n                        className: `w-20 h-10 mb-2 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white ${visualizationType === \"chord\" ? \"ring-2 ring-blue-400\" : \"\"}`,\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        children: \"Chord\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 146,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: onAutoPlayToggle,\n                        className: \"w-20 h-10 rounded-lg font-semibold transition-colors text-base border border-gray-400 bg-white/10 text-white/80 hover:bg-white/20 hover:text-white\",\n                        style: {\n                            fontFamily: 'Avenir Next World, -apple-system, BlinkMacSystemFont, \"SF Pro\", \"Roboto\", sans-serif',\n                            fontSize: \"0.95rem\",\n                            width: 80\n                        },\n                        title: isAutoPlay ? \"Switch to interactive mode\" : \"Switch to auto-play mode\",\n                        children: isAutoPlay ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"flex items-center justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    className: \"h-4 w-4 mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 168,\n                                    columnNumber: 64\n                                }, this),\n                                \"Pause\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 168,\n                            columnNumber: 13\n                        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"flex items-center justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pause_Play_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"h-4 w-4 mr-1\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                                    lineNumber: 170,\n                                    columnNumber: 64\n                                }, this),\n                                \"Play\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                            lineNumber: 170,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                        lineNumber: 157,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n                lineNumber: 134,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\EnhancedVisualizationHeader.tsx\",\n        lineNumber: 32,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvRW5oYW5jZWRWaXN1YWxpemF0aW9uSGVhZGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFFMkQ7QUFDaEI7QUFDYTtBQVNqRCxTQUFTSyw0QkFBNEIsRUFDMUNDLGlCQUFpQixFQUNqQkMseUJBQXlCLEVBQ3pCQyxVQUFVLEVBQ1ZDLGdCQUFnQixFQUNpQjtJQUNqQyxNQUFNLEVBQUVDLFlBQVksRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUUsR0FBR1IscUVBQWlCQTtJQUVoRSxtREFBbUQ7SUFDbkQsTUFBTVMsZUFBZVosNkNBQU1BLENBQWtCO0lBRTdDLDJDQUEyQztJQUMzQyxNQUFNYSxZQUFZLENBQUNDO1FBQ2pCLElBQUksQ0FBQ0EsVUFBVUEsT0FBT0MsSUFBSSxHQUFHQyxXQUFXLE9BQU8sYUFBYSxPQUFPO1FBQ25FLE9BQU9GO0lBQ1Q7SUFFQSxxQkFDRSw4REFBQ0c7UUFDQ0MsV0FBVTtRQUNWQyxPQUFPO1lBQ0xDLFdBQVc7WUFDWEMsWUFBWTtZQUNaQyxZQUFZO1lBQ1pDLFNBQVM7UUFDWDs7MEJBR0EsOERBQUNDO2dCQUFJTixXQUFVO2dCQUF5REMsT0FBTztvQkFBRU0sVUFBVTtnQkFBSTs7a0NBQzdGLDhEQUFDQzt3QkFDQ0MsS0FBSTt3QkFDSkMsS0FBSTt3QkFDSlQsT0FBTzs0QkFBRVUsUUFBUTs0QkFBSUMsT0FBTzs0QkFBUUMsYUFBYTt3QkFBRzs7Ozs7O2tDQUV0RCw4REFBQ1A7d0JBQ0NOLFdBQVU7d0JBQ1ZDLE9BQU87NEJBQ0xhLFlBQVk7NEJBQ1pDLFVBQVU7NEJBQ1ZDLGVBQWU7NEJBQ2ZDLFdBQVc7NEJBQ1hDLFlBQVk7NEJBQ1pDLFdBQVc7d0JBQ2I7a0NBQ0Q7Ozs7Ozs7Ozs7OzswQkFNSCw4REFBQ2I7Z0JBQUlOLFdBQVU7MEJBQ1pSLDBCQUNDLDhEQUFDYztvQkFBSU4sV0FBVTs4QkFBcUI7Ozs7OzJCQUNsQ1AsYUFBYUYsNkJBQ2YsOERBQUNlO29CQUFJTixXQUFVOztzQ0FDYiw4REFBQ007NEJBQ0NOLFdBQVU7NEJBQ1ZDLE9BQU87Z0NBQ0xhLFlBQVk7Z0NBQ1pDLFVBQVU7Z0NBQ1ZHLFlBQVk7Z0NBQ1pFLFdBQVc7Z0NBQ1hDLFlBQVk7Z0NBQ1puQixXQUFXO2dDQUNYUyxRQUFRO2dDQUNSVyxXQUFXO2dDQUNYQyxVQUFVO2dDQUNWWCxPQUFPO2dDQUNQWSxXQUFXO2dDQUNYbkIsU0FBUztnQ0FDVEQsWUFBWTtnQ0FDWnFCLGdCQUFnQjtnQ0FDaEJDLFVBQVU7Z0NBQ1ZDLFVBQVU7Z0NBQ1ZDLGNBQWM7NEJBQ2hCOzs4Q0FFQSw4REFBQ0M7b0NBQUs1QixPQUFPO3dDQUFFYyxVQUFVO3dDQUFVZSxZQUFZO3dDQUFLakIsYUFBYTt3Q0FBR2tCLGVBQWU7b0NBQU07OENBQUc7Ozs7Ozs4Q0FDNUYsOERBQUNGO29DQUNDRyxLQUFLdEM7b0NBQ0xPLE9BQU87d0NBQ0xnQyxNQUFNO3dDQUNOTixVQUFVO3dDQUNWQyxjQUFjO3dDQUNkdkIsU0FBUzt3Q0FDVDZCLGlCQUFpQjt3Q0FDakJDLGlCQUFpQjt3Q0FDakJDLFdBQVc7d0NBQ1hkLFdBQVc7b0NBQ2I7OENBRUMvQixhQUFhOEMsSUFBSTs7Ozs7OzhDQUVwQiw4REFBQ1I7b0NBQUs1QixPQUFPO3dDQUFFYyxVQUFVO3dDQUFVZSxZQUFZO3dDQUFLUSxZQUFZO3dDQUFHUCxlQUFlO29DQUFTOzhDQUFHOzs7Ozs7Ozs7Ozs7c0NBR2hHLDhEQUFDekI7NEJBQ0NOLFdBQVU7NEJBQ1ZDLE9BQU87Z0NBQ0xhLFlBQVk7Z0NBQ1p5QixTQUFTO2dDQUNUcEIsV0FBVzs0QkFDYjs7Z0NBQ0Q7Z0NBQ0l4QixVQUFVSixhQUFhSyxNQUFNOzs7Ozs7Ozs7Ozs7eUNBSXBDLDhEQUFDVTtvQkFDQ04sV0FBVTtvQkFDVkMsT0FBTzt3QkFDTGEsWUFBWTtvQkFDZDs4QkFDRDs7Ozs7Ozs7Ozs7MEJBT0wsOERBQUNSO2dCQUFJTixXQUFVO2dCQUEwREMsT0FBTztvQkFBRU0sVUFBVTtvQkFBSUksUUFBUTtvQkFBS2MsZ0JBQWdCO2dCQUFTOztrQ0FDcEksOERBQUNlO3dCQUNDQyxTQUFTLElBQU1yRCwwQkFBMEI7d0JBQ3pDWSxXQUFXLENBQUMsd0pBQXdKLEVBQUViLHNCQUFzQixhQUFhLHlCQUF5QixHQUFHLENBQUM7d0JBQ3RPYyxPQUFPOzRCQUNMYSxZQUFZOzRCQUNaQyxVQUFVOzRCQUNWSCxPQUFPO3dCQUNUO2tDQUNEOzs7Ozs7a0NBR0QsOERBQUM0Qjt3QkFDQ0MsU0FBUyxJQUFNckQsMEJBQTBCO3dCQUN6Q1ksV0FBVyxDQUFDLHdKQUF3SixFQUFFYixzQkFBc0IsVUFBVSx5QkFBeUIsR0FBRyxDQUFDO3dCQUNuT2MsT0FBTzs0QkFDTGEsWUFBWTs0QkFDWkMsVUFBVTs0QkFDVkgsT0FBTzt3QkFDVDtrQ0FDRDs7Ozs7O2tDQUdELDhEQUFDNEI7d0JBQ0NDLFNBQVNuRDt3QkFDVFUsV0FBVTt3QkFDVkMsT0FBTzs0QkFDTGEsWUFBWTs0QkFDWkMsVUFBVTs0QkFDVkgsT0FBTzt3QkFDVDt3QkFDQThCLE9BQU9yRCxhQUFhLCtCQUErQjtrQ0FFbERBLDJCQUNDLDhEQUFDd0M7NEJBQUs3QixXQUFVOzs4Q0FBbUMsOERBQUNoQixzRkFBS0E7b0NBQUNnQixXQUFVOzs7Ozs7Z0NBQWlCOzs7Ozs7aURBRXJGLDhEQUFDNkI7NEJBQUs3QixXQUFVOzs4Q0FBbUMsOERBQUNqQixzRkFBSUE7b0NBQUNpQixXQUFVOzs7Ozs7Z0NBQWlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNaEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YVZpc3VhbGl6YXRpb24vc2hhcmVkL0VuaGFuY2VkVmlzdWFsaXphdGlvbkhlYWRlci50c3g/Yjg4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQbGF5LCBQYXVzZSB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyB1c2VBcHByb3ZlZFF1b3RlcyB9IGZyb20gJy4vdXNlQXBwcm92ZWRRdW90ZXMnO1xuXG5pbnRlcmZhY2UgRW5oYW5jZWRWaXN1YWxpemF0aW9uSGVhZGVyUHJvcHMge1xuICB2aXN1YWxpemF0aW9uVHlwZTogJ2FsbHV2aWFsJyB8ICdjaG9yZCc7XG4gIG9uVmlzdWFsaXphdGlvblR5cGVDaGFuZ2U6ICh0eXBlOiAnYWxsdXZpYWwnIHwgJ2Nob3JkJykgPT4gdm9pZDtcbiAgaXNBdXRvUGxheTogYm9vbGVhbjtcbiAgb25BdXRvUGxheVRvZ2dsZTogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEVuaGFuY2VkVmlzdWFsaXphdGlvbkhlYWRlcih7XG4gIHZpc3VhbGl6YXRpb25UeXBlLFxuICBvblZpc3VhbGl6YXRpb25UeXBlQ2hhbmdlLFxuICBpc0F1dG9QbGF5LFxuICBvbkF1dG9QbGF5VG9nZ2xlLFxufTogRW5oYW5jZWRWaXN1YWxpemF0aW9uSGVhZGVyUHJvcHMpIHtcbiAgY29uc3QgeyBjdXJyZW50UXVvdGUsIGlzTG9hZGluZywgaGFzUXVvdGVzIH0gPSB1c2VBcHByb3ZlZFF1b3RlcygpO1xuXG4gIC8vIEZvbnQgc2l6ZSBsb2dpYyAtIHNpbXBsaWZpZWQgdG8gcHJldmVudCBzdHJvYmluZ1xuICBjb25zdCBxdW90ZVRleHRSZWYgPSB1c2VSZWY8SFRNTFNwYW5FbGVtZW50PihudWxsKTtcblxuICAvLyBIZWxwZXIgdG8gZ2V0IGF1dGhvciBuYW1lIG9yICdBbm9ueW1vdXMnXG4gIGNvbnN0IGdldEF1dGhvciA9IChhdXRob3I6IHN0cmluZyB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIGlmICghYXV0aG9yIHx8IGF1dGhvci50cmltKCkudG9Mb3dlckNhc2UoKSA9PT0gJ2Fub255bW91cycpIHJldHVybiAnQW5vbnltb3VzJztcbiAgICByZXR1cm4gYXV0aG9yO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGhlYWRlclxuICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGZsZXggZmxleC1yb3cgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBweS02IHB4LThcIlxuICAgICAgc3R5bGU9e3sgXG4gICAgICAgIG1pbkhlaWdodDogMTIwLCBcbiAgICAgICAgYmFja2dyb3VuZDogJyMxNzBGNUYnLCBcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsIFxuICAgICAgICBkaXNwbGF5OiAnZmxleCcgXG4gICAgICB9fVxuICAgID5cbiAgICAgIHsvKiBMb2dvIGFuZCBUaXRsZSAtIHJvdywgbGVmdC1hbGlnbmVkICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LXNocmluay0wIGZsZXggZmxleC1yb3cgaXRlbXMtY2VudGVyIGp1c3RpZnktc3RhcnRcIiBzdHlsZT17eyBtaW5XaWR0aDogMjIwIH19PlxuICAgICAgICA8aW1nXG4gICAgICAgICAgc3JjPVwiL2JyYW5kaW5nL2FydC1sb2dvLWFsbC9hcnQtbG9nby13L2FydC1sb2dvLWVuLXJnYi13LnBuZ1wiXG4gICAgICAgICAgYWx0PVwiTWVkdHJvbmljIExvZ29cIlxuICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogOTAsIHdpZHRoOiAnYXV0bycsIG1hcmdpblJpZ2h0OiAxNiB9fVxuICAgICAgICAvPlxuICAgICAgICA8ZGl2IFxuICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtd2hpdGUgZm9udC1ib2xkIHdoaXRlc3BhY2Utbm93cmFwXCJcbiAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcXFwiU0YgUHJvXFxcIiwgXFxcIlJvYm90b1xcXCIsIHNhbnMtc2VyaWYnLFxuICAgICAgICAgICAgZm9udFNpemU6ICcxLjM1cmVtJyxcbiAgICAgICAgICAgIGxldHRlclNwYWNpbmc6IDAuNSxcbiAgICAgICAgICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgICAgICAgICAgbGluZUhlaWdodDogMS4xLFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAwXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIFdFIFN1bW1pdCBJbnNpZ2h0c1xuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogQ2VudGVyZWQgUXVvdGUgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtMSBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LWNlbnRlciBweC00XCI+XG4gICAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXdoaXRlIHRleHQtbGdcIj5Mb2FkaW5nIHF1b3Rlcy4uLjwvZGl2PlxuICAgICAgICApIDogaGFzUXVvdGVzICYmIGN1cnJlbnRRdW90ZSA/IChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMiB3LWZ1bGwgZmxleCBmbGV4LWNvbCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtd2hpdGUgZm9udC1ib2xkIGl0YWxpYyBweC02IHJvdW5kZWQtbGcgYm9yZGVyIGJvcmRlci13aGl0ZS8zMCBiZy13aGl0ZS81IGJhY2tkcm9wLWJsdXItc20gc2hhZG93LWxnIG14LWF1dG9cIlxuICAgICAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiAnQXZlbmlyIE5leHQgV29ybGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTRiBQcm9cIiwgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZicsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6ICdjbGFtcCgwLjdyZW0sIDEuOHZ3LCAxLjJyZW0pJywgLy8gU21hbGxlciBmb250IHNpemVcbiAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiAnMS4zJyxcbiAgICAgICAgICAgICAgICB3b3JkQnJlYWs6ICdicmVhay13b3JkJyxcbiAgICAgICAgICAgICAgICB3aGl0ZVNwYWNlOiAncHJlLWxpbmUnLFxuICAgICAgICAgICAgICAgIG1pbkhlaWdodDogMCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDgwLFxuICAgICAgICAgICAgICAgIG1heEhlaWdodDogODAsXG4gICAgICAgICAgICAgICAgbWF4V2lkdGg6IDcwMCxcbiAgICAgICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgZmxleFdyYXA6ICdub3dyYXAnLFxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgICAgICAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRTaXplOiAnMS40cmVtJywgZm9udFdlaWdodDogOTAwLCBtYXJnaW5SaWdodDogNiwgdmVydGljYWxBbGlnbjogJ3RvcCcgfX0+JmxkcXVvOzwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICByZWY9e3F1b3RlVGV4dFJlZn1cbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgZmxleDogMSxcbiAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgICAgICAgICAgIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJyxcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ICctd2Via2l0LWJveCcsXG4gICAgICAgICAgICAgICAgICBXZWJraXRMaW5lQ2xhbXA6IDQsXG4gICAgICAgICAgICAgICAgICBXZWJraXRCb3hPcmllbnQ6ICd2ZXJ0aWNhbCcsXG4gICAgICAgICAgICAgICAgICBsaW5lQ2xhbXA6IDQsXG4gICAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge2N1cnJlbnRRdW90ZS50ZXh0fVxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRTaXplOiAnMS40cmVtJywgZm9udFdlaWdodDogOTAwLCBtYXJnaW5MZWZ0OiA2LCB2ZXJ0aWNhbEFsaWduOiAnYm90dG9tJyB9fT4mcmRxdW87PC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7LyogQXV0aG9yIGxpbmUgcG9zaXRpb25lZCBqdXN0IHVuZGVyIHRoZSBxdW90ZSBib3ggKi99XG4gICAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LXdoaXRlIHRleHQtc20gZm9udC1tZWRpdW1cIlxuICAgICAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiAnQXZlbmlyIE5leHQgV29ybGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTRiBQcm9cIiwgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZicsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC45LFxuICAgICAgICAgICAgICAgIG1hcmdpblRvcDogJzRweCdcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAg4oCUIHtnZXRBdXRob3IoY3VycmVudFF1b3RlLmF1dGhvcil9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC13aGl0ZSB0ZXh0LWxnIG9wYWNpdHktODAgcHgtNiBweS00IHJvdW5kZWQtbGcgYm9yZGVyIGJvcmRlci13aGl0ZS8yMCBiZy13aGl0ZS81XCJcbiAgICAgICAgICAgIHN0eWxlPXt7IFxuICAgICAgICAgICAgICBmb250RmFtaWx5OiAnQXZlbmlyIE5leHQgV29ybGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTRiBQcm9cIiwgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZidcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgXCJTaGFyZSB5b3VyIHVuaXF1ZSBxdWFsaXRpZXMgYW5kIHRoZXkgbWF5IGFwcGVhciBoZXJlXCJcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogQ29udHJvbHMgLSBzdGFja2VkIHZlcnRpY2FsbHkgYW5kIGNlbnRlcmVkICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LXNocmluay0wIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCIgc3R5bGU9e3sgbWluV2lkdGg6IDkwLCBoZWlnaHQ6IDEwMCwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInIH19PlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gb25WaXN1YWxpemF0aW9uVHlwZUNoYW5nZSgnYWxsdXZpYWwnKX1cbiAgICAgICAgICBjbGFzc05hbWU9e2B3LTIwIGgtMTAgbWItMiByb3VuZGVkLWxnIGZvbnQtc2VtaWJvbGQgdHJhbnNpdGlvbi1jb2xvcnMgdGV4dC1iYXNlIGJvcmRlciBib3JkZXItZ3JheS00MDAgYmctd2hpdGUvMTAgdGV4dC13aGl0ZS84MCBob3ZlcjpiZy13aGl0ZS8yMCBob3Zlcjp0ZXh0LXdoaXRlICR7dmlzdWFsaXphdGlvblR5cGUgPT09ICdhbGx1dmlhbCcgPyAncmluZy0yIHJpbmctYmx1ZS00MDAnIDogJyd9YH1cbiAgICAgICAgICBzdHlsZT17eyBcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6ICdBdmVuaXIgTmV4dCBXb3JsZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNGIFByb1wiLCBcIlJvYm90b1wiLCBzYW5zLXNlcmlmJyxcbiAgICAgICAgICAgIGZvbnRTaXplOiAnMC45NXJlbScsXG4gICAgICAgICAgICB3aWR0aDogODBcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgQWxsdXZpYWxcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblZpc3VhbGl6YXRpb25UeXBlQ2hhbmdlKCdjaG9yZCcpfVxuICAgICAgICAgIGNsYXNzTmFtZT17YHctMjAgaC0xMCBtYi0yIHJvdW5kZWQtbGcgZm9udC1zZW1pYm9sZCB0cmFuc2l0aW9uLWNvbG9ycyB0ZXh0LWJhc2UgYm9yZGVyIGJvcmRlci1ncmF5LTQwMCBiZy13aGl0ZS8xMCB0ZXh0LXdoaXRlLzgwIGhvdmVyOmJnLXdoaXRlLzIwIGhvdmVyOnRleHQtd2hpdGUgJHt2aXN1YWxpemF0aW9uVHlwZSA9PT0gJ2Nob3JkJyA/ICdyaW5nLTIgcmluZy1ibHVlLTQwMCcgOiAnJ31gfVxuICAgICAgICAgIHN0eWxlPXt7IFxuICAgICAgICAgICAgZm9udEZhbWlseTogJ0F2ZW5pciBOZXh0IFdvcmxkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU0YgUHJvXCIsIFwiUm9ib3RvXCIsIHNhbnMtc2VyaWYnLFxuICAgICAgICAgICAgZm9udFNpemU6ICcwLjk1cmVtJyxcbiAgICAgICAgICAgIHdpZHRoOiA4MFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICBDaG9yZFxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e29uQXV0b1BsYXlUb2dnbGV9XG4gICAgICAgICAgY2xhc3NOYW1lPVwidy0yMCBoLTEwIHJvdW5kZWQtbGcgZm9udC1zZW1pYm9sZCB0cmFuc2l0aW9uLWNvbG9ycyB0ZXh0LWJhc2UgYm9yZGVyIGJvcmRlci1ncmF5LTQwMCBiZy13aGl0ZS8xMCB0ZXh0LXdoaXRlLzgwIGhvdmVyOmJnLXdoaXRlLzIwIGhvdmVyOnRleHQtd2hpdGVcIlxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBmb250RmFtaWx5OiAnQXZlbmlyIE5leHQgV29ybGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJTRiBQcm9cIiwgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZicsXG4gICAgICAgICAgICBmb250U2l6ZTogJzAuOTVyZW0nLFxuICAgICAgICAgICAgd2lkdGg6IDgwXG4gICAgICAgICAgfX1cbiAgICAgICAgICB0aXRsZT17aXNBdXRvUGxheSA/ICdTd2l0Y2ggdG8gaW50ZXJhY3RpdmUgbW9kZScgOiAnU3dpdGNoIHRvIGF1dG8tcGxheSBtb2RlJ31cbiAgICAgICAgPlxuICAgICAgICAgIHtpc0F1dG9QbGF5ID8gKFxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj48UGF1c2UgY2xhc3NOYW1lPVwiaC00IHctNCBtci0xXCIgLz5QYXVzZTwvc3Bhbj5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj48UGxheSBjbGFzc05hbWU9XCJoLTQgdy00IG1yLTFcIiAvPlBsYXk8L3NwYW4+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2hlYWRlcj5cbiAgKTtcbn0gIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlUmVmIiwiUGxheSIsIlBhdXNlIiwidXNlQXBwcm92ZWRRdW90ZXMiLCJFbmhhbmNlZFZpc3VhbGl6YXRpb25IZWFkZXIiLCJ2aXN1YWxpemF0aW9uVHlwZSIsIm9uVmlzdWFsaXphdGlvblR5cGVDaGFuZ2UiLCJpc0F1dG9QbGF5Iiwib25BdXRvUGxheVRvZ2dsZSIsImN1cnJlbnRRdW90ZSIsImlzTG9hZGluZyIsImhhc1F1b3RlcyIsInF1b3RlVGV4dFJlZiIsImdldEF1dGhvciIsImF1dGhvciIsInRyaW0iLCJ0b0xvd2VyQ2FzZSIsImhlYWRlciIsImNsYXNzTmFtZSIsInN0eWxlIiwibWluSGVpZ2h0IiwiYmFja2dyb3VuZCIsImFsaWduSXRlbXMiLCJkaXNwbGF5IiwiZGl2IiwibWluV2lkdGgiLCJpbWciLCJzcmMiLCJhbHQiLCJoZWlnaHQiLCJ3aWR0aCIsIm1hcmdpblJpZ2h0IiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwibGV0dGVyU3BhY2luZyIsInRleHRBbGlnbiIsImxpbmVIZWlnaHQiLCJtYXJnaW5Ub3AiLCJ3b3JkQnJlYWsiLCJ3aGl0ZVNwYWNlIiwibWF4SGVpZ2h0IiwibWF4V2lkdGgiLCJib3hTaXppbmciLCJqdXN0aWZ5Q29udGVudCIsImZsZXhXcmFwIiwib3ZlcmZsb3ciLCJ0ZXh0T3ZlcmZsb3ciLCJzcGFuIiwiZm9udFdlaWdodCIsInZlcnRpY2FsQWxpZ24iLCJyZWYiLCJmbGV4IiwiV2Via2l0TGluZUNsYW1wIiwiV2Via2l0Qm94T3JpZW50IiwibGluZUNsYW1wIiwidGV4dCIsIm1hcmdpbkxlZnQiLCJvcGFjaXR5IiwiYnV0dG9uIiwib25DbGljayIsInRpdGxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/EnhancedVisualizationHeader.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/DataVisualization/shared/QuestionSelector.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuestionSelector: () => (/* binding */ QuestionSelector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n\n\n\nconst getSelectStyle = (isDarkMode)=>({\n        minWidth: 320,\n        fontSize: \"1.5rem\",\n        lineHeight: 1.1,\n        appearance: \"none\",\n        WebkitAppearance: \"none\",\n        MozAppearance: \"none\",\n        background: \"none\",\n        color: isDarkMode ? \"#FFFFFF\" : \"#170F5F\",\n        border: 0,\n        borderBottom: `4px solid ${isDarkMode ? \"#FFFFFF\" : \"#170F5F\"}`,\n        fontWeight: 700,\n        paddingRight: 48,\n        paddingLeft: 0,\n        paddingTop: 8,\n        paddingBottom: 8,\n        outline: \"none\",\n        transition: \"border-color 0.2s, color 0.2s\"\n    });\nfunction QuestionSelector({ availableFields, currentSource, currentTarget, onChange }) {\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_2__.useAppContext)();\n    const selectStyle = getSelectStyle(settings.isDarkMode);\n    const chevronColor = settings.isDarkMode ? \"#FFFFFF\" : \"#170F5F\";\n    const focusColor = settings.isDarkMode ? \"#60A5FA\" : \"#1010EB\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full flex flex-row justify-between items-end gap-8\",\n        style: {\n            maxWidth: \"1600px\",\n            margin: \"0 auto\",\n            padding: \"0 48px\",\n            position: \"relative\",\n            zIndex: 1000,\n            marginBottom: \"32px\" // Add explicit bottom margin\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-start\",\n                style: {\n                    marginLeft: 48\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                    className: \"w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-fit\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                style: selectStyle,\n                                className: \"custom-select\",\n                                value: currentSource,\n                                onChange: (e)=>onChange(e.target.value, currentTarget),\n                                children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: field.value,\n                                        disabled: field.value === currentTarget,\n                                        children: field.label\n                                    }, field.value, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 70,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"pointer-events-none absolute right-2 top-1/2 -translate-y-1/2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"32\",\n                                    height: \"32\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M7 10l5 5 5-5\",\n                                        stroke: chevronColor,\n                                        strokeWidth: \"3\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 78,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                    lineNumber: 77,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 76,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 61,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 60,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center\",\n                style: {\n                    minWidth: 80,\n                    height: 60\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"60\",\n                    height: \"20\",\n                    viewBox: \"0 0 60 20\",\n                    fill: \"none\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M5 10 L50 10 M45 5 L50 10 L45 15\",\n                        stroke: chevronColor,\n                        strokeWidth: \"3\",\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 87,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex flex-col items-end\",\n                style: {\n                    marginRight: 48\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                    className: \"w-full flex justify-end\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative w-fit\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                style: selectStyle,\n                                className: \"custom-select\",\n                                value: currentTarget,\n                                onChange: (e)=>onChange(currentSource, e.target.value),\n                                children: availableFields.map((field)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: field.value,\n                                        disabled: field.value === currentSource,\n                                        children: field.label\n                                    }, field.value, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 103,\n                                        columnNumber: 17\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 96,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"pointer-events-none absolute right-2 top-1/2 -translate-y-1/2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"32\",\n                                    height: \"32\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M7 10l5 5 5-5\",\n                                        stroke: chevronColor,\n                                        strokeWidth: \"3\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                        lineNumber: 111,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                    lineNumber: 110,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                                lineNumber: 109,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                        lineNumber: 95,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                    lineNumber: 94,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 93,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"style\", {\n                children: `\n        .custom-select::-ms-expand { display: none; }\n        .custom-select::-webkit-appearance { appearance: none; }\n        .custom-select:focus { border-bottom-color: ${focusColor}; }\n        .custom-select option {\n          background-color: ${settings.isDarkMode ? \"#1f2937\" : \"#ffffff\"};\n          color: ${settings.isDarkMode ? \"#ffffff\" : \"#170F5F\"};\n          padding: 8px 12px;\n        }\n        .custom-select option:disabled {\n          background-color: ${settings.isDarkMode ? \"#374151\" : \"#f3f4f6\"};\n          color: ${settings.isDarkMode ? \"#9ca3af\" : \"#6b7280\"};\n        }\n      `\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n                lineNumber: 117,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\DataVisualization\\\\shared\\\\QuestionSelector.tsx\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/QuestionSelector.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/chordUtils.ts":
/*!***************************************************************!*\
  !*** ./src/components/DataVisualization/shared/chordUtils.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chordAnimations: () => (/* binding */ chordAnimations),\n/* harmony export */   chordColorScales: () => (/* binding */ chordColorScales),\n/* harmony export */   chordConfig: () => (/* binding */ chordConfig),\n/* harmony export */   cyclingModes: () => (/* binding */ cyclingModes),\n/* harmony export */   filterConnectedCategories: () => (/* binding */ filterConnectedCategories),\n/* harmony export */   getChordColor: () => (/* binding */ getChordColor),\n/* harmony export */   getYearsCategory: () => (/* binding */ getYearsCategory),\n/* harmony export */   normalizeCategory: () => (/* binding */ normalizeCategory),\n/* harmony export */   processChordData: () => (/* binding */ processChordData)\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ \"(ssr)/./node_modules/d3-interpolate/src/rgb.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/ordinal.js\");\n/* harmony import */ var d3_chord__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-chord */ \"(ssr)/./node_modules/d3-chord/src/chord.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ \"(ssr)/./node_modules/d3/src/index.js\");\n\n\n\n\n// Chord-specific configuration\nconst chordConfig = {\n    // Arc properties\n    arcOpacity: 0.8,\n    arcStroke: 2,\n    // Chord properties  \n    chordOpacity: 0.6,\n    chordHoverOpacity: 0.9,\n    chordMinWidth: 3,\n    // Animation\n    transitionDuration: 800,\n    rotationSpeed: 0.5,\n    // Typography\n    labelFontWeight: 700,\n    labelFontSize: \"1.25rem\",\n    // Layout\n    innerRadius: 0.6,\n    outerRadius: 0.9,\n    padding: 0.05\n};\n// Cycling modes for chord diagram\nconst cyclingModes = [\n    {\n        focus: \"years-learning\",\n        duration: 4000,\n        description: \"Experience & Learning Styles\",\n        source: \"years_at_medtronic\",\n        target: \"learning_style\"\n    },\n    {\n        focus: \"years-shaped\",\n        duration: 4000,\n        description: \"Experience & Formative Influences\",\n        source: \"years_at_medtronic\",\n        target: \"shaped_by\"\n    },\n    {\n        focus: \"years-performance\",\n        duration: 4000,\n        description: \"Experience & Peak Performance\",\n        source: \"years_at_medtronic\",\n        target: \"peak_performance\"\n    },\n    {\n        focus: \"years-motivation\",\n        duration: 4000,\n        description: \"Experience & Current Motivation\",\n        source: \"years_at_medtronic\",\n        target: \"motivation\"\n    },\n    {\n        focus: \"learning-performance\",\n        duration: 4000,\n        description: \"Learning Style & Peak Performance\",\n        source: \"learning_style\",\n        target: \"peak_performance\"\n    },\n    {\n        focus: \"motivation-shaped\",\n        duration: 4000,\n        description: \"Motivation & Shaped By\",\n        source: \"motivation\",\n        target: \"shaped_by\"\n    }\n];\n// Color scales for chord arcs (reuse from alluvial)\nconst chordColorScales = {\n    years_at_medtronic: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"0-5\",\n        \"6-10\",\n        \"11-15\",\n        \"16-20\",\n        \"20+\"\n    ]).range([\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.2),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.4),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.6),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(0.8),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"#0077CC\", \"#00A3E0\")(1)\n    ]).unknown(\"#1A1A1F\"),\n    learning_style: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"visual\",\n        \"auditory\",\n        \"kinesthetic\",\n        \"reading_writing\"\n    ]).range([\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\"\n    ]).unknown(\"#1A1A1F\"),\n    shaped_by: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"mentor\",\n        \"challenge\",\n        \"failure\",\n        \"success\",\n        \"team\",\n        \"other\"\n    ]).range([\n        \"#FF9F1C\",\n        \"#2EC4B6\",\n        \"#E71D36\",\n        \"#011627\",\n        \"#FF6B6B\",\n        \"#4ECDC4\"\n    ]).unknown(\"#1A1A1F\"),\n    peak_performance: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"Extrovert, Morning\",\n        \"Extrovert, Evening\",\n        \"Introvert, Morning\",\n        \"Introvert, Night\",\n        \"Ambivert, Morning\",\n        \"Ambivert, Night\"\n    ]).range([\n        \"#FFD166\",\n        \"#06D6A0\",\n        \"#118AB2\",\n        \"#073B4C\",\n        \"#FF6B6B\",\n        \"#4ECDC4\"\n    ]).unknown(\"#1A1A1F\"),\n    motivation: (0,d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"])().domain([\n        \"impact\",\n        \"growth\",\n        \"recognition\",\n        \"autonomy\",\n        \"purpose\"\n    ]).range([\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ]).unknown(\"#1A1A1F\")\n};\n// Helper to get years category\nfunction getYearsCategory(years) {\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n}\n// Helper to normalize category names for color lookup\nfunction normalizeCategory(category, question) {\n    if (question === \"years_at_medtronic\") return getYearsCategory(Number(category));\n    return category;\n}\n// Process data for chord diagram\n// NOTE: All color assignments must use the admin-driven color map (categoryColors) as the source of truth.\nfunction processChordData(data, sourceField, targetField, categoryColors // Pass the admin-driven color map here\n) {\n    // Get unique categories for source and target\n    const sourceCategories = new Set();\n    const targetCategories = new Set();\n    data.forEach((d)=>{\n        if (sourceField === \"years_at_medtronic\") {\n            sourceCategories.add(getYearsCategory(d.years_at_medtronic || 0));\n        } else {\n            sourceCategories.add(d[sourceField]);\n        }\n        if (targetField === \"years_at_medtronic\") {\n            targetCategories.add(getYearsCategory(d.years_at_medtronic || 0));\n        } else {\n            targetCategories.add(d[targetField]);\n        }\n    });\n    const allCategories = Array.from(new Set([\n        ...Array.from(sourceCategories),\n        ...Array.from(targetCategories)\n    ]));\n    // Create matrix\n    const matrix = Array(allCategories.length).fill(0).map(()=>Array(allCategories.length).fill(0));\n    // Fill matrix with relationships\n    data.forEach((d)=>{\n        const source = sourceField === \"years_at_medtronic\" ? getYearsCategory(d.years_at_medtronic || 0) : d[sourceField];\n        const target = targetField === \"years_at_medtronic\" ? getYearsCategory(d.years_at_medtronic || 0) : d[targetField];\n        const sourceIndex = allCategories.indexOf(source);\n        const targetIndex = allCategories.indexOf(target);\n        if (sourceIndex !== -1 && targetIndex !== -1) {\n            matrix[sourceIndex][targetIndex] += 1;\n        }\n    });\n    // Create chord layout\n    const chordLayout = (0,d3_chord__WEBPACK_IMPORTED_MODULE_3__[\"default\"])().padAngle(0.05).sortSubgroups(d3__WEBPACK_IMPORTED_MODULE_0__.descending);\n    const chordData = chordLayout(matrix);\n    // Create groups\n    const groups = chordData.groups.map((group, i)=>{\n        const category = allCategories[i];\n        const question = i < sourceCategories.size ? sourceField : targetField;\n        // Use only the admin-driven color map for color assignment\n        const color = categoryColors[question]?.[category] || categoryColors[question]?.[category.toLowerCase()] || categoryColors[question]?.[category.toUpperCase()] || \"#888888\"; // fallback color\n        return {\n            index: i,\n            startAngle: group.startAngle,\n            endAngle: group.endAngle,\n            value: group.value,\n            category,\n            question,\n            color,\n            name: category\n        };\n    });\n    // Create chords\n    const chords = chordData.map((d)=>{\n        const sourceGroup = groups[d.source.index];\n        const targetGroup = groups[d.target.index];\n        const value = d.source.value;\n        let strength = \"weak\";\n        if (value > 10) strength = \"strong\";\n        else if (value > 5) strength = \"medium\";\n        return {\n            source: sourceGroup,\n            target: targetGroup,\n            value,\n            strength\n        };\n    });\n    return {\n        matrix,\n        names: allCategories,\n        groups,\n        chords\n    };\n}\n// Get chord color by blending source and target colors\nfunction getChordColor(source, target) {\n    return (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(source.color, target.color)(0.5);\n}\n// Animation utilities\nconst chordAnimations = {\n    drawIn: {\n        duration: 1200,\n        delay: (d, i)=>i * 50,\n        easing: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n    },\n    modeChange: {\n        duration: 800,\n        easing: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n    },\n    rotation: {\n        duration: 30000,\n        easing: \"linear\"\n    },\n    highlight: {\n        duration: 200,\n        easing: \"ease-out\"\n    }\n};\n// Utility to filter out unconnected categories from matrix and groups\nfunction filterConnectedCategories(matrix, groups, names) {\n    // Find indexes with at least one connection (row or column sum > 0)\n    const connectedIndexes = new Set();\n    matrix.forEach((row, i)=>{\n        if (row.some((v)=>v > 0) || matrix.some((r)=>r[i] > 0)) {\n            connectedIndexes.add(i);\n        }\n    });\n    // Build new arrays\n    const indexMap = new Map();\n    const filteredNames = names.filter((_, i)=>connectedIndexes.has(i));\n    const filteredGroups = groups.filter((_, i)=>connectedIndexes.has(i));\n    filteredGroups.forEach((g, i)=>indexMap.set(groups.indexOf(g), i));\n    const filteredMatrix = filteredNames.map((_, i)=>filteredNames.map((_, j)=>{\n            const origI = names.indexOf(filteredNames[i]);\n            const origJ = names.indexOf(filteredNames[j]);\n            return matrix[origI][origJ];\n        }));\n    return {\n        filteredMatrix,\n        filteredGroups,\n        filteredNames,\n        indexMap\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/chordUtils.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/colorUtils.ts":
/*!***************************************************************!*\
  !*** ./src/components/DataVisualization/shared/colorUtils.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorConstants: () => (/* binding */ colorConstants),\n/* harmony export */   darkTheme: () => (/* binding */ darkTheme),\n/* harmony export */   getColorConstants: () => (/* binding */ getColorConstants),\n/* harmony export */   getContrastRatio: () => (/* binding */ getContrastRatio),\n/* harmony export */   getLearningStyleColors: () => (/* binding */ getLearningStyleColors),\n/* harmony export */   getMotivationColors: () => (/* binding */ getMotivationColors),\n/* harmony export */   getNodeColor: () => (/* binding */ getNodeColor),\n/* harmony export */   getPeakPerformanceColors: () => (/* binding */ getPeakPerformanceColors),\n/* harmony export */   getSequentialColorScale: () => (/* binding */ getSequentialColorScale),\n/* harmony export */   getShapedByColors: () => (/* binding */ getShapedByColors),\n/* harmony export */   getThemeColors: () => (/* binding */ getThemeColors),\n/* harmony export */   getYearsCategory: () => (/* binding */ getYearsCategory),\n/* harmony export */   getYearsColorScale: () => (/* binding */ getYearsColorScale),\n/* harmony export */   interpolateColors: () => (/* binding */ interpolateColors),\n/* harmony export */   isAccessible: () => (/* binding */ isAccessible),\n/* harmony export */   learningStyleColors: () => (/* binding */ learningStyleColors),\n/* harmony export */   lightTheme: () => (/* binding */ lightTheme),\n/* harmony export */   motivationColors: () => (/* binding */ motivationColors),\n/* harmony export */   peakPerformanceColors: () => (/* binding */ peakPerformanceColors),\n/* harmony export */   sequentialColorScale: () => (/* binding */ sequentialColorScale),\n/* harmony export */   shapedByColors: () => (/* binding */ shapedByColors),\n/* harmony export */   theme: () => (/* binding */ theme),\n/* harmony export */   yearsColorScale: () => (/* binding */ yearsColorScale)\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ \"(ssr)/./node_modules/d3-interpolate/src/rgb.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/ordinal.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/sequential.js\");\n\n\n// Light theme colors\nconst lightTheme = {\n    primary: \"#0077CC\",\n    secondary: \"#00A3E0\",\n    accent: \"#FF6B6B\",\n    background: \"#FFFFFF\",\n    surface: \"#F8F9FA\",\n    text: {\n        primary: \"#1A1A1A\",\n        secondary: \"#6B7280\",\n        muted: \"#9CA3AF\"\n    },\n    border: \"#E5E7EB\",\n    error: \"#EF4444\",\n    success: \"#10B981\",\n    warning: \"#F59E0B\"\n};\n// Dark theme colors\nconst darkTheme = {\n    primary: \"#0088FF\",\n    secondary: \"#00B4FF\",\n    accent: \"#FF7B7B\",\n    background: \"#0A0A0F\",\n    surface: \"#1A1A1F\",\n    text: {\n        primary: \"#FFFFFF\",\n        secondary: \"#A0A0A0\",\n        muted: \"#707070\"\n    },\n    border: \"#2A2A2F\",\n    error: \"#FF4D4D\",\n    success: \"#4CAF50\",\n    warning: \"#FFC107\"\n};\n// Theme-aware color getter function\nfunction getThemeColors(isDarkMode = false) {\n    return isDarkMode ? darkTheme : lightTheme;\n}\n// Years to color mapping - now theme-aware\nconst getYearsColorScale = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"0-5\",\n        \"6-10\",\n        \"11-15\",\n        \"16-20\",\n        \"20+\"\n    ]).range([\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.2),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.4),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.6),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(0.8),\n        (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)(1)\n    ]).unknown(theme.surface);\n};\n// Theme-aware attribute color scales\nconst getLearningStyleColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"visual\",\n        \"auditory\",\n        \"kinesthetic\",\n        \"reading_writing\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getShapedByColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\",\n        \"#FFB83C\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"mentor\",\n        \"other\",\n        \"failure\",\n        \"education\",\n        \"challenge\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getPeakPerformanceColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FFD486\",\n        \"#26E6C0\",\n        \"#2AA2D2\",\n        \"#1A5B7C\",\n        \"#FF8A8A\"\n    ] : [\n        \"#FFD166\",\n        \"#06D6A0\",\n        \"#118AB2\",\n        \"#073B4C\",\n        \"#FF6B6B\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"individual\",\n        \"innovation\",\n        \"leadership\",\n        \"crisis\",\n        \"team\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\nconst getMotivationColors = (isDarkMode = false)=>{\n    const baseColors = isDarkMode ? [\n        \"#FF8A8A\",\n        \"#6EDCD4\",\n        \"#65C7F1\",\n        \"#B6DEC4\",\n        \"#FFB83C\"\n    ] : [\n        \"#FF6B6B\",\n        \"#4ECDC4\",\n        \"#45B7D1\",\n        \"#96CEB4\",\n        \"#FF9F1C\"\n    ];\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().domain([\n        \"autonomy\",\n        \"recognition\",\n        \"impact\",\n        \"purpose\",\n        \"growth\"\n    ]).range(baseColors).unknown(getThemeColors(isDarkMode).surface);\n};\n// Theme-aware sequential color scale\nconst getSequentialColorScale = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return (0,d3_scale__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theme.primary, theme.secondary)).domain([\n        0,\n        1\n    ]);\n};\n// Helper function to get color for a node using ONLY the admin-driven color map\n// This function must NOT use any static color scales for user-customizable categories.\nfunction getNodeColor(node, globalColors, isDarkMode = false) {\n    // Always use the admin-driven color map as the source of truth\n    // Fallback to a neutral gray if not found\n    return globalColors[node.category]?.[node.name] || globalColors[node.category]?.[node.name.toLowerCase()] || globalColors[node.category]?.[node.name.toUpperCase()] || \"#888888\" // fallback color\n    ;\n}\n// Accessibility utilities\nfunction getContrastRatio(foreground, background) {\n    const getLuminance = (color)=>{\n        const rgb = color.match(/\\d+/g)?.map(Number) || [\n            0,\n            0,\n            0\n        ];\n        const [r, g, b] = rgb.map((c)=>{\n            c = c / 255;\n            return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n        });\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n    const l1 = getLuminance(foreground);\n    const l2 = getLuminance(background);\n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n    return (lighter + 0.05) / (darker + 0.05);\n}\nfunction isAccessible(foreground, background) {\n    return getContrastRatio(foreground, background) >= 4.5;\n}\n// Color interpolation\nfunction interpolateColors(color1, color2, t) {\n    return (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(color1, color2)(t);\n}\n// Theme-aware color constants\nconst getColorConstants = (isDarkMode = false)=>{\n    const theme = getThemeColors(isDarkMode);\n    return {\n        node: {\n            default: theme.surface,\n            hover: theme.secondary,\n            selected: theme.primary\n        },\n        edge: {\n            default: theme.border,\n            hover: theme.secondary,\n            selected: theme.primary\n        },\n        text: {\n            default: theme.text.primary,\n            secondary: theme.text.secondary,\n            muted: theme.text.muted\n        },\n        background: {\n            default: theme.background,\n            surface: theme.surface\n        }\n    };\n};\n// Backward compatibility - deprecated functions\nconst theme = lightTheme;\nconst yearsColorScale = getYearsColorScale(false);\nconst learningStyleColors = getLearningStyleColors(false);\nconst shapedByColors = getShapedByColors(false);\nconst peakPerformanceColors = getPeakPerformanceColors(false);\nconst motivationColors = getMotivationColors(false);\nconst sequentialColorScale = getSequentialColorScale(false);\nconst colorConstants = getColorConstants(false);\nfunction getYearsCategory(years) {\n    if (years <= 5) return \"0-5\";\n    if (years <= 10) return \"6-10\";\n    if (years <= 15) return \"11-15\";\n    if (years <= 20) return \"16-20\";\n    return \"20+\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/colorUtils.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts":
/*!**********************************************************************!*\
  !*** ./src/components/DataVisualization/shared/useApprovedQuotes.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useApprovedQuotes: () => (/* binding */ useApprovedQuotes)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(ssr)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useApprovedQuotes auto */ \n\nfunction useApprovedQuotes() {\n    const [quotes, setQuotes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [currentQuoteIndex, setCurrentQuoteIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_1__.createClientComponentClient)();\n    // Fetch approved quotes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        async function fetchQuotes() {\n            try {\n                setIsLoading(true);\n                setError(null);\n                // Fetch directly from survey_responses where status is approved\n                const { data, error: fetchError } = await supabase.from(\"survey_responses\").select(`\n            unique_quality,\n            attendee:attendees (\n              first_name,\n              last_name,\n              is_anonymous\n            )\n          `).eq(\"status\", \"approved\").not(\"unique_quality\", \"is\", null).order(\"created_at\", {\n                    ascending: false\n                });\n                if (fetchError) throw fetchError;\n                if (mounted) {\n                    const filteredQuotes = data?.filter((item)=>item.unique_quality && item.unique_quality.trim() !== \"\").map((item)=>({\n                            unique_quality: item.unique_quality,\n                            attendee: Array.isArray(item.attendee) ? item.attendee[0] : item.attendee\n                        })) || [];\n                    console.log(\"Fetched quotes:\", filteredQuotes.length, filteredQuotes);\n                    setQuotes(filteredQuotes);\n                }\n            } catch (err) {\n                console.error(\"Error fetching quotes:\", err);\n                if (mounted) {\n                    setError(err instanceof Error ? err.message : \"Failed to fetch quotes\");\n                }\n            } finally{\n                if (mounted) {\n                    setIsLoading(false);\n                }\n            }\n        }\n        fetchQuotes();\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        supabase\n    ]);\n    // Rotate quotes every 8 seconds\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (quotes.length <= 1) return;\n        const interval = setInterval(()=>{\n            setCurrentQuoteIndex((prev)=>(prev + 1) % quotes.length);\n        }, 8000);\n        return ()=>clearInterval(interval);\n    }, [\n        quotes.length\n    ]);\n    const currentQuote = quotes[currentQuoteIndex];\n    const formatQuote = (quote)=>{\n        if (!quote) return null;\n        const { unique_quality, attendee } = quote;\n        let authorName = \"Anonymous\";\n        if (!attendee.is_anonymous && attendee.first_name) {\n            authorName = attendee.first_name;\n            if (attendee.last_name) {\n                authorName += ` ${attendee.last_name}`;\n            }\n        }\n        return {\n            text: unique_quality,\n            author: authorName\n        };\n    };\n    return {\n        quotes,\n        currentQuote: currentQuote ? formatQuote(currentQuote) : null,\n        isLoading,\n        error,\n        hasQuotes: quotes.length > 0\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlQXBwcm92ZWRRdW90ZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7dUVBRTRDO0FBQ2dDO0FBWXJFLFNBQVNHO0lBQ2QsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdKLCtDQUFRQSxDQUFrQixFQUFFO0lBQ3hELE1BQU0sQ0FBQ0ssbUJBQW1CQyxxQkFBcUIsR0FBR04sK0NBQVFBLENBQUM7SUFDM0QsTUFBTSxDQUFDTyxXQUFXQyxhQUFhLEdBQUdSLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ1MsT0FBT0MsU0FBUyxHQUFHViwrQ0FBUUEsQ0FBZ0I7SUFDbEQsTUFBTVcsV0FBV1YsMEZBQTJCQTtJQUU1Qyx3QkFBd0I7SUFDeEJGLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSWEsVUFBVTtRQUVkLGVBQWVDO1lBQ2IsSUFBSTtnQkFDRkwsYUFBYTtnQkFDYkUsU0FBUztnQkFFVCxnRUFBZ0U7Z0JBQ2hFLE1BQU0sRUFBRUksSUFBSSxFQUFFTCxPQUFPTSxVQUFVLEVBQUUsR0FBRyxNQUFNSixTQUN2Q0ssSUFBSSxDQUFDLG9CQUNMQyxNQUFNLENBQUMsQ0FBQzs7Ozs7OztVQU9ULENBQUMsRUFDQUMsRUFBRSxDQUFDLFVBQVUsWUFDYkMsR0FBRyxDQUFDLGtCQUFrQixNQUFNLE1BQzVCQyxLQUFLLENBQUMsY0FBYztvQkFBRUMsV0FBVztnQkFBTTtnQkFFMUMsSUFBSU4sWUFBWSxNQUFNQTtnQkFFdEIsSUFBSUgsU0FBUztvQkFDWCxNQUFNVSxpQkFBaUJSLE1BQ25CUyxPQUFPQyxDQUFBQSxPQUFRQSxLQUFLQyxjQUFjLElBQUlELEtBQUtDLGNBQWMsQ0FBQ0MsSUFBSSxPQUFPLElBQ3RFQyxJQUFJSCxDQUFBQSxPQUFTOzRCQUNaQyxnQkFBZ0JELEtBQUtDLGNBQWM7NEJBQ25DRyxVQUFVQyxNQUFNQyxPQUFPLENBQUNOLEtBQUtJLFFBQVEsSUFBSUosS0FBS0ksUUFBUSxDQUFDLEVBQUUsR0FBR0osS0FBS0ksUUFBUTt3QkFDM0UsT0FBTyxFQUFFO29CQUVYRyxRQUFRQyxHQUFHLENBQUMsbUJBQW1CVixlQUFlVyxNQUFNLEVBQUVYO29CQUN0RGxCLFVBQVVrQjtnQkFDWjtZQUNGLEVBQUUsT0FBT1ksS0FBSztnQkFDWkgsUUFBUXRCLEtBQUssQ0FBQywwQkFBMEJ5QjtnQkFDeEMsSUFBSXRCLFNBQVM7b0JBQ1hGLFNBQVN3QixlQUFlQyxRQUFRRCxJQUFJRSxPQUFPLEdBQUc7Z0JBQ2hEO1lBQ0YsU0FBVTtnQkFDUixJQUFJeEIsU0FBUztvQkFDWEosYUFBYTtnQkFDZjtZQUNGO1FBQ0Y7UUFFQUs7UUFFQSxPQUFPO1lBQ0xELFVBQVU7UUFDWjtJQUNGLEdBQUc7UUFBQ0Q7S0FBUztJQUViLGdDQUFnQztJQUNoQ1osZ0RBQVNBLENBQUM7UUFDUixJQUFJSSxPQUFPOEIsTUFBTSxJQUFJLEdBQUc7UUFFeEIsTUFBTUksV0FBV0MsWUFBWTtZQUMzQmhDLHFCQUFxQmlDLENBQUFBLE9BQVEsQ0FBQ0EsT0FBTyxLQUFLcEMsT0FBTzhCLE1BQU07UUFDekQsR0FBRztRQUVILE9BQU8sSUFBTU8sY0FBY0g7SUFDN0IsR0FBRztRQUFDbEMsT0FBTzhCLE1BQU07S0FBQztJQUVsQixNQUFNUSxlQUFldEMsTUFBTSxDQUFDRSxrQkFBa0I7SUFFOUMsTUFBTXFDLGNBQWMsQ0FBQ0M7UUFDbkIsSUFBSSxDQUFDQSxPQUFPLE9BQU87UUFFbkIsTUFBTSxFQUFFbEIsY0FBYyxFQUFFRyxRQUFRLEVBQUUsR0FBR2U7UUFDckMsSUFBSUMsYUFBYTtRQUVqQixJQUFJLENBQUNoQixTQUFTaUIsWUFBWSxJQUFJakIsU0FBU2tCLFVBQVUsRUFBRTtZQUNqREYsYUFBYWhCLFNBQVNrQixVQUFVO1lBQ2hDLElBQUlsQixTQUFTbUIsU0FBUyxFQUFFO2dCQUN0QkgsY0FBYyxDQUFDLENBQUMsRUFBRWhCLFNBQVNtQixTQUFTLENBQUMsQ0FBQztZQUN4QztRQUNGO1FBRUEsT0FBTztZQUNMQyxNQUFNdkI7WUFDTndCLFFBQVFMO1FBQ1Y7SUFDRjtJQUVBLE9BQU87UUFDTHpDO1FBQ0FzQyxjQUFjQSxlQUFlQyxZQUFZRCxnQkFBZ0I7UUFDekRsQztRQUNBRTtRQUNBeUMsV0FBVy9DLE9BQU84QixNQUFNLEdBQUc7SUFDN0I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbi9zaGFyZWQvdXNlQXBwcm92ZWRRdW90ZXMudHM/ZjZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRDb21wb25lbnRDbGllbnQgfSBmcm9tICdAc3VwYWJhc2UvYXV0aC1oZWxwZXJzLW5leHRqcyc7XG5pbXBvcnQgdHlwZSB7IERhdGFiYXNlIH0gZnJvbSAnQC9saWIvc3VwYWJhc2UvdHlwZXMnO1xuXG5pbnRlcmZhY2UgQXBwcm92ZWRRdW90ZSB7XG4gIHVuaXF1ZV9xdWFsaXR5OiBzdHJpbmc7XG4gIGF0dGVuZGVlOiB7XG4gICAgZmlyc3RfbmFtZTogc3RyaW5nO1xuICAgIGxhc3RfbmFtZTogc3RyaW5nIHwgbnVsbDtcbiAgICBpc19hbm9ueW1vdXM6IGJvb2xlYW47XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBcHByb3ZlZFF1b3RlcygpIHtcbiAgY29uc3QgW3F1b3Rlcywgc2V0UXVvdGVzXSA9IHVzZVN0YXRlPEFwcHJvdmVkUXVvdGVbXT4oW10pO1xuICBjb25zdCBbY3VycmVudFF1b3RlSW5kZXgsIHNldEN1cnJlbnRRdW90ZUluZGV4XSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50Q29tcG9uZW50Q2xpZW50PERhdGFiYXNlPigpO1xuXG4gIC8vIEZldGNoIGFwcHJvdmVkIHF1b3Rlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBtb3VudGVkID0gdHJ1ZTtcblxuICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoUXVvdGVzKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgICBzZXRFcnJvcihudWxsKTtcblxuICAgICAgICAvLyBGZXRjaCBkaXJlY3RseSBmcm9tIHN1cnZleV9yZXNwb25zZXMgd2hlcmUgc3RhdHVzIGlzIGFwcHJvdmVkXG4gICAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3I6IGZldGNoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgICAgLmZyb20oJ3N1cnZleV9yZXNwb25zZXMnKVxuICAgICAgICAgIC5zZWxlY3QoYFxuICAgICAgICAgICAgdW5pcXVlX3F1YWxpdHksXG4gICAgICAgICAgICBhdHRlbmRlZTphdHRlbmRlZXMgKFxuICAgICAgICAgICAgICBmaXJzdF9uYW1lLFxuICAgICAgICAgICAgICBsYXN0X25hbWUsXG4gICAgICAgICAgICAgIGlzX2Fub255bW91c1xuICAgICAgICAgICAgKVxuICAgICAgICAgIGApXG4gICAgICAgICAgLmVxKCdzdGF0dXMnLCAnYXBwcm92ZWQnKVxuICAgICAgICAgIC5ub3QoJ3VuaXF1ZV9xdWFsaXR5JywgJ2lzJywgbnVsbClcbiAgICAgICAgICAub3JkZXIoJ2NyZWF0ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSk7XG5cbiAgICAgICAgaWYgKGZldGNoRXJyb3IpIHRocm93IGZldGNoRXJyb3I7XG5cbiAgICAgICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgICAgICBjb25zdCBmaWx0ZXJlZFF1b3RlcyA9IGRhdGFcbiAgICAgICAgICAgID8uZmlsdGVyKGl0ZW0gPT4gaXRlbS51bmlxdWVfcXVhbGl0eSAmJiBpdGVtLnVuaXF1ZV9xdWFsaXR5LnRyaW0oKSAhPT0gJycpXG4gICAgICAgICAgICAubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICAgICAgdW5pcXVlX3F1YWxpdHk6IGl0ZW0udW5pcXVlX3F1YWxpdHksXG4gICAgICAgICAgICAgIGF0dGVuZGVlOiBBcnJheS5pc0FycmF5KGl0ZW0uYXR0ZW5kZWUpID8gaXRlbS5hdHRlbmRlZVswXSA6IGl0ZW0uYXR0ZW5kZWVcbiAgICAgICAgICAgIH0pKSB8fCBbXTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zb2xlLmxvZygnRmV0Y2hlZCBxdW90ZXM6JywgZmlsdGVyZWRRdW90ZXMubGVuZ3RoLCBmaWx0ZXJlZFF1b3Rlcyk7XG4gICAgICAgICAgc2V0UXVvdGVzKGZpbHRlcmVkUXVvdGVzKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHF1b3RlczonLCBlcnIpO1xuICAgICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGZldGNoIHF1b3RlcycpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAobW91bnRlZCkge1xuICAgICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmZXRjaFF1b3RlcygpO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIG1vdW50ZWQgPSBmYWxzZTtcbiAgICB9O1xuICB9LCBbc3VwYWJhc2VdKTtcblxuICAvLyBSb3RhdGUgcXVvdGVzIGV2ZXJ5IDggc2Vjb25kc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChxdW90ZXMubGVuZ3RoIDw9IDEpIHJldHVybjtcblxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgc2V0Q3VycmVudFF1b3RlSW5kZXgocHJldiA9PiAocHJldiArIDEpICUgcXVvdGVzLmxlbmd0aCk7XG4gICAgfSwgODAwMCk7XG5cbiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0sIFtxdW90ZXMubGVuZ3RoXSk7XG5cbiAgY29uc3QgY3VycmVudFF1b3RlID0gcXVvdGVzW2N1cnJlbnRRdW90ZUluZGV4XTtcblxuICBjb25zdCBmb3JtYXRRdW90ZSA9IChxdW90ZTogQXBwcm92ZWRRdW90ZSkgPT4ge1xuICAgIGlmICghcXVvdGUpIHJldHVybiBudWxsO1xuICAgIFxuICAgIGNvbnN0IHsgdW5pcXVlX3F1YWxpdHksIGF0dGVuZGVlIH0gPSBxdW90ZTtcbiAgICBsZXQgYXV0aG9yTmFtZSA9ICdBbm9ueW1vdXMnO1xuICAgIFxuICAgIGlmICghYXR0ZW5kZWUuaXNfYW5vbnltb3VzICYmIGF0dGVuZGVlLmZpcnN0X25hbWUpIHtcbiAgICAgIGF1dGhvck5hbWUgPSBhdHRlbmRlZS5maXJzdF9uYW1lO1xuICAgICAgaWYgKGF0dGVuZGVlLmxhc3RfbmFtZSkge1xuICAgICAgICBhdXRob3JOYW1lICs9IGAgJHthdHRlbmRlZS5sYXN0X25hbWV9YDtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHRleHQ6IHVuaXF1ZV9xdWFsaXR5LFxuICAgICAgYXV0aG9yOiBhdXRob3JOYW1lXG4gICAgfTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHF1b3RlcyxcbiAgICBjdXJyZW50UXVvdGU6IGN1cnJlbnRRdW90ZSA/IGZvcm1hdFF1b3RlKGN1cnJlbnRRdW90ZSkgOiBudWxsLFxuICAgIGlzTG9hZGluZyxcbiAgICBlcnJvcixcbiAgICBoYXNRdW90ZXM6IHF1b3Rlcy5sZW5ndGggPiAwXG4gIH07XG59ICJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImNyZWF0ZUNsaWVudENvbXBvbmVudENsaWVudCIsInVzZUFwcHJvdmVkUXVvdGVzIiwicXVvdGVzIiwic2V0UXVvdGVzIiwiY3VycmVudFF1b3RlSW5kZXgiLCJzZXRDdXJyZW50UXVvdGVJbmRleCIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJzdXBhYmFzZSIsIm1vdW50ZWQiLCJmZXRjaFF1b3RlcyIsImRhdGEiLCJmZXRjaEVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwibm90Iiwib3JkZXIiLCJhc2NlbmRpbmciLCJmaWx0ZXJlZFF1b3RlcyIsImZpbHRlciIsIml0ZW0iLCJ1bmlxdWVfcXVhbGl0eSIsInRyaW0iLCJtYXAiLCJhdHRlbmRlZSIsIkFycmF5IiwiaXNBcnJheSIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJlcnIiLCJFcnJvciIsIm1lc3NhZ2UiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwicHJldiIsImNsZWFySW50ZXJ2YWwiLCJjdXJyZW50UXVvdGUiLCJmb3JtYXRRdW90ZSIsInF1b3RlIiwiYXV0aG9yTmFtZSIsImlzX2Fub255bW91cyIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJ0ZXh0IiwiYXV0aG9yIiwiaGFzUXVvdGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/useApprovedQuotes.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts":
/*!*************************************************************************!*\
  !*** ./src/components/DataVisualization/shared/useVisualizationData.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useVisualizationData: () => (/* binding */ useVisualizationData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(ssr)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useVisualizationData auto */ \n\n// Fallback mock data\nconst mockData = [\n    {\n        id: \"mock-1\",\n        attendee_id: \"mock-attendee-1\",\n        years_at_medtronic: 5,\n        learning_style: \"visual\",\n        shaped_by: \"mentor\",\n        peak_performance: \"Extrovert, Morning\",\n        motivation: \"growth\",\n        unique_quality: \"Mock response 1\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-1\",\n            first_name: \"John\",\n            last_name: \"Doe\",\n            email: \"john@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    },\n    {\n        id: \"mock-2\",\n        attendee_id: \"mock-attendee-2\",\n        years_at_medtronic: 10,\n        learning_style: \"auditory\",\n        shaped_by: \"challenge\",\n        peak_performance: \"Introvert, Morning\",\n        motivation: \"impact\",\n        unique_quality: \"Mock response 2\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-2\",\n            first_name: \"Jane\",\n            last_name: \"Smith\",\n            email: \"jane@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    },\n    {\n        id: \"mock-3\",\n        attendee_id: \"mock-attendee-3\",\n        years_at_medtronic: 15,\n        learning_style: \"kinesthetic\",\n        shaped_by: \"success\",\n        peak_performance: \"Ambivert, Morning\",\n        motivation: \"purpose\",\n        unique_quality: \"Mock response 3\",\n        created_at: \"2024-01-01T00:00:00Z\",\n        updated_at: \"2024-01-01T00:00:00Z\",\n        attendee: {\n            id: \"mock-attendee-3\",\n            first_name: \"Bob\",\n            last_name: \"Johnson\",\n            email: \"bob@example.com\",\n            is_anonymous: false,\n            created_at: \"2024-01-01T00:00:00Z\",\n            updated_at: \"2024-01-01T00:00:00Z\"\n        }\n    }\n];\nfunction useVisualizationData({ realtime = true } = {}) {\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isMockData, setIsMockData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Only log when state changes, not on every render\n    const prevDataLength = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data.length);\n    const prevIsLoading = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isLoading);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (prevDataLength.current !== data.length || prevIsLoading.current !== isLoading) {\n            console.log(\"\\uD83D\\uDCCA useVisualizationData state changed:\", {\n                dataLength: data.length,\n                isLoading,\n                error,\n                isMockData\n            });\n            prevDataLength.current = data.length;\n            prevIsLoading.current = isLoading;\n        }\n    }, [\n        data.length,\n        isLoading,\n        error,\n        isMockData\n    ]);\n    // Validate survey response data\n    const validateResponse = (response)=>{\n        if (!response) return false;\n        if (typeof response.years_at_medtronic !== \"number\" || response.years_at_medtronic < 0) return false;\n        if (!response.learning_style || typeof response.learning_style !== \"string\") return false;\n        if (!response.shaped_by || typeof response.shaped_by !== \"string\") return false;\n        if (!response.peak_performance || typeof response.peak_performance !== \"string\") return false;\n        if (!response.motivation || typeof response.motivation !== \"string\") return false;\n        if (!response.attendee || typeof response.attendee !== \"object\") return false;\n        return true;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        let retryCount = 0;\n        const MAX_RETRIES = 3;\n        let channel = null;\n        async function fetchData(isRetry = false) {\n            try {\n                if (isRetry) {\n                    setError(\"Retrying connection...\");\n                } else {\n                    setIsLoading(true);\n                    setError(null);\n                }\n                const { data: responses, error: fetchError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"survey_responses\").select(`\n            *,\n            attendee:attendees(*)\n          `);\n                if (fetchError) {\n                    throw new Error(fetchError.message);\n                }\n                if (mounted) {\n                    if (responses && responses.length > 0) {\n                        // Validate and deduplicate responses\n                        const validResponses = responses.filter(validateResponse).reduce((acc, curr)=>{\n                            const existingIndex = acc.findIndex((r)=>r.attendee_id === curr.attendee_id);\n                            if (existingIndex === -1) {\n                                acc.push(curr);\n                            } else if (new Date(curr.updated_at) > new Date(acc[existingIndex].updated_at)) {\n                                acc[existingIndex] = curr;\n                            }\n                            return acc;\n                        }, []);\n                        console.log(\"✅ Loaded real data:\", {\n                            totalResponses: responses.length,\n                            validResponses: validResponses.length,\n                            sampleData: validResponses.slice(0, 2)\n                        });\n                        setData(validResponses);\n                        setIsMockData(false);\n                    } else {\n                        console.warn(\"⚠️ No data available, using mock data\");\n                        setData(mockData);\n                        setIsMockData(true);\n                    }\n                    setError(null);\n                }\n            } catch (err) {\n                console.error(\"❌ Error fetching data:\", err);\n                if (mounted) {\n                    if (isRetry && retryCount < MAX_RETRIES) {\n                        retryCount++;\n                        console.log(`🔄 Retrying data fetch (${retryCount}/${MAX_RETRIES}) in ${1000 * retryCount}ms`);\n                        setTimeout(()=>fetchData(true), 1000 * retryCount);\n                    } else {\n                        setError(err instanceof Error ? err.message : \"Failed to fetch data\");\n                        console.log(\"\\uD83D\\uDD04 Fallback to mock data due to error\");\n                        setData(mockData);\n                        setIsMockData(true);\n                    }\n                }\n            } finally{\n                if (mounted) {\n                    setIsLoading(false);\n                }\n            }\n        }\n        fetchData();\n        if (realtime) {\n            channel = _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.channel(\"survey_responses_changes\").on(\"postgres_changes\", {\n                event: \"*\",\n                schema: \"public\",\n                table: \"survey_responses\"\n            }, async (payload)=>{\n                if (!mounted) return;\n                try {\n                    if (payload.eventType === \"INSERT\" || payload.eventType === \"UPDATE\") {\n                        const { data: response, error: fetchError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"survey_responses\").select(`\n                    *,\n                    attendee:attendees(*)\n                  `).eq(\"id\", payload.new.id).single();\n                        if (fetchError) throw new Error(fetchError.message);\n                        if (response && validateResponse(response)) {\n                            setData((currentData)=>{\n                                const newData = [\n                                    ...currentData\n                                ];\n                                const index = newData.findIndex((item)=>item.id === response.id);\n                                if (index !== -1) {\n                                    newData[index] = response;\n                                } else {\n                                    newData.push(response);\n                                }\n                                return newData;\n                            });\n                        }\n                    } else if (payload.eventType === \"DELETE\") {\n                        setData((currentData)=>currentData.filter((item)=>item.id !== payload.old.id));\n                    }\n                } catch (err) {\n                    console.error(\"Error processing realtime update:\", err);\n                    setError(err instanceof Error ? err.message : \"Failed to process update\");\n                }\n            }).subscribe((status)=>{\n                if (status === \"SUBSCRIBED\") {\n                    console.log(\"Successfully subscribed to realtime updates\");\n                } else {\n                    console.error(\"Failed to subscribe to realtime updates\");\n                    setError(\"Realtime connection failed\");\n                }\n            });\n            return ()=>{\n                if (channel) {\n                    _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.removeChannel(channel);\n                }\n                mounted = false;\n            };\n        }\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        realtime\n    ]);\n    return {\n        data,\n        isLoading,\n        error,\n        isMockData\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/components/DataVisualization/shared/useVisualizationData.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_3__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nconst Layout = ({ children })=>{\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname)() || \"\";\n    const isAdmin = pathname.startsWith(\"/admin\");\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"bg-white shadow-sm w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                    className: \"w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center h-16 w-full px-4 sm:px-6 lg:px-8 max-w-none\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: \"/\",\n                                    className: \"flex items-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xl font-bold text-gray-900\",\n                                        children: \"WE Summit\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                        lineNumber: 21,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                    lineNumber: 20,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 19,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center\",\n                                children: !isAdmin && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                    href: \"/admin\",\n                                    className: \"text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium\",\n                                    children: \"Admin Panel\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                    lineNumber: 26,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 24,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 17,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 16,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-grow\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n                    children: children\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 39,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: \"bg-white w-full\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"py-4 w-full px-4 sm:px-6 lg:px-8\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-center text-sm text-gray-500\",\n                        children: [\n                            \"\\xa9 \",\n                            new Date().getFullYear(),\n                            \" Medtronic WE Summit. All rights reserved.\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 46,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                    lineNumber: 45,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\Layout.tsx\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Layout);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9MYXlvdXQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDMEI7QUFDRztBQUNpQjtBQU05QyxNQUFNRyxTQUFnQyxDQUFDLEVBQUVDLFFBQVEsRUFBRTtJQUNqRCxNQUFNQyxXQUFXSCw0REFBV0EsTUFBTTtJQUNsQyxNQUFNSSxVQUFVRCxTQUFTRSxVQUFVLENBQUM7SUFFcEMscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBT0QsV0FBVTswQkFDaEIsNEVBQUNFO29CQUFJRixXQUFVOzhCQUNiLDRFQUFDRDt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNEO2dDQUFJQyxXQUFVOzBDQUNiLDRFQUFDUixrREFBSUE7b0NBQUNXLE1BQUs7b0NBQUlILFdBQVU7OENBQ3ZCLDRFQUFDSTt3Q0FBS0osV0FBVTtrREFBa0M7Ozs7Ozs7Ozs7Ozs7Ozs7MENBR3RELDhEQUFDRDtnQ0FBSUMsV0FBVTswQ0FDWixDQUFDSCx5QkFDQSw4REFBQ0wsa0RBQUlBO29DQUNIVyxNQUFLO29DQUNMSCxXQUFVOzhDQUNYOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBU1gsOERBQUNLO2dCQUFLTCxXQUFVOzBCQUNkLDRFQUFDRDtvQkFBSUMsV0FBVTs4QkFDWkw7Ozs7Ozs7Ozs7OzBCQUlMLDhEQUFDVztnQkFBT04sV0FBVTswQkFDaEIsNEVBQUNEO29CQUFJQyxXQUFVOzhCQUNiLDRFQUFDTzt3QkFBRVAsV0FBVTs7NEJBQW9DOzRCQUM1QyxJQUFJUSxPQUFPQyxXQUFXOzRCQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU14QztBQUVBLGlFQUFlZixNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9jb21wb25lbnRzL0xheW91dC50c3g/ZGU4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IHsgdXNlUGF0aG5hbWUgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xuXG5pbnRlcmZhY2UgTGF5b3V0UHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5jb25zdCBMYXlvdXQ6IFJlYWN0LkZDPExheW91dFByb3BzPiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZSgpIHx8ICcnO1xuICBjb25zdCBpc0FkbWluID0gcGF0aG5hbWUuc3RhcnRzV2l0aCgnL2FkbWluJyk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGZsZXgtY29sXCI+XG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cImJnLXdoaXRlIHNoYWRvdy1zbSB3LWZ1bGxcIj5cbiAgICAgICAgPG5hdiBjbGFzc05hbWU9XCJ3LWZ1bGxcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBoLTE2IHctZnVsbCBweC00IHNtOnB4LTYgbGc6cHgtOCBtYXgtdy1ub25lXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhcIj5cbiAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9cIiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1ib2xkIHRleHQtZ3JheS05MDBcIj5XRSBTdW1taXQ8L3NwYW4+XG4gICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICB7IWlzQWRtaW4gJiYgKFxuICAgICAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgICAgICBocmVmPVwiL2FkbWluXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDAgaG92ZXI6dGV4dC1ncmF5LTkwMCBweC0zIHB5LTIgcm91bmRlZC1tZCB0ZXh0LXNtIGZvbnQtbWVkaXVtXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICBBZG1pbiBQYW5lbFxuICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25hdj5cbiAgICAgIDwvaGVhZGVyPlxuXG4gICAgICA8bWFpbiBjbGFzc05hbWU9XCJmbGV4LWdyb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy03eGwgbXgtYXV0byBweS02IHNtOnB4LTYgbGc6cHgtOFwiPlxuICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L21haW4+XG5cbiAgICAgIDxmb290ZXIgY2xhc3NOYW1lPVwiYmctd2hpdGUgdy1mdWxsXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHktNCB3LWZ1bGwgcHgtNCBzbTpweC02IGxnOnB4LThcIj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LXNtIHRleHQtZ3JheS01MDBcIj5cbiAgICAgICAgICAgIMKpIHtuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCl9IE1lZHRyb25pYyBXRSBTdW1taXQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZm9vdGVyPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTGF5b3V0OyAiXSwibmFtZXMiOlsiUmVhY3QiLCJMaW5rIiwidXNlUGF0aG5hbWUiLCJMYXlvdXQiLCJjaGlsZHJlbiIsInBhdGhuYW1lIiwiaXNBZG1pbiIsInN0YXJ0c1dpdGgiLCJkaXYiLCJjbGFzc05hbWUiLCJoZWFkZXIiLCJuYXYiLCJocmVmIiwic3BhbiIsIm1haW4iLCJmb290ZXIiLCJwIiwiRGF0ZSIsImdldEZ1bGxZZWFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/components/Layout.tsx\n");

/***/ }),

/***/ "(ssr)/./src/components/colorConfig.ts":
/*!***************************************!*\
  !*** ./src/components/colorConfig.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CATEGORY_COLORS: () => (/* binding */ CATEGORY_COLORS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// This file is managed by the /admin/controls dashboard (Color Configuration section)\n// To add or edit colors, use the Color Configuration section in the admin panel.\n// Shared color configuration for category labels (social orientation, time of day, etc.)\n// Add more as needed for new categories\nconst CATEGORY_COLORS = {\n    \"ambivert, night\": \"#8e44ad\",\n    \"ambivert, morning\": \"#2980b9\",\n    \"extrovert, morning\": \"#27ae60\",\n    \"introvert, morning\": \"#f39c12\",\n    \"introvert, night\": \"#c0392b\",\n    \"extrovert, night\": \"#16a085\",\n    // Case/spacing variants\n    \"Ambivert, Night\": \"#8e44ad\",\n    \"Ambivert, Morning\": \"#2980b9\",\n    \"Extrovert, Morning\": \"#27ae60\",\n    \"Introvert, Morning\": \"#f39c12\",\n    \"Introvert, Night\": \"#c0392b\",\n    \"Extrovert, Night\": \"#16a085\",\n    // New categories\n    \"team\": \"#00b894\",\n    \"success\": \"#fdcb6e\",\n    \"extrovert, evening\": \"#0984e3\",\n    // Case/spacing variants\n    \"Team\": \"#00b894\",\n    \"Success\": \"#fdcb6e\",\n    \"Extrovert, Evening\": \"#0984e3\"\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CATEGORY_COLORS);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9jb2xvckNvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUN0RixpRkFBaUY7QUFFakYseUZBQXlGO0FBQ3pGLHdDQUF3QztBQUNqQyxNQUFNQSxrQkFBMEM7SUFDckQsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsd0JBQXdCO0lBQ3hCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixRQUFRO0lBQ1IsV0FBVztJQUNYLHNCQUFzQjtJQUN0Qix3QkFBd0I7SUFDeEIsUUFBUTtJQUNSLFdBQVc7SUFDWCxzQkFBc0I7QUFFeEIsRUFBRTtBQUVGLGlFQUFlQSxlQUFlQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9jb21wb25lbnRzL2NvbG9yQ29uZmlnLnRzPzg5YzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIG1hbmFnZWQgYnkgdGhlIC9hZG1pbi9jb250cm9scyBkYXNoYm9hcmQgKENvbG9yIENvbmZpZ3VyYXRpb24gc2VjdGlvbilcclxuLy8gVG8gYWRkIG9yIGVkaXQgY29sb3JzLCB1c2UgdGhlIENvbG9yIENvbmZpZ3VyYXRpb24gc2VjdGlvbiBpbiB0aGUgYWRtaW4gcGFuZWwuXHJcblxyXG4vLyBTaGFyZWQgY29sb3IgY29uZmlndXJhdGlvbiBmb3IgY2F0ZWdvcnkgbGFiZWxzIChzb2NpYWwgb3JpZW50YXRpb24sIHRpbWUgb2YgZGF5LCBldGMuKVxyXG4vLyBBZGQgbW9yZSBhcyBuZWVkZWQgZm9yIG5ldyBjYXRlZ29yaWVzXHJcbmV4cG9ydCBjb25zdCBDQVRFR09SWV9DT0xPUlM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XHJcbiAgJ2FtYml2ZXJ0LCBuaWdodCc6ICcjOGU0NGFkJyxcclxuICAnYW1iaXZlcnQsIG1vcm5pbmcnOiAnIzI5ODBiOScsXHJcbiAgJ2V4dHJvdmVydCwgbW9ybmluZyc6ICcjMjdhZTYwJyxcclxuICAnaW50cm92ZXJ0LCBtb3JuaW5nJzogJyNmMzljMTInLFxyXG4gICdpbnRyb3ZlcnQsIG5pZ2h0JzogJyNjMDM5MmInLFxyXG4gICdleHRyb3ZlcnQsIG5pZ2h0JzogJyMxNmEwODUnLFxyXG4gIC8vIENhc2Uvc3BhY2luZyB2YXJpYW50c1xyXG4gICdBbWJpdmVydCwgTmlnaHQnOiAnIzhlNDRhZCcsXHJcbiAgJ0FtYml2ZXJ0LCBNb3JuaW5nJzogJyMyOTgwYjknLFxyXG4gICdFeHRyb3ZlcnQsIE1vcm5pbmcnOiAnIzI3YWU2MCcsXHJcbiAgJ0ludHJvdmVydCwgTW9ybmluZyc6ICcjZjM5YzEyJyxcclxuICAnSW50cm92ZXJ0LCBOaWdodCc6ICcjYzAzOTJiJyxcclxuICAnRXh0cm92ZXJ0LCBOaWdodCc6ICcjMTZhMDg1JyxcclxuICAvLyBOZXcgY2F0ZWdvcmllc1xyXG4gICd0ZWFtJzogJyMwMGI4OTQnLFxyXG4gICdzdWNjZXNzJzogJyNmZGNiNmUnLFxyXG4gICdleHRyb3ZlcnQsIGV2ZW5pbmcnOiAnIzA5ODRlMycsXHJcbiAgLy8gQ2FzZS9zcGFjaW5nIHZhcmlhbnRzXHJcbiAgJ1RlYW0nOiAnIzAwYjg5NCcsXHJcbiAgJ1N1Y2Nlc3MnOiAnI2ZkY2I2ZScsXHJcbiAgJ0V4dHJvdmVydCwgRXZlbmluZyc6ICcjMDk4NGUzJyxcclxuICAvLyBBZGQgbW9yZSB2YXJpYW50cyBhcyBuZWVkZWRcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENBVEVHT1JZX0NPTE9SUzsgIl0sIm5hbWVzIjpbIkNBVEVHT1JZX0NPTE9SUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/colorConfig.ts\n");

/***/ }),

/***/ "(ssr)/./src/components/shared/GlobalControlsNav.tsx":
/*!*****************************************************!*\
  !*** ./src/components/shared/GlobalControlsNav.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GlobalControlsNav)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_context_AppContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/context/AppContext */ \"(ssr)/./src/lib/context/AppContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nfunction GlobalControlsNav() {\n    const { settings } = (0,_lib_context_AppContext__WEBPACK_IMPORTED_MODULE_3__.useAppContext)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed top-4 left-4 z-50\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n            href: \"/admin/controls\",\n            className: \"inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    className: \"w-5 h-5 mr-2 text-gray-600 dark:text-gray-300\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 22,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 28,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 16,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"text-sm font-medium text-gray-700 dark:text-gray-300\",\n                    children: \"Global Controls\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 35,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"ml-2 flex space-x-1\",\n                    children: [\n                        settings.isDarkMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-blue-500 rounded-full\",\n                            title: \"Dark Mode Active\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 42,\n                            columnNumber: 13\n                        }, this),\n                        !settings.useTestData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-green-500 rounded-full\",\n                            title: \"Live Data Active\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 13\n                        }, this),\n                        !settings.isAutoPlayEnabled && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-2 h-2 bg-yellow-500 rounded-full\",\n                            title: \"Auto Play Disabled\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                            lineNumber: 48,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n                    lineNumber: 40,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n            lineNumber: 12,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\components\\\\shared\\\\GlobalControlsNav.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvY29tcG9uZW50cy9zaGFyZWQvR2xvYmFsQ29udHJvbHNOYXYudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUwQjtBQUNHO0FBQzRCO0FBRTFDLFNBQVNHO0lBQ3RCLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUdGLHNFQUFhQTtJQUVsQyxxQkFDRSw4REFBQ0c7UUFBSUMsV0FBVTtrQkFDYiw0RUFBQ0wsa0RBQUlBO1lBQ0hNLE1BQUs7WUFDTEQsV0FBVTs7OEJBRVYsOERBQUNFO29CQUNDRixXQUFVO29CQUNWRyxNQUFLO29CQUNMQyxRQUFPO29CQUNQQyxTQUFROztzQ0FFUiw4REFBQ0M7NEJBQ0NDLGVBQWM7NEJBQ2RDLGdCQUFlOzRCQUNmQyxhQUFhOzRCQUNiQyxHQUFFOzs7Ozs7c0NBRUosOERBQUNKOzRCQUNDQyxlQUFjOzRCQUNkQyxnQkFBZTs0QkFDZkMsYUFBYTs0QkFDYkMsR0FBRTs7Ozs7Ozs7Ozs7OzhCQUdOLDhEQUFDQztvQkFBS1gsV0FBVTs4QkFBdUQ7Ozs7Ozs4QkFLdkUsOERBQUNEO29CQUFJQyxXQUFVOzt3QkFDWkYsU0FBU2MsVUFBVSxrQkFDbEIsOERBQUNiOzRCQUFJQyxXQUFVOzRCQUFtQ2EsT0FBTTs7Ozs7O3dCQUV6RCxDQUFDZixTQUFTZ0IsV0FBVyxrQkFDcEIsOERBQUNmOzRCQUFJQyxXQUFVOzRCQUFvQ2EsT0FBTTs7Ozs7O3dCQUUxRCxDQUFDZixTQUFTaUIsaUJBQWlCLGtCQUMxQiw4REFBQ2hCOzRCQUFJQyxXQUFVOzRCQUFxQ2EsT0FBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNdEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2NvbXBvbmVudHMvc2hhcmVkL0dsb2JhbENvbnRyb2xzTmF2LnRzeD80ZWUzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyB1c2VBcHBDb250ZXh0IH0gZnJvbSAnQC9saWIvY29udGV4dC9BcHBDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2xvYmFsQ29udHJvbHNOYXYoKSB7XG4gIGNvbnN0IHsgc2V0dGluZ3MgfSA9IHVzZUFwcENvbnRleHQoKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgdG9wLTQgbGVmdC00IHotNTBcIj5cbiAgICAgIDxMaW5rXG4gICAgICAgIGhyZWY9XCIvYWRtaW4vY29udHJvbHNcIlxuICAgICAgICBjbGFzc05hbWU9XCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcHgtNCBweS0yIGJnLXdoaXRlIGRhcms6YmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCBkYXJrOmJvcmRlci1ncmF5LTYwMCByb3VuZGVkLWxnIHNoYWRvdy1sZyBob3ZlcjpiZy1ncmF5LTUwIGRhcms6aG92ZXI6YmctZ3JheS03MDAgdHJhbnNpdGlvbi1jb2xvcnMgZHVyYXRpb24tMjAwXCJcbiAgICAgID5cbiAgICAgICAgPHN2Z1xuICAgICAgICAgIGNsYXNzTmFtZT1cInctNSBoLTUgbXItMiB0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTMwMFwiXG4gICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgID5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIlxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9ezJ9XG4gICAgICAgICAgICBkPVwiTTEwLjMyNSA0LjMxN2MuNDI2LTEuNzU2IDIuOTI0LTEuNzU2IDMuMzUgMGExLjcyNCAxLjcyNCAwIDAwMi41NzMgMS4wNjZjMS41NDMtLjk0IDMuMzEuODI2IDIuMzcgMi4zN2ExLjcyNCAxLjcyNCAwIDAwMS4wNjUgMi41NzJjMS43NTYuNDI2IDEuNzU2IDIuOTI0IDAgMy4zNWExLjcyNCAxLjcyNCAwIDAwLTEuMDY2IDIuNTczYy45NCAxLjU0My0uODI2IDMuMzEtMi4zNyAyLjM3YTEuNzI0IDEuNzI0IDAgMDAtMi41NzIgMS4wNjVjLS40MjYgMS43NTYtMi45MjQgMS43NTYtMy4zNSAwYTEuNzI0IDEuNzI0IDAgMDAtMi41NzMtMS4wNjZjLTEuNTQzLjk0LTMuMzEtLjgyNi0yLjM3LTIuMzdhMS43MjQgMS43MjQgMCAwMC0xLjA2NS0yLjU3MmMtMS43NTYtLjQyNi0xLjc1Ni0yLjkyNCAwLTMuMzVhMS43MjQgMS43MjQgMCAwMDEuMDY2LTIuNTczYy0uOTQtMS41NDMuODI2LTMuMzEgMi4zNy0yLjM3Ljk5Ni42MDggMi4yOTYuMDcgMi41NzItMS4wNjV6XCJcbiAgICAgICAgICAvPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBzdHJva2VMaW5lY2FwPVwicm91bmRcIlxuICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgICAgICBzdHJva2VXaWR0aD17Mn1cbiAgICAgICAgICAgIGQ9XCJNMTUgMTJhMyAzIDAgMTEtNiAwIDMgMyAwIDAxNiAwelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBkYXJrOnRleHQtZ3JheS0zMDBcIj5cbiAgICAgICAgICBHbG9iYWwgQ29udHJvbHNcbiAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgey8qIFN0YXR1cyBpbmRpY2F0b3JzICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTIgZmxleCBzcGFjZS14LTFcIj5cbiAgICAgICAgICB7c2V0dGluZ3MuaXNEYXJrTW9kZSAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMiBoLTIgYmctYmx1ZS01MDAgcm91bmRlZC1mdWxsXCIgdGl0bGU9XCJEYXJrIE1vZGUgQWN0aXZlXCIgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHshc2V0dGluZ3MudXNlVGVzdERhdGEgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTIgaC0yIGJnLWdyZWVuLTUwMCByb3VuZGVkLWZ1bGxcIiB0aXRsZT1cIkxpdmUgRGF0YSBBY3RpdmVcIiAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAgeyFzZXR0aW5ncy5pc0F1dG9QbGF5RW5hYmxlZCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMiBoLTIgYmcteWVsbG93LTUwMCByb3VuZGVkLWZ1bGxcIiB0aXRsZT1cIkF1dG8gUGxheSBEaXNhYmxlZFwiIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0xpbms+XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsIkxpbmsiLCJ1c2VBcHBDb250ZXh0IiwiR2xvYmFsQ29udHJvbHNOYXYiLCJzZXR0aW5ncyIsImRpdiIsImNsYXNzTmFtZSIsImhyZWYiLCJzdmciLCJmaWxsIiwic3Ryb2tlIiwidmlld0JveCIsInBhdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJzcGFuIiwiaXNEYXJrTW9kZSIsInRpdGxlIiwidXNlVGVzdERhdGEiLCJpc0F1dG9QbGF5RW5hYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/components/shared/GlobalControlsNav.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/context/AppContext.tsx":
/*!****************************************!*\
  !*** ./src/lib/context/AppContext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: () => (/* binding */ AppProvider),\n/* harmony export */   useAppContext: () => (/* binding */ useAppContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AppProvider,useAppContext auto */ \n\n// Default light mode colors\nconst defaultLightColors = {\n    years_at_medtronic: {\n        \"0-5\": \"#FF6B6B\",\n        \"6-10\": \"#4ECDC4\",\n        \"11-15\": \"#45B7D1\",\n        \"16-20\": \"#96CEB4\",\n        \"20+\": \"#FFEAA7\"\n    },\n    peak_performance: {\n        \"individual\": \"#FF6B6B\",\n        \"innovation\": \"#4ECDC4\",\n        \"leadership\": \"#45B7D1\",\n        \"crisis\": \"#96CEB4\",\n        \"team\": \"#FFEAA7\"\n    },\n    learning_style: {\n        \"visual\": \"#FF6B6B\",\n        \"auditory\": \"#4ECDC4\",\n        \"kinesthetic\": \"#45B7D1\",\n        \"reading_writing\": \"#96CEB4\"\n    },\n    motivation: {\n        \"autonomy\": \"#FF6B6B\",\n        \"recognition\": \"#4ECDC4\",\n        \"impact\": \"#45B7D1\",\n        \"purpose\": \"#96CEB4\",\n        \"growth\": \"#FFEAA7\"\n    },\n    shaped_by: {\n        \"mentor\": \"#FF6B6B\",\n        \"other\": \"#4ECDC4\",\n        \"failure\": \"#45B7D1\",\n        \"education\": \"#96CEB4\",\n        \"challenge\": \"#FFEAA7\"\n    }\n};\n// Default dark mode colors - enhanced versions with better contrast\nconst defaultDarkColors = {\n    years_at_medtronic: {\n        \"0-5\": \"#FF8A8A\",\n        \"6-10\": \"#6EDCD4\",\n        \"11-15\": \"#65C7F1\",\n        \"16-20\": \"#B6DEC4\",\n        \"20+\": \"#FFED87\"\n    },\n    peak_performance: {\n        \"individual\": \"#FF8A8A\",\n        \"innovation\": \"#6EDCD4\",\n        \"leadership\": \"#65C7F1\",\n        \"crisis\": \"#B6DEC4\",\n        \"team\": \"#FFED87\"\n    },\n    learning_style: {\n        \"visual\": \"#FF8A8A\",\n        \"auditory\": \"#6EDCD4\",\n        \"kinesthetic\": \"#65C7F1\",\n        \"reading_writing\": \"#B6DEC4\"\n    },\n    motivation: {\n        \"autonomy\": \"#FF8A8A\",\n        \"recognition\": \"#6EDCD4\",\n        \"impact\": \"#65C7F1\",\n        \"purpose\": \"#B6DEC4\",\n        \"growth\": \"#FFED87\"\n    },\n    shaped_by: {\n        \"mentor\": \"#FF8A8A\",\n        \"other\": \"#6EDCD4\",\n        \"failure\": \"#65C7F1\",\n        \"education\": \"#B6DEC4\",\n        \"challenge\": \"#FFED87\"\n    }\n};\n// Default settings\nconst defaultSettings = {\n    categoryColors: {\n        light: defaultLightColors,\n        dark: defaultDarkColors\n    },\n    isDarkMode: false,\n    useTestData: true,\n    autoPlaySpeed: 5000,\n    isAutoPlayEnabled: true\n};\n// Create the context\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component\nconst AppProvider = ({ children })=>{\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultSettings);\n    const updateCategoryColor = (category, answer, color, theme)=>{\n        const targetTheme = theme || (settings.isDarkMode ? \"dark\" : \"light\");\n        setSettings((prev)=>({\n                ...prev,\n                categoryColors: {\n                    ...prev.categoryColors,\n                    [targetTheme]: {\n                        ...prev.categoryColors[targetTheme],\n                        [category]: {\n                            ...prev.categoryColors[targetTheme][category],\n                            [answer]: color\n                        }\n                    }\n                }\n            }));\n    };\n    const toggleDarkMode = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                isDarkMode: !prev.isDarkMode\n            }));\n    };\n    const toggleTestData = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                useTestData: !prev.useTestData\n            }));\n    };\n    const updateAutoPlaySpeed = (speed)=>{\n        setSettings((prev)=>({\n                ...prev,\n                autoPlaySpeed: speed\n            }));\n    };\n    const toggleAutoPlay = ()=>{\n        setSettings((prev)=>({\n                ...prev,\n                isAutoPlayEnabled: !prev.isAutoPlayEnabled\n            }));\n    };\n    const resetToDefaults = ()=>{\n        setSettings(defaultSettings);\n    };\n    const getCurrentThemeColors = ()=>{\n        return settings.isDarkMode ? settings.categoryColors.dark : settings.categoryColors.light;\n    };\n    const value = {\n        settings,\n        updateCategoryColor,\n        toggleDarkMode,\n        toggleTestData,\n        updateAutoPlaySpeed,\n        toggleAutoPlay,\n        resetToDefaults,\n        getCurrentThemeColors\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\lib\\\\context\\\\AppContext.tsx\",\n        lineNumber: 207,\n        columnNumber: 5\n    }, undefined);\n};\n// Custom hook to use the context\nconst useAppContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (context === undefined) {\n        throw new Error(\"useAppContext must be used within an AppProvider\");\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/context/AppContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase/client */ \"(ssr)/./src/lib/supabase/client.ts\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// Deprecated: use src/lib/supabase/client.ts instead\n\n\nconst supabaseUrl = \"https://hdnyomaryleszrjbuprt.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHFEQUFxRDtBQUNuQjtBQUVtQjtBQUVyRCxNQUFNQyxjQUFjQywwQ0FBb0MsSUFBSTtBQUM1RCxNQUFNRyxrQkFBa0JILGtOQUF5QyxJQUFJO0FBRTlELE1BQU1LLFdBQVdQLG1FQUFZQSxDQUFDQyxhQUFhSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWR0cm9uaWMtd2Utc3VtbWl0Ly4vc3JjL2xpYi9zdXBhYmFzZS50cz8wNmUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlcHJlY2F0ZWQ6IHVzZSBzcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cyBpbnN0ZWFkXG5leHBvcnQgKiBmcm9tICcuL3N1cGFiYXNlL2NsaWVudCc7XG5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkgfHwgJyc7XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTsgIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./src/lib/supabase/client.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/client.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(ssr)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Use this file as the single source for the Supabase client throughout the app.\nconsole.log(\"SUPABASE URL:\", \"https://hdnyomaryleszrjbuprt.supabase.co\");\nconsole.log(\"SUPABASE ANON KEY:\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\");\nif (false) {}\nif (false) {}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://hdnyomaryleszrjbuprt.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhkbnlvbWFyeWxlc3pyamJ1cHJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcxNjk3NjksImV4cCI6MjA2Mjc0NTc2OX0.r80QFTMzDyndIj4dhBEjhmrDMBUSzaYvhCk0fxHM2HU\", {\n    auth: {\n        persistSession: true,\n        autoRefreshToken: true,\n        detectSessionInUrl: true\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUdyRCxpRkFBaUY7QUFFakZDLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJDLDBDQUFvQztBQUNqRUYsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQkMsa05BQXlDO0FBRTNFLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELElBQUksS0FBMEMsRUFBRSxFQUUvQztBQUVNLE1BQU1LLFdBQVdSLG1FQUFZQSxDQUNsQ0csMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7SUFDRU0sTUFBTTtRQUNKQyxnQkFBZ0I7UUFDaEJDLGtCQUFrQjtRQUNsQkMsb0JBQW9CO0lBQ3RCO0FBQ0YsR0FDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvbGliL3N1cGFiYXNlL2NsaWVudC50cz8wZjk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5pbXBvcnQgdHlwZSB7IERhdGFiYXNlIH0gZnJvbSAnLi90eXBlcyc7XG5cbi8vIFVzZSB0aGlzIGZpbGUgYXMgdGhlIHNpbmdsZSBzb3VyY2UgZm9yIHRoZSBTdXBhYmFzZSBjbGllbnQgdGhyb3VnaG91dCB0aGUgYXBwLlxuXG5jb25zb2xlLmxvZygnU1VQQUJBU0UgVVJMOicsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCk7XG5jb25zb2xlLmxvZygnU1VQQUJBU0UgQU5PTiBLRVk6JywgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkpO1xuXG5pZiAoIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcpO1xufVxuaWYgKCFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZJyk7XG59XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudDxEYXRhYmFzZT4oXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcbiAge1xuICAgIGF1dGg6IHtcbiAgICAgIHBlcnNpc3RTZXNzaW9uOiB0cnVlLFxuICAgICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcbiAgICAgIGRldGVjdFNlc3Npb25JblVybDogdHJ1ZSxcbiAgICB9LFxuICB9XG4pOyAiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsIkVycm9yIiwic3VwYWJhc2UiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwiZGV0ZWN0U2Vzc2lvbkluVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/supabase/client.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"4d1036911b6d\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/MTVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjRkMTAzNjkxMWI2ZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers */ \"(rsc)/./src/app/providers.tsx\");\n\n\n\n\nconst metadata = {\n    title: \"Medtronic WE Summit\",\n    description: \"Data visualization platform for the Medtronic WE Summit\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: (next_font_google_target_css_path_src_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_3___default().className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_providers__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 21,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBS01BO0FBSGlCO0FBQ21CO0FBSW5DLE1BQU1FLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFFO0FBRWEsU0FBU0MsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7UUFBS0MsV0FBV1QsK0pBQWU7a0JBQ3hDLDRFQUFDVTtzQkFDQyw0RUFBQ1Qsa0RBQWVBOzBCQUNiSzs7Ozs7Ozs7Ozs7Ozs7OztBQUtYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVkdHJvbmljLXdlLXN1bW1pdC8uL3NyYy9hcHAvbGF5b3V0LnRzeD81N2E5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWV0YWRhdGEgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IEludGVyIH0gZnJvbSAnbmV4dC9mb250L2dvb2dsZSc7XG5pbXBvcnQgJy4vZ2xvYmFscy5jc3MnO1xuaW1wb3J0IENsaWVudFByb3ZpZGVycyBmcm9tICcuL3Byb3ZpZGVycyc7XG5cbmNvbnN0IGludGVyID0gSW50ZXIoeyBzdWJzZXRzOiBbJ2xhdGluJ10gfSk7XG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiAnTWVkdHJvbmljIFdFIFN1bW1pdCcsXG4gIGRlc2NyaXB0aW9uOiAnRGF0YSB2aXN1YWxpemF0aW9uIHBsYXRmb3JtIGZvciB0aGUgTWVkdHJvbmljIFdFIFN1bW1pdCcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59KSB7XG4gIHJldHVybiAoXG4gICAgPGh0bWwgbGFuZz1cImVuXCIgY2xhc3NOYW1lPXtpbnRlci5jbGFzc05hbWV9PlxuICAgICAgPGJvZHk+XG4gICAgICAgIDxDbGllbnRQcm92aWRlcnM+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0NsaWVudFByb3ZpZGVycz5cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJpbnRlciIsIkNsaWVudFByb3ZpZGVycyIsIm1ldGFkYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIlJvb3RMYXlvdXQiLCJjaGlsZHJlbiIsImh0bWwiLCJsYW5nIiwiY2xhc3NOYW1lIiwiYm9keSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/providers.tsx":
/*!*******************************!*\
  !*** ./src/app/providers.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$typeof: () => (/* binding */ $$typeof),
/* harmony export */   __esModule: () => (/* binding */ __esModule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\app\providers.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__default__);

/***/ }),

/***/ "(rsc)/./src/app/visualization/page.tsx":
/*!****************************************!*\
  !*** ./src/app/visualization/page.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VisualizationPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_DataVisualization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/DataVisualization */ \"(rsc)/./src/components/DataVisualization/index.tsx\");\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/Layout */ \"(rsc)/./src/components/Layout.tsx\");\n\n\n\nfunction VisualizationPage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"fixed inset-0 w-screen h-screen bg-gray-50 z-0\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_DataVisualization__WEBPACK_IMPORTED_MODULE_1__.DataVisualization, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n                lineNumber: 8,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n            lineNumber: 7,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\artin\\\\Downloads\\\\MEDTRONIC\\\\MEDTRONIC\\\\src\\\\app\\\\visualization\\\\page.tsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL3Zpc3VhbGl6YXRpb24vcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1FO0FBQzFCO0FBRTFCLFNBQVNFO0lBQ3RCLHFCQUNFLDhEQUFDRCwwREFBTUE7a0JBQ0wsNEVBQUNFO1lBQUlDLFdBQVU7c0JBQ2IsNEVBQUNKLDRFQUFpQkE7Ozs7Ozs7Ozs7Ozs7OztBQUkxQiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZHRyb25pYy13ZS1zdW1taXQvLi9zcmMvYXBwL3Zpc3VhbGl6YXRpb24vcGFnZS50c3g/NTE3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhVmlzdWFsaXphdGlvbiB9IGZyb20gJ0AvY29tcG9uZW50cy9EYXRhVmlzdWFsaXphdGlvbic7XG5pbXBvcnQgTGF5b3V0IGZyb20gJ0AvY29tcG9uZW50cy9MYXlvdXQnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBWaXN1YWxpemF0aW9uUGFnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBpbnNldC0wIHctc2NyZWVuIGgtc2NyZWVuIGJnLWdyYXktNTAgei0wXCI+XG4gICAgICAgIDxEYXRhVmlzdWFsaXphdGlvbiAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJEYXRhVmlzdWFsaXphdGlvbiIsIkxheW91dCIsIlZpc3VhbGl6YXRpb25QYWdlIiwiZGl2IiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/visualization/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/components/DataVisualization/index.tsx":
/*!****************************************************!*\
  !*** ./src/components/DataVisualization/index.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataVisualization: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\DataVisualization\index.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\DataVisualization\index.tsx#DataVisualization`);


/***/ }),

/***/ "(rsc)/./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $$typeof: () => (/* binding */ $$typeof),
/* harmony export */   __esModule: () => (/* binding */ __esModule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`C:\Users\artin\Downloads\MEDTRONIC\MEDTRONIC\src\components\Layout.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__default__);

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/d3-array","vendor-chunks/d3-shape","vendor-chunks/d3-geo","vendor-chunks/@supabase","vendor-chunks/d3-selection","vendor-chunks/d3-scale-chromatic","vendor-chunks/d3-hierarchy","vendor-chunks/d3-transition","vendor-chunks/d3-interpolate","vendor-chunks/d3-scale","vendor-chunks/d3-random","vendor-chunks/d3-format","vendor-chunks/d3-quadtree","vendor-chunks/ws","vendor-chunks/d3-sankey","vendor-chunks/d3-time","vendor-chunks/d3-force","vendor-chunks/d3-ease","vendor-chunks/d3-contour","vendor-chunks/d3-fetch","vendor-chunks/d3-polygon","vendor-chunks/robust-predicates","vendor-chunks/d3-zoom","vendor-chunks/d3-drag","vendor-chunks/d3-color","vendor-chunks/d3-chord","vendor-chunks/lucide-react","vendor-chunks/d3-time-format","vendor-chunks/d3-dsv","vendor-chunks/d3-delaunay","vendor-chunks/d3-brush","vendor-chunks/whatwg-url","vendor-chunks/jose","vendor-chunks/d3-timer","vendor-chunks/d3-axis","vendor-chunks/isows","vendor-chunks/d3-path","vendor-chunks/d3-dispatch","vendor-chunks/tr46","vendor-chunks/internmap","vendor-chunks/delaunator","vendor-chunks/d3","vendor-chunks/webidl-conversions","vendor-chunks/set-cookie-parser"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fvisualization%2Fpage&page=%2Fvisualization%2Fpage&appPaths=%2Fvisualization%2Fpage&pagePath=private-next-app-dir%2Fvisualization%2Fpage.tsx&appDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cartin%5CDownloads%5CMEDTRONIC%5CMEDTRONIC&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();